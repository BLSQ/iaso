# Generated by Django 3.2.15 on 2023-04-04 06:45

from django.db import migrations
from django.contrib.auth.models import Group, Permission


def add_user_roles_and_permissions(groups, permissions):
    groups = {
        "System administrator": {"excluded_permissions": []},
        "Admin project": {
            "excluded_permissions": ["iaso_data_tasks", "iaso_reports", "iaso_polio_budget_admin" "iaso_polio"]
        },
        "National data managers": {
            "excluded_permissions": [
                "iaso_mappings",
                "iaso_links",
                "iaso_sources",
                "iaso_data_tasks",
                "iaso_reports",
                "iaso_polio_budget_admin" "iaso_polio",
            ]
        },
        "District data managers": {
            "included_permissions": [
                "iaso_forms",
                "iaso_submissions",
                "iaso_update_submission",
                "iaso_users",
                "iaso_planning",
                "iaso_teams",
                "iaso_assignments",
                "iaso_completeness_stats",
                "iaso_workflows",
            ]
        },
        "Collectors": {"included_permissions": ["iaso_submissions", "iaso_planning", "iaso_completeness_stats"]},
    }

    permissions = [
        "iaso_forms",
        "iaso_submissions",
        "iaso_update_submission",
        "iaso_mappings",
        "iaso_completeness",
        "iaso_org_units",
        "iaso_links",
        "iaso_users",
        "iaso_projects",
        "iaso_sources",
        "iaso_data_tasks",
        "iaso_reports",
        "iaso_planning",
        "iaso_teams",
        "iaso_assignments",
        "iaso_entities",
        "iaso_storages",
        "iaso_completeness_stats",
        "iaso_workflows",
        "iaso_polio_budget_admin",
        "iaso_polio",
    ]

    for group in groups:
        if "excluded_permissions" in groups[group]:
            included_permissions_codes = [
                permission
                for index, permission in enumerate(permissions)
                if permission not in groups[group]["excluded_permissions"]
            ]
        if "included_permissions" in groups[group]:
            included_permissions_codes = groups[group]["included_permissions"]
        included_permissions = Permission.objects.filter(codename__in=included_permissions_codes)
        created_group, is_created = Group.objects.get_or_create(name=group)
        if is_created:
            created_group.permissions.add(*list(included_permissions.values_list("id", flat=True)))


def backwards(groups, permissions):
    return None


class Migration(migrations.Migration):

    dependencies = [
        ("iaso", "0197_formpredefinedfilter"),
    ]

    operations = [migrations.RunPython(add_user_roles_and_permissions, backwards)]
