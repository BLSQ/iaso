# Generated by Django 4.2.22 on 2025-09-07 20:08

import django.db.models.deletion

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("iaso", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Beneficiary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("birth_date", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("Male", "Male"), ("Female", "Female")],
                        max_length=8,
                        null=True,
                    ),
                ),
                ("entity_id", models.IntegerField(blank=True, null=True)),
                (
                    "account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="iaso.account",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Journey",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "admission_criteria",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("muac", "MUAC"),
                            ("whz", "WHZ"),
                            ("oedema", "OEDEMA"),
                            ("child_wasted", "By wasted child"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "admission_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("new_case", "New case"),
                            (
                                "readmission_as_non_respondent",
                                "Readmission as non-respondent",
                            ),
                            ("referred_from_otp_sam", "Referred from OTP (SAM)"),
                            ("referred_from_sc", "Referred from SC"),
                            ("referred_from_tsfp_mam", "Referred from TSFP (MAM)"),
                            ("relapse", "Relapse"),
                            ("returned_defaulter", "Returned defaulter"),
                            ("returned_referral", "Returned referral"),
                            ("transfer_from_other_tsfp", "Transfer from other TSFP"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "nutrition_programme",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("TSFP", "TSFP"),
                            ("OTP", "OTP"),
                            ("breastfeeding", "Breastfeeding"),
                            ("pregnant", "Pregnant"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "programme_type",
                    models.CharField(
                        blank=True,
                        choices=[("PLW", "PLW"), ("U5", "U5")],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("initial_weight", models.FloatField(default=0)),
                ("discharge_weight", models.FloatField(blank=True, null=True)),
                ("weight_gain", models.FloatField(default=0)),
                ("weight_loss", models.FloatField(default=0)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("duration", models.FloatField(blank=True, null=True)),
                (
                    "exit_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("death", "Death"),
                            ("cured", "Cured"),
                            ("dismissed_due_to_cheating", "Dismissal"),
                            ("voluntary_withdrawal", "Voluntary Withdrawal"),
                            ("transfer_to_otp", "Transfer To OTP"),
                            ("transfer_to_tsfp", "Transfer To TSFP"),
                            ("non_respondent", "Non respondent"),
                            ("transferred_out", "Transferred out"),
                            ("defaulter", "Defaulter"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("instance_id", models.IntegerField(blank=True, null=True)),
                (
                    "beneficiary",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wfp.beneficiary",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Visit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(blank=True, null=True)),
                ("number", models.IntegerField(default=1)),
                ("instance_id", models.IntegerField(blank=True, null=True)),
                (
                    "journey",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wfp.journey",
                    ),
                ),
                (
                    "org_unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="iaso.orgunit",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Step",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assistance_type", models.CharField(max_length=255)),
                ("quantity_given", models.FloatField()),
                (
                    "ration_size",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("full", "Full"),
                            ("partial", "Partial"),
                            ("none", "None"),
                            ("More", "More"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("instance_id", models.IntegerField(blank=True, null=True)),
                (
                    "visit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wfp.visit",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MonthlyStatistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("month", models.CharField(blank=True, max_length=8, null=True)),
                ("year", models.CharField(blank=True, max_length=6, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("Male", "Male"), ("Female", "Female")],
                        max_length=8,
                        null=True,
                    ),
                ),
                (
                    "admission_criteria",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("muac", "MUAC"),
                            ("whz", "WHZ"),
                            ("oedema", "OEDEMA"),
                            ("child_wasted", "By wasted child"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "admission_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("new_case", "New case"),
                            (
                                "readmission_as_non_respondent",
                                "Readmission as non-respondent",
                            ),
                            ("referred_from_otp_sam", "Referred from OTP (SAM)"),
                            ("referred_from_sc", "Referred from SC"),
                            ("referred_from_tsfp_mam", "Referred from TSFP (MAM)"),
                            ("relapse", "Relapse"),
                            ("returned_defaulter", "Returned defaulter"),
                            ("returned_referral", "Returned referral"),
                            ("transfer_from_other_tsfp", "Transfer from other TSFP"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "exit_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("death", "Death"),
                            ("cured", "Cured"),
                            ("dismissed_due_to_cheating", "Dismissal"),
                            ("voluntary_withdrawal", "Voluntary Withdrawal"),
                            ("transfer_to_otp", "Transfer To OTP"),
                            ("transfer_to_tsfp", "Transfer To TSFP"),
                            ("non_respondent", "Non respondent"),
                            ("transferred_out", "Transferred out"),
                            ("defaulter", "Defaulter"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "nutrition_programme",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("TSFP", "TSFP"),
                            ("OTP", "OTP"),
                            ("breastfeeding", "Breastfeeding"),
                            ("pregnant", "Pregnant"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "programme_type",
                    models.CharField(
                        blank=True,
                        choices=[("PLW", "PLW"), ("U5", "U5")],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("number_visits", models.IntegerField(default=0)),
                ("given_sachet_rusf", models.FloatField(blank=True, null=True)),
                ("given_sachet_rutf", models.FloatField(blank=True, null=True)),
                ("given_quantity_csb", models.FloatField(blank=True, null=True)),
                (
                    "given_ration_cbt",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("full", "Full"),
                            ("partial", "Partial"),
                            ("none", "None"),
                            ("More", "More"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="iaso.account",
                    ),
                ),
                (
                    "org_unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="iaso.orgunit",
                    ),
                ),
            ],
        ),
    ]
