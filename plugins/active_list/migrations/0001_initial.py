# Generated by Django 4.2.17 on 2025-04-27 09:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("iaso", "0313_page_superset_dashboard_id_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Import",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("month", models.CharField(max_length=255)),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("source", models.CharField(max_length=255)),
                ("hash_key", models.TextField()),
                ("file_name", models.TextField(unique=True)),
                ("file_check", models.TextField()),
                ("on_time", models.BooleanField(default=False)),
                ("org_unit", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="iaso.orgunit")),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("identifier_code", models.CharField(db_index=True, max_length=255, verbose_name="Code identifiant")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("active", models.BooleanField(default=True, verbose_name="Actif")),
                ("loss_date", models.DateField(blank=True, null=True, verbose_name="Date de perte de suivi")),
            ],
        ),
        migrations.CreateModel(
            name="Validation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("period", models.TextField(db_index=True, verbose_name="Période")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("user_id", models.IntegerField()),
                ("user_name", models.CharField(max_length=255)),
                (
                    "level",
                    models.CharField(
                        choices=[("REGION", "Région"), ("DISTRICT", "District")],
                        max_length=255,
                        verbose_name="Niveau de Validation",
                    ),
                ),
                ("comment", models.TextField(verbose_name="Commentaire")),
                (
                    "validation_status",
                    models.CharField(
                        choices=[("OK", "Validé"), ("INVALID", "Invalide")],
                        max_length=255,
                        null=True,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "org_unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="iaso.orgunit",
                        verbose_name="Unité d'organisation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Record",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("number", models.IntegerField(verbose_name="Numéro")),
                ("region", models.TextField(verbose_name="Région")),
                ("district", models.TextField(verbose_name="District")),
                ("code_ets", models.CharField(max_length=255, verbose_name="Code ETS")),
                ("facility_name", models.TextField(verbose_name="Nom de l'établissement")),
                ("period", models.TextField(db_index=True, verbose_name="Période")),
                ("sex", models.TextField(choices=[("MALE", "H"), ("FEMALE", "F")], verbose_name="Sexe")),
                ("age", models.IntegerField(verbose_name="Âge")),
                ("weight", models.IntegerField(null=True, verbose_name="Poids")),
                ("new_inclusion", models.BooleanField(verbose_name="Nouvelle inclusion")),
                ("transfer_in", models.BooleanField(verbose_name="Transfert entrant")),
                ("return_to_care", models.BooleanField(verbose_name="Retour aux soins")),
                ("tb_hiv", models.BooleanField(verbose_name="TB/VIH")),
                (
                    "hiv_type",
                    models.TextField(
                        choices=[("HIV1", "VIH 1"), ("HIV2", "VIH 2"), ("HIV 1&2", "VIH 1+ VIH 2"), ("UNKNOWN", "")],
                        verbose_name="Type de VIH",
                    ),
                ),
                (
                    "treatment_line",
                    models.TextField(
                        choices=[("1STLINE", "1er Ligne"), ("2NDLINE", "2e Ligne"), ("3RDLINE", "3e Ligne")],
                        verbose_name="Ligne de traitement",
                    ),
                ),
                ("last_dispensation_date", models.DateField(null=True, verbose_name="Date de dernière dispensation")),
                ("days_dispensed", models.IntegerField(null=True, verbose_name="Jours dispensés")),
                ("next_dispensation_date", models.DateField(null=True, verbose_name="Date de prochaine dispensation")),
                ("regimen", models.TextField(null=True, verbose_name="Régime")),
                ("stable", models.IntegerField(null=True, verbose_name="Stable")),
                (
                    "discontinuation_date",
                    models.DateField(blank=True, null=True, verbose_name="Date d'arrêt du traitement"),
                ),
                ("arv_stock_days", models.IntegerField(blank=True, null=True, verbose_name="Jours de stock ARV")),
                ("transfer_out", models.BooleanField(verbose_name="Transfert sortant")),
                ("death", models.BooleanField(verbose_name="Décès")),
                ("art_stoppage", models.BooleanField(verbose_name="Arrêt du traitement ARV")),
                ("served_elsewhere", models.BooleanField(verbose_name="Soigné ailleurs")),
                (
                    "validation_status",
                    models.CharField(
                        choices=[
                            ("WAITING_FOR_VALIDATION", "En attente de Validation"),
                            ("DISTRICT_VALIDATED", "Validé par District"),
                            ("REGION_VALIDATED", "Validé par la Région"),
                        ],
                        default="WAITING_FOR_VALIDATION",
                        max_length=255,
                        null=True,
                        verbose_name="Statut de validation",
                    ),
                ),
                ("received_arv", models.BooleanField(default=False, verbose_name="ARV reçu")),
                ("disappeared", models.BooleanField(default=False, verbose_name="Disparu")),
                (
                    "import_source",
                    models.ForeignKey(
                        choices=[("IASO", "IASO"), ("EXCEL", "Excel")],
                        on_delete=django.db.models.deletion.CASCADE,
                        to="active_list.import",
                        verbose_name="Source d'importation",
                    ),
                ),
                (
                    "org_unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="records",
                        to="iaso.orgunit",
                        verbose_name="Unité organisationnelle",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="patient", to="active_list.patient"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientInactiveEvent",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.DateField(verbose_name="Date de perte de suivi")),
                (
                    "reason",
                    models.TextField(
                        choices=[
                            ("DEATH", "Décès"),
                            ("LOST", "Perte de suivi"),
                            ("ART_STOPPAGE", "Arrêt du traitement ARV"),
                        ],
                        verbose_name="Raison de la perte de suivi",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="lost_event", to="active_list.patient"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="patient",
            name="last_record",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="last_record",
                to="active_list.record",
            ),
        ),
    ]
