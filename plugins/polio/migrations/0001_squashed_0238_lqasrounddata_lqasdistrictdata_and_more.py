# Generated by Django 4.2.24 on 2025-09-22 12:09

import uuid

import django.contrib.postgres.fields
import django.core.serializers.json
import django.core.validators
import django.db.migrations.operations.special
import django.db.models.deletion
import django.utils.timezone

from django.conf import settings
from django.db import migrations, models

import plugins.polio.budget.models
import plugins.polio.models.base


class Migration(migrations.Migration):
    replaces = [
        ("polio", "0001_squashed_0036_auto_20211203_1025"),
        ("polio", "0037_campaign_enable_send_weekly_email"),
        ("polio", "0038_campaign_deleted_at"),
        ("polio", "0039_round_preparedness_spreadsheet_url"),
        ("polio", "0040_round_preparedness_sync_status"),
        ("polio", "0041_move_preparedness_polio"),
        ("polio", "0042_auto_20220121_1434"),
        ("polio", "0043_imstatscache_lqasimcache"),
        ("polio", "0043_auto_20220210_1045"),
        ("polio", "0044_merge_20220224_1136"),
        ("polio", "0045_auto_20220308_1410"),
        ("polio", "0046_campaigngroup"),
        ("polio", "0046_auto_20220323_1055"),
        ("polio", "0047_merge_20220408_0926"),
        ("polio", "0047_campaign_is_test"),
        ("polio", "0048_merge_20220412_0946"),
        ("polio", "0047_campaigngroup_deleted_at"),
        ("polio", "0049_merge_20220412_1146"),
        ("polio", "0050_alter_campaigngroup_campaigns"),
        ("polio", "0051_auto_20220415_1302"),
        ("polio", "0052_polio_migrate_multi_round"),
        ("polio", "0053_alter_round_campaign"),
        ("polio", "0054_alter_round_options"),
        ("polio", "0055_budgetevent_budgetfiles"),
        ("polio", "0056_auto_20220603_1258"),
        ("polio", "0057_budgetevent_budgetfiles"),
        ("polio", "0058_budgetevent_status"),
        ("polio", "0059_alter_budgetfiles_options"),
        ("polio", "0060_auto_20220607_1350"),
        ("polio", "0055_alter_campaign_options"),
        ("polio", "0061_merge_20220609_1404"),
        ("polio", "0062_alter_budgetevent_type"),
        ("polio", "0063_auto_20220614_1537"),
        ("polio", "0064_auto_20220615_1326"),
        ("polio", "0065_auto_20220616_1603"),
        ("polio", "0066_auto_20220620_0902"),
        ("polio", "0067_campaignscope_roundscope"),
        ("polio", "0068_auto_20220718_1414"),
        ("polio", "0069_campaign_separate_scopes_per_round"),
        ("polio", "0067_alter_campaign_enable_send_weekly_email"),
        ("polio", "0068_auto_20220712_0957"),
        ("polio", "0070_merge_20220729_0849"),
        ("polio", "0071_multi_scope"),
        ("polio", "0069_budgetevent_amount"),
        ("polio", "0070_alter_budgetevent_type"),
        ("polio", "0072_merge_0070_alter_budgetevent_type_0071_multi_scope"),
        ("polio", "0071_alter_budgetfiles_event"),
        ("polio", "0073_merge_20220902_0833"),
        ("polio", "0074_round_doses_requested"),
        ("polio", "0075_migrate_doses_requested"),
        ("polio", "0076_roundvaccine_shipment"),
        ("polio", "0077_auto_20220915_1312"),
        ("polio", "0078_auto_20220920_1212"),
        ("polio", "0079_auto_20220921_0910"),
        ("polio", "0080_auto_20220921_0943"),
        ("polio", "0081_alter_roundvaccine_wastage_ratio_forecast"),
        ("polio", "0082_alter_roundvaccine_wastage_ratio_forecast"),
        ("polio", "0083_auto_20221003_1252"),
        ("polio", "0084_alter_budgetstep_created_by_team"),
        ("polio", "0085_auto_20221003_1629"),
        ("polio", "0086_rename_budgetstepfiles_budgetstepfile"),
        ("polio", "0087_budgetstepfile_filename"),
        ("polio", "0088_alter_budgetstep_comment"),
        ("polio", "0089_remove_budgetstep_links"),
        ("polio", "0090_budgetsteplink"),
        ("polio", "0091_budgetsteplink_deleted_at"),
        ("polio", "0092_mailtemplate"),
        ("polio", "0093_alter_mailtemplate_template"),
        ("polio", "0094_auto_20221006_1137"),
        ("polio", "0095_budgetstep_deleted_at"),
        ("polio", "0096_rename_html_template"),
        ("polio", "0097_alter_mailtemplate_html_template"),
        ("polio", "0098_mailtemplate_text_template"),
        ("polio", "0099_rename_template_subject_mailtemplate_subject_template"),
        ("polio", "0100_alter_mailtemplate_subject_template"),
        ("polio", "0096_alter_budgetstep_options"),
        ("polio", "0101_merge_20221012_0822"),
        ("polio", "0102_alter_budgetstep_options"),
        ("polio", "0103_workflowmodel"),
        ("polio", "0104_auto_20221014_1401"),
        ("polio", "0074_campaign_account"),
        ("polio", "0075_assign_existing_campaigns_account"),
        ("polio", "0076_alter_campaign_account"),
        ("polio", "0083_merge_20221021_1135"),
        ("polio", "0105_merge_20221021_1308"),
        ("polio", "0106_auto_20221102_0927"),
        ("polio", "0107_rename_doses_received_shipment_vials_received"),
        ("polio", "0108_shipment_comment"),
        ("polio", "0109_destruction"),
        ("polio", "0110_alter_destruction_round"),
        ("polio", "0106_countryusersgroup_teams"),
        ("polio", "0107_alter_countryusersgroup_teams"),
        ("polio", "0111_merge_20221110_1008"),
        ("polio", "0112_alter_campaign_budget_current_state_key"),
        ("polio", "0111_merge_20221114_1423"),
        ("polio", "0113_merge_20221115_1540"),
        ("polio", "0114_alter_mailtemplate_subject_template"),
        ("polio", "0115_auto_20221222_1330"),
        ("polio", "0116_fill_budgetstep_to_from_node"),
        ("polio", "0115_auto_20221221_1053"),
        ("polio", "0117_merge_20221223_1012"),
        ("polio", "0118_campaign_geojson"),
        ("polio", "0119_alter_campaign_geojson"),
        ("polio", "0120_campaign_fill_geojson"),
        ("polio", "0118_alter_campaign_budget_status"),
        ("polio", "0119_alter_campaign_budget_status"),
        ("polio", "0121_merge_20230112_1017"),
        ("polio", "0122_alter_countryusersgroup_language"),
        ("polio", "0123_make_polio_cron_task_user"),
        ("polio", "0122_auto_20230316_1033"),
        ("polio", "0123_auto_20230316_1038"),
        ("polio", "0124_merge_20230316_1049"),
        ("polio", "0125_campaign_re_submitted_to_orpg_operations1_at_wfeditable"),
        ("polio", "0126_round_percentage_covered_target_population"),
        ("polio", "0127_auto_20230414_0750"),
        ("polio", "0128_config_users"),
        ("polio", "0129_campaign_ra_completed_at_wfeditable"),
        ("polio", "0130_rounddatehistoryentry"),
        ("polio", "0131_auto_20230607_1436"),
        ("polio", "0132_auto_20230607_1527"),
        ("polio", "0133_alter_rounddatehistoryentry_round"),
        ("polio", "0134_add_rounddatehistoryentrey_to_existing_campaigns"),
        ("polio", "0135_alter_rounddatehistoryentry_reason"),
        ("polio", "0136_alter_campaign_payment_mode"),
        ("polio", "0137_alter_rounddatehistoryentry_reason"),
        ("polio", "0138_alter_rounddatehistoryentry_reason"),
        ("polio", "0128_remove_campaign_surge_spreadsheet_url"),
        ("polio", "0129_remove_campaign_country_name_in_surge_spreadsheet"),
        ("polio", "0130_delete_surge"),
        ("polio", "0131_merge_20230502_1228"),
        ("polio", "0139_merge_20230724_1542"),
        ("polio", "0140_vaccineauthorization"),
        ("polio", "0141_alter_vaccineauthorization_expiration_date"),
        ("polio", "0142_alter_vaccineauthorization_expiration_date"),
        ("polio", "0140_alter_rounddatehistoryentry_reason"),
        ("polio", "0143_merge_20230823_1508"),
        ("polio", "0144_alter_vaccineauthorization_status"),
        ("polio", "0145_alter_vaccineauthorization_expiration_date"),
        ("polio", "0146_alter_rounddatehistoryentry_reason"),
        ("polio", "0147_alter_rounddatehistoryentry_reason"),
        ("polio", "0146_vaccineauthorization_start_date"),
        ("polio", "0148_merge_20231013_0907"),
        ("polio", "0149_auto_20231012_1300"),
        ("polio", "0150_vaccinearrivalreport_vaccineprealert_vaccinerequestform"),
        ("polio", "0151_remove_vaccinerequestform_country"),
        ("polio", "0152_auto_20231020_1135"),
        ("polio", "0149_auto_20231013_0940"),
        ("polio", "0150_populate_reasons_for_delay"),
        ("polio", "0151_alter_rounddatehistoryentry_reason"),
        ("polio", "0153_merge_20231106_1026"),
        ("polio", "0154_auto_20231109_1053"),
        ("polio", "0155_auto_20231113_1010"),
        ("polio", "0156_auto_20231117_1150"),
        ("polio", "0157_vaccineprealert_doses_per_vial"),
        ("polio", "0158_auto_20231123_1449"),
        ("polio", "0152_notification_notificationimport"),
        ("polio", "0155_merge_20231124_1047"),
        ("polio", "0159_merge_20231124_1105"),
        ("polio", "0153_alter_notification_vdpv_nucleotide_diff_sabin2"),
        ("polio", "0156_merge_20231205_0938"),
        ("polio", "0160_merge_20231205_1038"),
        ("polio", "0161_destructionreport_incidentreport_outgoingstockmovement_vaccinestock"),
        ("polio", "0161_delete_linelistimport"),
        ("polio", "0162_merge_20231215_1118"),
        ("polio", "0163_move_config_model_data_to_iaso"),
        ("polio", "0164_delete_config"),
        ("polio", "0163_auto_20240123_1435"),
        ("polio", "0164_auto_20240201_1207"),
        ("polio", "0165_merge_0164_auto_20240201_1207_0164_delete_config"),
        ("polio", "0166_vaccinerequestform_target_population"),
        ("polio", "0167_auto_20240226_1352"),
        ("polio", "0168_auto_20240306_1327"),
        ("polio", "0169_auto_20240306_1327"),
        ("polio", "0170_campaigntype_slug"),
        ("polio", "0171_alter_campaigntype_slug"),
        ("polio", "0172_auto_20240325_1207"),
        ("polio", "0173_alter_outgoingstockmovement_usable_vials_used"),
        ("polio", "0174_alter_campaignscope_vaccine_alter_roundscope_vaccine"),
        ("polio", "0175_alter_campaignscope_vaccine_alter_roundscope_vaccine"),
        ("polio", "0176_create_budgetprocess"),
        ("polio", "0177_migrate_budget_data"),
        ("polio", "0178_subactivity_subactivityscope"),
        ("polio", "0179_remove_outgoingstockmovement_usable_vials_used"),
        ("polio", "0180_rename_unusable_vials_outgoingstockmovement_usable_vials_used"),
        ("polio", "0179_round_age_max_round_age_min_round_age_type"),
        ("polio", "0181_merge_20240625_0724"),
        ("polio", "0182_alter_incidentreport_stock_correction"),
        ("polio", "0183_alter_campaign_virus"),
        ("polio", "0184_chronogram_chronogramtemplatetask_chronogramtask"),
        ("polio", "0185_alter_chronogram_round"),
        ("polio", "0186_alter_chronogramtask_status"),
        ("polio", "0187_alter_chronogramtask_status"),
        ("polio", "0188_migrate_chronogramtask_status"),
        ("polio", "0189_chronogramtask_description_new_en_and_more"),
        ("polio", "0190_auto_20240807_0829"),
        ("polio", "0191_remove_chronogramtask_description_and_more"),
        ("polio", "0192_incidentreport_comment_incidentreport_title_and_more"),
        ("polio", "0193_alter_incidentreport_stock_correction"),
        ("polio", "0194_chronogramtask_user_in_charge_new"),
        ("polio", "0195_migrate_chronogramtask_user_in_charge"),
        ("polio", "0196_remove_chronogramtask_user_in_charge_new_and_more"),
        ("polio", "0197_vaccinerequestform_vrf_type_and_more"),
        ("polio", "0198_remove_po_prefix"),
        ("polio", "0198_destructionreport_document_incidentreport_document_and_more"),
        ("polio", "0199_merge_20241022_1441"),
        ("polio", "0199_destructionreport_comment_and_more"),
        ("polio", "0200_merge_20241025_0816"),
        ("polio", "0201_outgoingstockmovement_round"),
        ("polio", "0202_populate_forma_round"),
        ("polio", "0203_auto_20241119_1153"),
        ("polio", "0204_remove_vaccinearrivalreport_deleted_at_and_more"),
        ("polio", "0205_remove_campaign_budget_requested_at_wfeditable_old_and_more"),
        ("polio", "0206_delete_unused_scopes"),
        ("polio", "0201_vaccinestockhistory"),
        ("polio", "0203_merge_20241114_1711"),
        ("polio", "0207_merge_20241204_1433"),
        ("polio", "0208_migrate_vrf_orpg_fields"),
        ("polio", "0209_alter_campaign_virus_alter_campaignscope_vaccine_and_more"),
        ("polio", "0210_alter_campaignscope_vaccine_alter_roundscope_vaccine_and_more"),
        ("polio", "0208_alter_vaccinerequestform_rounds_and_more"),
        ("polio", "0209_merge_20241216_1100"),
        ("polio", "0211_merge_20241218_1038"),
        ("polio", "0212_alter_vaccinerequestform_vaccine_type"),
        ("polio", "0213_alter_vaccinerequestform_vaccine_type"),
        ("polio", "0214_remove_rounddatehistoryentry_reason"),
        ("polio", "0209_subactivity_im_ended_at_subactivity_im_started_at_and_more"),
        ("polio", "0215_merge_20250107_1035"),
        ("polio", "0216_delete_rounds_without_campaign"),
        ("polio", "0217_round_is_test"),
        ("polio", "0218_alter_incidentreport_stock_correction"),
        ("polio", "0219_rename_physical_inventory"),
        ("polio", "0220_alter_incidentreport_stock_correction"),
        ("polio", "0218_earmarkedstock"),
        ("polio", "0221_merge_20250211_1527"),
        ("polio", "0222_data_migration_auto_create_chronograms"),
        ("polio", "0223_destructionreport_created_at_and_more"),
        ("polio", "0224_earmarkedstock_temporary_campaign_name_and_more"),
        ("polio", "0225_campaign_on_hold"),
        ("polio", "0226_move_missing_vials_from_form_A_to_incident_report"),
        ("polio", "0227_remove_missing_vials_from_out_going_stock_movement"),
        ("polio", "0228_alter_incidentreport_stock_correction"),
        ("polio", "0229_replace_losses_by_missing_in_incident_report"),
        ("polio", "0226_destructionreport_document_last_scan_and_more"),
        ("polio", "0230_merge_20250411_1345"),
        ("polio", "0231_rename_is_test_round_on_hold"),
        ("polio", "0232_outgoingstockmovement_non_obr_name_and_more"),
        ("polio", "0233_rename_document_destructionreport_file_and_more"),
        ("polio", "0234_poliopermissionsupport"),
        ("polio", "0235_auto_20250129_1557"),
        ("polio", "0236_alter_notificationimport_file"),
        ("polio", "0237_alter_campaign_group"),
        ("polio", "0238_lqasrounddata_lqasdistrictdata_and_more"),
    ]

    initial = True

    dependencies = [
        ("iaso", "0226_merge_20230724_1245"),
        ("iaso", "0173_storagedevice_org_unit"),
        ("iaso", "0142_merge_20220530_0856"),
        ("iaso", "0335_remove_group_domain"),
        ("iaso", "0151_auto_20220718_1359"),
        ("iaso", "0243_alter_instance_planning"),
        ("iaso", "0167_merge_20220909_1207"),
        ("iaso", "0001_squashed_0343_importgpkg_default_valid"),
        ("iaso", "0337_featureflag_category_featureflag_is_dangerous_and_more"),
        ("iaso", "0162_merge_20220901_1052"),
        ("iaso", "0235_merge_20231006_0940"),
        ("iaso", "0249_merge_20231205_1120"),
        ("iaso", "0291_instance_iaso_instan_created_04174a_idx_and_more"),
        ("iaso", "0261_config"),
        ("iaso", "0279_merge_20240417_1319"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("iaso", "0176_storagedevice_status_updated_at"),
    ]

    operations = [
        migrations.CreateModel(
            name="PolioPermissionSupport",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("iaso_polio", "Polio"),
                    ("iaso_polio_budget", "Budget Polio"),
                    ("iaso_polio_budget_admin", "Budget Polio Admin"),
                    ("iaso_polio_config", "Polio config"),
                    ("iaso_polio_chronogram", "Polio chronogram"),
                    (
                        "iaso_polio_chronogram_restricted_write",
                        "Polio chronogram user (restricted write)",
                    ),
                    ("iaso_polio_notifications", "Polio notifications"),
                    (
                        "iaso_polio_vaccine_authorizations_admin",
                        "Polio Vaccine Authorizations Admin",
                    ),
                    (
                        "iaso_polio_vaccine_authorizations_read_only",
                        "Polio Vaccine Authorizations Read Only",
                    ),
                    (
                        "iaso_polio_vaccine_stock_earmarks_admin",
                        "Polio Vaccine Stock Earmarks Admin",
                    ),
                    (
                        "iaso_polio_vaccine_stock_earmarks_nonadmin",
                        "Polio Vaccine Stock Earmarks Non Admin",
                    ),
                    (
                        "iaso_polio_vaccine_stock_earmarks_read_only",
                        "Polio Vaccine Stock Earmarks Read Only",
                    ),
                    (
                        "iaso_polio_vaccine_stock_management_read",
                        "Polio Vaccine Stock Management Read",
                    ),
                    (
                        "iaso_polio_vaccine_stock_management_read_only",
                        "Polio Vaccine Stock Management Read Only",
                    ),
                    (
                        "iaso_polio_vaccine_stock_management_write",
                        "Polio Vaccine Stock Management Write",
                    ),
                    (
                        "iaso_polio_vaccine_supply_chain_read",
                        "Polio Vaccine Supply Chain Read",
                    ),
                    (
                        "iaso_polio_vaccine_supply_chain_read_only",
                        "Polio Vaccine Supply Chain Read Only",
                    ),
                    (
                        "iaso_polio_vaccine_supply_chain_write",
                        "Polio Vaccine Supply Chain Write",
                    ),
                ),
                "managed": False,
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="BudgetEvent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("submission", "Budget Submission"),
                            ("comments", "Comments"),
                            ("validation", "Approval"),
                            ("request", "Request"),
                            ("feedback", "Feedback"),
                            ("review", "Review"),
                            ("transmission", "Transmission"),
                        ],
                        max_length=200,
                    ),
                ),
                ("internal", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("validation_ongoing", "Validation Ongoing"),
                            ("validated", "Validated"),
                        ],
                        default="validation_ongoing",
                        max_length=200,
                        null=True,
                    ),
                ),
                ("cc_emails", models.CharField(blank=True, max_length=200, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                ("links", models.TextField(blank=True, null=True)),
                ("is_finalized", models.BooleanField(default=False)),
                ("is_email_sent", models.BooleanField(default=False)),
                (
                    "amount",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BudgetProcess",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("status", models.CharField(blank=True, max_length=100, null=True)),
                ("current_state_key", models.CharField(default="-", max_length=100)),
                ("current_state_label", models.CharField(blank=True, max_length=100)),
                ("ra_completed_at_WFEDITABLE", models.DateField(blank=True, null=True)),
                (
                    "who_sent_budget_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "unicef_sent_budget_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "gpei_consolidated_budgets_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "submitted_to_rrt_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "feedback_sent_to_gpei_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "re_submitted_to_rrt_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "submitted_to_orpg_operations1_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "feedback_sent_to_rrt1_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "re_submitted_to_orpg_operations1_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "submitted_to_orpg_wider_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "submitted_to_orpg_operations2_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "feedback_sent_to_rrt2_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "re_submitted_to_orpg_operations2_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "submitted_for_approval_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "feedback_sent_to_orpg_operations_unicef_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "feedback_sent_to_orpg_operations_who_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "approved_by_who_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "approved_by_unicef_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                ("approved_at_WFEDITABLE", models.DateField(blank=True, null=True)),
                (
                    "approval_confirmed_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "payment_mode",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DIRECT", "Direct"),
                            ("DFC", "DFC"),
                            ("MOBILE_PAYMENT", "Mobile Payment"),
                        ],
                        max_length=30,
                    ),
                ),
                ("district_count", models.IntegerField(blank=True, null=True)),
                (
                    "who_disbursed_to_co_at",
                    models.DateField(blank=True, null=True, verbose_name="Disbursed to CO (WHO)"),
                ),
                (
                    "who_disbursed_to_moh_at",
                    models.DateField(blank=True, null=True, verbose_name="Disbursed to MOH (WHO)"),
                ),
                (
                    "unicef_disbursed_to_co_at",
                    models.DateField(blank=True, null=True, verbose_name="Disbursed to CO (UNICEF)"),
                ),
                (
                    "unicef_disbursed_to_moh_at",
                    models.DateField(blank=True, null=True, verbose_name="Disbursed to MOH (UNICEF)"),
                ),
                (
                    "no_regret_fund_amount",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Budget Process",
                "verbose_name_plural": "Budget Processes",
            },
        ),
        migrations.CreateModel(
            name="BudgetStep",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("transition_key", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "amount",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True),
                ),
                ("is_email_sent", models.BooleanField(default=False)),
                (
                    "node_key_from",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "node_key_to",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "budget_process",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="budget_steps",
                        to="polio.budgetprocess",
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="Campaign",
            fields=[
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "epid",
                    models.CharField(blank=True, default=None, max_length=255, null=True),
                ),
                ("obr_name", models.CharField(max_length=255, unique=True)),
                (
                    "is_preventive",
                    models.BooleanField(default=False, help_text="Preventive campaign"),
                ),
                ("is_test", models.BooleanField(default=False)),
                ("on_hold", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "gpei_coordinator",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "gpei_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("separate_scopes_per_round", models.BooleanField(default=False)),
                (
                    "enable_send_weekly_email",
                    models.BooleanField(
                        default=False,
                        help_text="Activate the sending of a reminder email every week.",
                    ),
                ),
                (
                    "geojson",
                    models.JSONField(
                        blank=True,
                        editable=False,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        help_text="GeoJson representing the scope of the campaign",
                        null=True,
                    ),
                ),
                (
                    "creation_email_send_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When and if we sent an email for creation",
                        null=True,
                    ),
                ),
                (
                    "onset_at",
                    models.DateField(blank=True, help_text="When the campaign starts", null=True),
                ),
                (
                    "outbreak_declaration_date",
                    models.DateField(blank=True, null=True, verbose_name="Outbreak declaration date"),
                ),
                (
                    "cvdpv2_notified_at",
                    models.DateField(blank=True, null=True, verbose_name="cVDPV2 Notification"),
                ),
                (
                    "pv_notified_at",
                    models.DateField(blank=True, null=True, verbose_name="PV Notification"),
                ),
                (
                    "pv2_notified_at",
                    models.DateField(blank=True, null=True, verbose_name="PV2 Notification"),
                ),
                (
                    "virus",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PV1", "PV1"),
                            ("PV2", "PV2"),
                            ("PV3", "PV3"),
                            ("cVDPV2", "cVDPV2"),
                            ("WPV1", "WPV1"),
                            ("PV1 & cVDPV2", "PV1 & cVDPV2"),
                            ("cVDPV1 & cVDPV2", "cVDPV1 & cVDPV2"),
                        ],
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "detection_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("ONGOING", "Ongoing"),
                            ("FINISHED", "Finished"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                (
                    "detection_responsible",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("WHO", "WHO"),
                            ("UNICEF", "UNICEF"),
                            ("NAT", "National"),
                            ("MOH", "MOH"),
                            ("PROV", "PROVINCE"),
                            ("DIST", "District"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "detection_first_draft_submitted_at",
                    models.DateField(blank=True, null=True, verbose_name="1st Draft Submission"),
                ),
                (
                    "risk_assessment_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("APPROVED", "Approved"),
                            ("TO_SUBMIT", "To Submit"),
                            ("SUBMITTED", "Submitted"),
                            ("REVIEWED", "Reviewed by RRT"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "risk_assessment_responsible",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("WHO", "WHO"),
                            ("UNICEF", "UNICEF"),
                            ("NAT", "National"),
                            ("MOH", "MOH"),
                            ("PROV", "PROVINCE"),
                            ("DIST", "District"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "investigation_at",
                    models.DateField(blank=True, null=True, verbose_name="Field Investigation Date"),
                ),
                (
                    "risk_assessment_first_draft_submitted_at",
                    models.DateField(blank=True, null=True, verbose_name="1st Draft Submission"),
                ),
                (
                    "risk_assessment_rrt_oprtt_approval_at",
                    models.DateField(blank=True, null=True, verbose_name="RRT/OPRTT Approval"),
                ),
                (
                    "ag_nopv_group_met_at",
                    models.DateField(blank=True, null=True, verbose_name="AG/nOPV Group"),
                ),
                (
                    "dg_authorized_at",
                    models.DateField(blank=True, null=True, verbose_name="DG Authorization"),
                ),
                ("verification_score", models.IntegerField(blank=True, null=True)),
                (
                    "budget_status",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "budget_current_state_key",
                    models.CharField(default="-", max_length=100),
                ),
                (
                    "budget_current_state_label",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("ra_completed_at_WFEDITABLE", models.DateField(blank=True, null=True)),
                (
                    "who_sent_budget_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "unicef_sent_budget_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "gpei_consolidated_budgets_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "submitted_to_rrt_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "feedback_sent_to_gpei_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "re_submitted_to_rrt_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "submitted_to_orpg_operations1_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "feedback_sent_to_rrt1_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "re_submitted_to_orpg_operations1_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "submitted_to_orpg_wider_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "submitted_to_orpg_operations2_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "feedback_sent_to_rrt2_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "re_submitted_to_orpg_operations2_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "submitted_for_approval_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "feedback_sent_to_orpg_operations_unicef_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "feedback_sent_to_orpg_operations_who_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "approved_by_who_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "approved_by_unicef_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                ("approved_at_WFEDITABLE", models.DateField(blank=True, null=True)),
                (
                    "approval_confirmed_at_WFEDITABLE",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "who_disbursed_to_co_at",
                    models.DateField(blank=True, null=True, verbose_name="Disbursed to CO (WHO)"),
                ),
                (
                    "who_disbursed_to_moh_at",
                    models.DateField(blank=True, null=True, verbose_name="Disbursed to MOH (WHO)"),
                ),
                (
                    "unicef_disbursed_to_co_at",
                    models.DateField(blank=True, null=True, verbose_name="Disbursed to CO (UNICEF)"),
                ),
                (
                    "unicef_disbursed_to_moh_at",
                    models.DateField(blank=True, null=True, verbose_name="Disbursed to MOH (UNICEF)"),
                ),
                (
                    "no_regret_fund_amount",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "payment_mode",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DIRECT", "Direct"),
                            ("DFC", "DFC"),
                            ("MOBILE_PAYMENT", "Mobile Payment"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                ("district_count", models.IntegerField(blank=True, null=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="campaigns",
                        to="iaso.account",
                    ),
                ),
            ],
            options={
                "ordering": ["obr_name"],
            },
        ),
        migrations.CreateModel(
            name="CampaignType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Chronogram",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_chronograms",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Chronogram",
            },
        ),
        migrations.CreateModel(
            name="MailTemplate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                (
                    "subject_template",
                    models.TextField(
                        default="Budget for campaign {{campaign.obr_name}} updated to {{node.label}}",
                        help_text="Template for the Email subject, use the Django Template language, see https://docs.djangoproject.com/en/4.1/ref/templates/language/ for reference. Please keep it as one line.",
                        validators=[plugins.polio.budget.models.validator_template],
                    ),
                ),
                (
                    "html_template",
                    models.TextField(
                        help_text="HTML Template for the Email body, use the Django Template language, see https://docs.djangoproject.com/en/4.1/ref/templates/language/ for reference",
                        validators=[plugins.polio.budget.models.validator_template],
                    ),
                ),
                (
                    "text_template",
                    models.TextField(
                        help_text="Plain text Template for the Email body, use the Django Template language, see https://docs.djangoproject.com/en/4.1/ref/templates/language/ for reference",
                        validators=[plugins.polio.budget.models.validator_template],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ReasonForDelay",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                (
                    "name_fr",
                    models.CharField(blank=True, max_length=200, verbose_name="name"),
                ),
                ("name_en", models.CharField(max_length=200, verbose_name="name")),
                (
                    "key_name",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        validators=[django.core.validators.RegexValidator("^[A-Z_]+$")],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reasons_for_delay",
                        to="iaso.account",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Round",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("started_at", models.DateField(blank=True, null=True)),
                ("number", models.IntegerField(blank=True, null=True)),
                ("ended_at", models.DateField(blank=True, null=True)),
                ("age_min", models.IntegerField(blank=True, null=True)),
                ("age_max", models.IntegerField(blank=True, null=True)),
                (
                    "age_type",
                    models.TextField(
                        blank=True,
                        choices=[("YEARS", "years"), ("MONTHS", "months")],
                        null=True,
                    ),
                ),
                ("mop_up_started_at", models.DateField(blank=True, null=True)),
                ("mop_up_ended_at", models.DateField(blank=True, null=True)),
                ("im_started_at", models.DateField(blank=True, null=True)),
                ("im_ended_at", models.DateField(blank=True, null=True)),
                ("lqas_started_at", models.DateField(blank=True, null=True)),
                ("lqas_ended_at", models.DateField(blank=True, null=True)),
                ("target_population", models.IntegerField(blank=True, null=True)),
                ("doses_requested", models.IntegerField(blank=True, null=True)),
                (
                    "cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "im_percentage_children_missed_in_household",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "im_percentage_children_missed_out_household",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "im_percentage_children_missed_in_plus_out_household",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "awareness_of_campaign_planning",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "main_awareness_problem",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("lqas_district_passing", models.IntegerField(blank=True, null=True)),
                ("lqas_district_failing", models.IntegerField(blank=True, null=True)),
                ("on_hold", models.BooleanField(default=False)),
                (
                    "preparedness_spreadsheet_url",
                    models.URLField(blank=True, null=True),
                ),
                (
                    "preparedness_sync_status",
                    models.CharField(
                        choices=[
                            ("QUEUED", "Queued"),
                            ("ONGOING", "Ongoing"),
                            ("FAILURE", "Failed"),
                            ("FINISHED", "Finished"),
                        ],
                        default="FINISHED",
                        max_length=10,
                    ),
                ),
                ("date_signed_vrf_received", models.DateField(blank=True, null=True)),
                ("date_destruction", models.DateField(blank=True, null=True)),
                ("vials_destroyed", models.IntegerField(blank=True, null=True)),
                (
                    "reporting_delays_hc_to_district",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "reporting_delays_district_to_region",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "reporting_delays_region_to_national",
                    models.IntegerField(blank=True, null=True),
                ),
                ("forma_reception", models.DateField(blank=True, null=True)),
                ("forma_missing_vials", models.IntegerField(blank=True, null=True)),
                ("forma_usable_vials", models.IntegerField(blank=True, null=True)),
                ("forma_unusable_vials", models.IntegerField(blank=True, null=True)),
                ("forma_date", models.DateField(blank=True, null=True)),
                ("forma_comment", models.TextField(blank=True, null=True)),
                (
                    "percentage_covered_target_population",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "budget_process",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rounds",
                        to="polio.budgetprocess",
                    ),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="rounds",
                        to="polio.campaign",
                    ),
                ),
            ],
            options={
                "ordering": ["number", "started_at"],
            },
        ),
        migrations.CreateModel(
            name="SpreadSheetImport",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("url", models.URLField()),
                ("content", models.JSONField()),
                ("spread_id", models.CharField(db_index=True, max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="SubActivity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "age_unit",
                    models.CharField(
                        blank=True,
                        choices=[("m", "Months"), ("y", "Years")],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("age_min", models.IntegerField(blank=True, null=True)),
                ("age_max", models.IntegerField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("im_started_at", models.DateField(blank=True, null=True)),
                ("im_ended_at", models.DateField(blank=True, null=True)),
                ("lqas_started_at", models.DateField(blank=True, null=True)),
                ("lqas_ended_at", models.DateField(blank=True, null=True)),
                (
                    "round",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_activities",
                        to="polio.round",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "subactivities",
            },
        ),
        migrations.CreateModel(
            name="VaccineStock",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vaccine",
                    models.CharField(
                        choices=[
                            ("mOPV2", "mOPV2"),
                            ("nOPV2", "nOPV2"),
                            ("bOPV", "bOPV"),
                            ("nOPV2 & bOPV", "nOPV2 & bOPV"),
                        ],
                        max_length=12,
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vaccine_stocks",
                        to="iaso.account",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        help_text="Unique (Country, Vaccine) pair",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="vaccine_stocks",
                        to="iaso.orgunit",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WorkflowModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("definition", models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name="VaccineRequestForm",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("file_last_scan", models.DateTimeField(blank=True, null=True)),
                (
                    "file_scan_status",
                    models.CharField(
                        choices=[
                            ("CLEAN", "Clean"),
                            ("PENDING", "Pending"),
                            ("INFECTED", "Infected"),
                            ("ERROR", "Error"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        storage=plugins.polio.models.base.CustomPublicStorage(),
                        upload_to="public_documents/vrf/",
                    ),
                ),
                (
                    "vaccine_type",
                    models.CharField(
                        choices=[
                            ("mOPV2", "mOPV2"),
                            ("nOPV2", "nOPV2"),
                            ("bOPV", "bOPV"),
                        ],
                        max_length=30,
                    ),
                ),
                ("date_vrf_signature", models.DateField(blank=True, null=True)),
                ("date_vrf_reception", models.DateField(blank=True, null=True)),
                ("date_dg_approval", models.DateField(blank=True, null=True)),
                (
                    "quantities_ordered_in_doses",
                    models.PositiveIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "vrf_type",
                    models.CharField(
                        choices=[
                            ("Normal", "Normal"),
                            ("Missing", "Missing"),
                            ("Not Required", "Not Required"),
                        ],
                        default="Normal",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "wastage_rate_used_on_vrf",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True),
                ),
                (
                    "date_vrf_submission_to_orpg",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "quantities_approved_by_orpg_in_doses",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("date_rrt_orpg_approval", models.DateField(blank=True, null=True)),
                ("date_vrf_submitted_to_dg", models.DateField(blank=True, null=True)),
                (
                    "quantities_approved_by_dg_in_doses",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "target_population",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "campaign",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="polio.campaign"),
                ),
                ("rounds", models.ManyToManyField(db_index=True, to="polio.round")),
            ],
        ),
        migrations.CreateModel(
            name="VaccinePreAlert",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_last_scan", models.DateTimeField(blank=True, null=True)),
                (
                    "file_scan_status",
                    models.CharField(
                        choices=[
                            ("CLEAN", "Clean"),
                            ("PENDING", "Pending"),
                            ("INFECTED", "Infected"),
                            ("ERROR", "Error"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        storage=plugins.polio.models.base.CustomPublicStorage(),
                        upload_to="public_documents/prealert/",
                    ),
                ),
                ("date_pre_alert_reception", models.DateField()),
                (
                    "po_number",
                    models.CharField(blank=True, default=None, max_length=200, null=True, unique=True),
                ),
                (
                    "estimated_arrival_time",
                    models.DateField(blank=True, default=None, null=True),
                ),
                (
                    "lot_numbers",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(blank=True, max_length=200),
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(blank=True, default=None, null=True),
                ),
                (
                    "doses_shipped",
                    models.PositiveIntegerField(blank=True, default=None, null=True),
                ),
                (
                    "doses_per_vial",
                    models.PositiveIntegerField(blank=True, default=None, null=True),
                ),
                (
                    "vials_shipped",
                    models.PositiveIntegerField(blank=True, default=None, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "request_form",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polio.vaccinerequestform",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VaccineAuthorization",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("expiration_date", models.DateField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("quantity", models.IntegerField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ONGOING", "Ongoing"),
                            ("VALIDATED", "Validated"),
                            ("SIGNATURE", "Sent for signature"),
                            ("EXPIRED", "Expired"),
                        ],
                        max_length=200,
                        null=True,
                    ),
                ),
                ("comment", models.TextField(blank=True, max_length=250, null=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="vaccineauthorization",
                        to="iaso.account",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="vaccineauthorization",
                        to="iaso.orgunit",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="VaccineArrivalReport",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("arrival_report_date", models.DateField()),
                ("doses_received", models.PositiveIntegerField()),
                (
                    "po_number",
                    models.CharField(blank=True, default=None, max_length=200, null=True, unique=True),
                ),
                (
                    "lot_numbers",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(blank=True, max_length=200),
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(blank=True, default=None, null=True),
                ),
                (
                    "doses_shipped",
                    models.PositiveIntegerField(blank=True, default=None, null=True),
                ),
                (
                    "doses_per_vial",
                    models.PositiveIntegerField(blank=True, default=None, null=True),
                ),
                (
                    "vials_shipped",
                    models.PositiveIntegerField(blank=True, default=None, null=True),
                ),
                (
                    "vials_received",
                    models.PositiveIntegerField(blank=True, default=None, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "request_form",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polio.vaccinerequestform",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="URLCache",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.URLField(unique=True)),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SubActivityScope",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vaccine",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("mOPV2", "mOPV2"),
                            ("nOPV2", "nOPV2"),
                            ("bOPV", "bOPV"),
                            ("nOPV2 & bOPV", "nOPV2 & bOPV"),
                        ],
                        max_length=12,
                    ),
                ),
                (
                    "group",
                    models.OneToOneField(
                        default=plugins.polio.models.base.make_group_subactivity_scope,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subactivityScope",
                        to="iaso.group",
                    ),
                ),
                (
                    "subactivity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scopes",
                        to="polio.subactivity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoundScope",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vaccine",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("mOPV2", "mOPV2"),
                            ("nOPV2", "nOPV2"),
                            ("bOPV", "bOPV"),
                            ("nOPV2 & bOPV", "nOPV2 & bOPV"),
                        ],
                        max_length=12,
                    ),
                ),
                (
                    "group",
                    models.OneToOneField(
                        default=plugins.polio.models.base.make_group_round_scope,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roundScope",
                        to="iaso.group",
                    ),
                ),
                (
                    "round",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scopes",
                        to="polio.round",
                    ),
                ),
            ],
            options={
                "ordering": ["round", "vaccine"],
            },
        ),
        migrations.CreateModel(
            name="RoundDateHistoryEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("previous_started_at", models.DateField(blank=True, null=True)),
                ("previous_ended_at", models.DateField(blank=True, null=True)),
                ("started_at", models.DateField(blank=True, null=True)),
                ("ended_at", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reason_for_delay",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="round_history_entries",
                        to="polio.reasonfordelay",
                    ),
                ),
                (
                    "round",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="datelogs",
                        to="polio.round",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Preparedness",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("spreadsheet_url", models.URLField()),
                (
                    "national_score",
                    models.DecimalField(decimal_places=2, max_digits=10, verbose_name="National Score"),
                ),
                (
                    "regional_score",
                    models.DecimalField(decimal_places=2, max_digits=10, verbose_name="Regional Score"),
                ),
                (
                    "district_score",
                    models.DecimalField(decimal_places=2, max_digits=10, verbose_name="District Score"),
                ),
                ("payload", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "campaign",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="polio.campaign"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OutgoingStockMovement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_last_scan", models.DateTimeField(blank=True, null=True)),
                (
                    "file_scan_status",
                    models.CharField(
                        choices=[
                            ("CLEAN", "Clean"),
                            ("PENDING", "Pending"),
                            ("INFECTED", "Infected"),
                            ("ERROR", "Error"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        storage=plugins.polio.models.base.CustomPublicStorage(),
                        upload_to="public_documents/forma/",
                    ),
                ),
                ("report_date", models.DateField()),
                ("form_a_reception_date", models.DateField()),
                ("usable_vials_used", models.PositiveIntegerField()),
                (
                    "lot_numbers",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(blank=True, max_length=200),
                        default=list,
                        size=None,
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                ("non_obr_name", models.CharField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polio.campaign",
                    ),
                ),
                (
                    "round",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polio.round",
                    ),
                ),
                (
                    "vaccine_stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polio.vaccinestock",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NotificationImport",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_last_scan", models.DateTimeField(blank=True, null=True)),
                (
                    "file_scan_status",
                    models.CharField(
                        choices=[
                            ("CLEAN", "Clean"),
                            ("PENDING", "Pending"),
                            ("INFECTED", "Infected"),
                            ("ERROR", "Error"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                (
                    "file",
                    models.FileField(upload_to="uploads/polio_notifications/%Y-%m-%d-%H-%M/"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("pending", "Pending"),
                            ("done", "Done"),
                        ],
                        default="new",
                        max_length=10,
                    ),
                ),
                (
                    "errors",
                    models.JSONField(
                        blank=True,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "account",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="iaso.account"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="polio_notification_import_created_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification import",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("epid_number", models.CharField(max_length=50, unique=True)),
                (
                    "vdpv_category",
                    models.CharField(
                        choices=[
                            ("avdpv", "aVDPV"),
                            ("cvdpv1", "cVDPV1"),
                            ("cvdpv2", "cVDPV2"),
                            ("nopv2", "nOPV2"),
                            ("sabin", "Sabin"),
                            ("sabin1", "SABIN 1"),
                            ("sabin2", "SABIN 2"),
                            ("sabin3", "SABIN 3"),
                            ("vdpv", "VDPV"),
                            ("vdpv1", "VDPV1"),
                            ("vdpv2", "VDPV2"),
                            ("vdpv3", "VDPV3"),
                            ("vpv2", "VPV2"),
                            ("wpv1", "WPV1"),
                        ],
                        default="avdpv",
                        max_length=20,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("accute_flaccid_paralysis", "Accute Flaccid Paralysis"),
                            ("contact_case", "Contact Case"),
                            ("community", "Community"),
                            ("contact", "Contact"),
                            ("environmental", "Environmental"),
                            ("healthy_children", "Healthy Children"),
                            ("other", "Other"),
                        ],
                        default="accute_flaccid_paralysis",
                        max_length=50,
                    ),
                ),
                (
                    "vdpv_nucleotide_diff_sabin2",
                    models.CharField(blank=True, max_length=10),
                ),
                ("lineage", models.CharField(blank=True, max_length=150)),
                ("closest_match_vdpv2", models.CharField(blank=True, max_length=150)),
                ("date_of_onset", models.DateField(blank=True, null=True)),
                ("date_results_received", models.DateField(blank=True, null=True)),
                ("site_name", models.CharField(blank=True, max_length=255)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "import_raw_data",
                    models.JSONField(
                        blank=True,
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        null=True,
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="iaso.account"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="polio_notification_created_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "import_source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="polio.notificationimport",
                    ),
                ),
                (
                    "org_unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="polio_notifications",
                        to="iaso.orgunit",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="polio_notification_updated_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
            },
        ),
        migrations.CreateModel(
            name="LqasRoundData",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lqas_failed", models.IntegerField()),
                ("lqas_passed", models.IntegerField()),
                ("lqas_no_data", models.IntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("1lqasOK", "1lqasOK"),
                            ("2lqasDisqualified", "2lqasDisqualified"),
                            ("3lqaspoor", "3lqaspoor"),
                            ("3lqasverypoor", "3lqasverypoor"),
                            ("3lqasFail", "3lqasFail"),
                            ("3lqasmoderate", "3lqasmoderate"),
                            ("3lqasundersampled", "3lqasundersampled"),
                            ("3lqasoversampled", "3lqasoversampled"),
                            ("inScope", "inScope"),
                        ],
                        default="inScope",
                        max_length=20,
                    ),
                ),
                ("nfm_other", models.IntegerField()),
                ("nfm_child_absent", models.IntegerField()),
                ("nfm_non_compliance", models.IntegerField()),
                ("nfm_child_was_asleep", models.IntegerField()),
                ("nfm_house_not_visited", models.IntegerField()),
                ("nfm_child_is_a_visitor", models.IntegerField()),
                ("nfm_vaccinated_but_not_fm", models.IntegerField()),
                ("abs_farm", models.IntegerField()),
                ("abs_other", models.IntegerField()),
                ("abs_market", models.IntegerField()),
                ("abs_school", models.IntegerField()),
                ("abs_travelled", models.IntegerField()),
                ("abs_in_playground", models.IntegerField()),
                ("abs_unknown", models.IntegerField()),
                (
                    "round",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="polio.round"),
                ),
                (
                    "subactivity",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polio.subactivity",
                    ),
                ),
            ],
            options={
                "verbose_name": "LQAS Round Data",
                "verbose_name_plural": "LQAS Round Data",
            },
        ),
        migrations.CreateModel(
            name="LqasDistrictData",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_children_fmd", models.IntegerField()),
                ("total_children_checked", models.IntegerField()),
                ("total_sites_visited", models.IntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("1lqasOK", "1lqasOK"),
                            ("2lqasDisqualified", "2lqasDisqualified"),
                            ("3lqaspoor", "3lqaspoor"),
                            ("3lqasverypoor", "3lqasverypoor"),
                            ("3lqasFail", "3lqasFail"),
                            ("3lqasmoderate", "3lqasmoderate"),
                            ("3lqasundersampled", "3lqasundersampled"),
                            ("3lqasoversampled", "3lqasoversampled"),
                            ("inScope", "inScope"),
                        ],
                        default="inScope",
                        max_length=20,
                    ),
                ),
                ("cg_ratio", models.FloatField(blank=True, null=True)),
                ("cg_best_info_source", models.CharField(blank=True)),
                ("cg_best_info_ratio", models.FloatField(blank=True, null=True)),
                ("cg_caregivers_informed", models.IntegerField(blank=True, null=True)),
                (
                    "cg_caregivers_informed_ratio",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "district",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="iaso.orgunit"),
                ),
                (
                    "round",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="polio.round"),
                ),
                (
                    "subactivity",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polio.subactivity",
                    ),
                ),
            ],
            options={
                "verbose_name": "LQAS Entry",
                "verbose_name_plural": "LQAS Entries",
            },
        ),
        migrations.CreateModel(
            name="IncidentReport",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_last_scan", models.DateTimeField(blank=True, null=True)),
                (
                    "file_scan_status",
                    models.CharField(
                        choices=[
                            ("CLEAN", "Clean"),
                            ("PENDING", "Pending"),
                            ("INFECTED", "Infected"),
                            ("ERROR", "Error"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        storage=plugins.polio.models.base.CustomPublicStorage(),
                        upload_to="public_documents/incidentreport/",
                    ),
                ),
                (
                    "stock_correction",
                    models.CharField(
                        choices=[
                            (
                                "vvm_reached_discard_point",
                                "VVM reached the discard point",
                            ),
                            ("vaccine_expired", "Vaccine expired"),
                            ("missing", "Missing"),
                            ("return", "Return"),
                            ("stealing", "Stealing"),
                            ("physical_inventory_add", "Add to Physical Inventory"),
                            (
                                "physical_inventory_remove",
                                "remove from Physical Inventory",
                            ),
                            ("broken", "Broken"),
                            ("unreadable_label", "Unreadable label"),
                        ],
                        default="vvm_reached_discard_point",
                        max_length=50,
                    ),
                ),
                ("title", models.CharField(max_length=255, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                ("date_of_incident_report", models.DateField()),
                ("incident_report_received_by_rrt", models.DateField()),
                ("unusable_vials", models.PositiveIntegerField()),
                ("usable_vials", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "vaccine_stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polio.vaccinestock",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EarmarkedStock",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "earmarked_stock_type",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("used", "Used"),
                            ("returned", "Returned"),
                        ],
                        default="created",
                        max_length=20,
                    ),
                ),
                (
                    "temporary_campaign_name",
                    models.CharField(blank=True, max_length=255),
                ),
                ("vials_earmarked", models.PositiveIntegerField()),
                ("doses_earmarked", models.PositiveIntegerField()),
                ("comment", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polio.campaign",
                    ),
                ),
                (
                    "form_a",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="earmarked_stocks",
                        to="polio.outgoingstockmovement",
                    ),
                ),
                (
                    "round",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polio.round",
                    ),
                ),
                (
                    "vaccine_stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="earmarked_stocks",
                        to="polio.vaccinestock",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DestructionReport",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_last_scan", models.DateTimeField(blank=True, null=True)),
                (
                    "file_scan_status",
                    models.CharField(
                        choices=[
                            ("CLEAN", "Clean"),
                            ("PENDING", "Pending"),
                            ("INFECTED", "Infected"),
                            ("ERROR", "Error"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        storage=plugins.polio.models.base.CustomPublicStorage(),
                        upload_to="public_documents/destructionreport/",
                    ),
                ),
                ("action", models.TextField()),
                ("rrt_destruction_report_reception_date", models.DateField()),
                ("destruction_report_date", models.DateField()),
                ("unusable_vials_destroyed", models.PositiveIntegerField()),
                (
                    "lot_numbers",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(blank=True, max_length=200),
                        default=list,
                        size=None,
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "vaccine_stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="polio.vaccinestock",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CountryUsersGroup",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("FR", "Français"),
                            ("EN", "English"),
                            ("PT", "Português"),
                        ],
                        default="EN",
                        max_length=32,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "country",
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="iaso.orgunit"),
                ),
                (
                    "teams",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Teams used by the country",
                        to="iaso.team",
                    ),
                ),
                (
                    "users",
                    models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChronogramTemplateTask",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                (
                    "period",
                    models.CharField(
                        choices=[
                            ("BEFORE", "Before"),
                            ("DURING", "During"),
                            ("AFTER", "After"),
                        ],
                        default="BEFORE",
                        max_length=15,
                    ),
                ),
                (
                    "description_fr",
                    models.TextField(blank=True, max_length=300, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(max_length=300, verbose_name="description"),
                ),
                ("start_offset_in_days", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="iaso.account"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_chronogram_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_chronogram_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Chronogram Template Task",
            },
        ),
        migrations.CreateModel(
            name="ChronogramTask",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                (
                    "period",
                    models.CharField(
                        choices=[
                            ("BEFORE", "Before"),
                            ("DURING", "During"),
                            ("AFTER", "After"),
                        ],
                        default="BEFORE",
                        max_length=15,
                    ),
                ),
                (
                    "description_fr",
                    models.TextField(blank=True, max_length=300, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(max_length=300, verbose_name="description"),
                ),
                ("start_offset_in_days", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Not started"),
                            ("IN_PROGRESS", "In progress"),
                            ("DONE", "Done"),
                            ("NON_APPLICABLE", "N/A"),
                        ],
                        default="PENDING",
                        max_length=15,
                    ),
                ),
                ("user_in_charge", models.CharField(blank=True, max_length=255)),
                ("comment", models.TextField(blank=True, max_length=300)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "chronogram",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="polio.chronogram",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_chronogram_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_chronogram_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Chronogram Task",
            },
        ),
        migrations.AddField(
            model_name="chronogram",
            name="round",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="chronograms",
                to="polio.round",
            ),
        ),
        migrations.AddField(
            model_name="chronogram",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="updated_chronograms",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="CampaignScope",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vaccine",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("mOPV2", "mOPV2"),
                            ("nOPV2", "nOPV2"),
                            ("bOPV", "bOPV"),
                            ("nOPV2 & bOPV", "nOPV2 & bOPV"),
                        ],
                        max_length=12,
                    ),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scopes",
                        to="polio.campaign",
                    ),
                ),
                (
                    "group",
                    models.OneToOneField(
                        default=plugins.polio.models.base.make_group_campaign_scope,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="campaignScope",
                        to="iaso.group",
                    ),
                ),
            ],
            options={
                "ordering": ["campaign", "vaccine"],
            },
        ),
        migrations.CreateModel(
            name="CampaignGroup",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=200)),
                (
                    "campaigns",
                    models.ManyToManyField(related_name="grouped_campaigns", to="polio.campaign"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="campaign",
            name="campaign_types",
            field=models.ManyToManyField(blank=True, related_name="campaigns", to="polio.campaigntype"),
        ),
        migrations.AddField(
            model_name="campaign",
            name="country",
            field=models.ForeignKey(
                blank=True,
                help_text="Country for campaign, set automatically from initial_org_unit",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="campaigns_country",
                to="iaso.orgunit",
            ),
        ),
        migrations.AddField(
            model_name="campaign",
            name="group",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="campaigns",
                to="iaso.group",
            ),
        ),
        migrations.AddField(
            model_name="campaign",
            name="initial_org_unit",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="campaigns",
                to="iaso.orgunit",
            ),
        ),
        migrations.CreateModel(
            name="BudgetStepLink",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("url", models.CharField(max_length=500)),
                ("alias", models.CharField(max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "step",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="links",
                        to="polio.budgetstep",
                    ),
                ),
            ],
            options={
                "verbose_name": "Budget Step Link",
                "verbose_name_plural": "Budget Step Link",
            },
        ),
        migrations.CreateModel(
            name="BudgetStepFile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="")),
                ("filename", models.CharField(blank=True, max_length=100, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "step",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="files",
                        to="polio.budgetstep",
                    ),
                ),
            ],
            options={
                "verbose_name": "Budget Step File",
                "verbose_name_plural": "Budget Step Files",
            },
        ),
        migrations.AddField(
            model_name="budgetstep",
            name="campaign",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="budget_steps",
                to="polio.campaign",
            ),
        ),
        migrations.AddField(
            model_name="budgetstep",
            name="created_by",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="budgetstep",
            name="created_by_team",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="iaso.team",
            ),
        ),
        migrations.CreateModel(
            name="BudgetFiles",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="event_files",
                        to="polio.budgetevent",
                    ),
                ),
            ],
            options={
                "verbose_name": "Budget File",
                "verbose_name_plural": "Budget Files",
            },
        ),
        migrations.AddField(
            model_name="budgetevent",
            name="campaign",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="budget_events",
                to="polio.campaign",
            ),
        ),
        migrations.AddField(
            model_name="budgetevent",
            name="target_teams",
            field=models.ManyToManyField(to="iaso.team"),
        ),
        migrations.CreateModel(
            name="VaccineStockHistory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("unusable_vials_in", models.IntegerField(null=True)),
                ("unusable_vials_out", models.IntegerField(null=True)),
                ("unusable_doses_in", models.IntegerField(null=True)),
                ("unusable_doses_out", models.IntegerField(null=True)),
                ("usable_vials_in", models.IntegerField(null=True)),
                ("usable_vials_out", models.IntegerField(null=True)),
                ("usable_doses_in", models.IntegerField(null=True)),
                ("usable_doses_out", models.IntegerField(null=True)),
                (
                    "round",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_on_closing",
                        to="polio.round",
                    ),
                ),
                (
                    "vaccine_stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="history",
                        to="polio.vaccinestock",
                    ),
                ),
            ],
            options={
                "unique_together": {("round", "vaccine_stock")},
            },
        ),
        migrations.AddIndex(
            model_name="vaccinestock",
            index=models.Index(fields=["country", "vaccine"], name="polio_vacci_country_91274d_idx"),
        ),
        migrations.AddIndex(
            model_name="vaccinestock",
            index=models.Index(fields=["account"], name="polio_vacci_account_f1f77e_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="vaccinestock",
            unique_together={("country", "vaccine")},
        ),
        migrations.AddIndex(
            model_name="vaccinerequestform",
            index=models.Index(
                fields=["campaign", "vaccine_type"],
                name="polio_vacci_campaig_f43af8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vaccinerequestform",
            index=models.Index(fields=["vrf_type"], name="polio_vacci_vrf_typ_2acd7d_idx"),
        ),
        migrations.AddIndex(
            model_name="vaccinerequestform",
            index=models.Index(fields=["created_at"], name="polio_vacci_created_8563f0_idx"),
        ),
        migrations.AddIndex(
            model_name="vaccinerequestform",
            index=models.Index(fields=["updated_at"], name="polio_vacci_updated_fd171a_idx"),
        ),
        migrations.AddIndex(
            model_name="vaccineprealert",
            index=models.Index(
                fields=["request_form", "estimated_arrival_time"],
                name="polio_vacci_request_4c2b0b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vaccineprealert",
            index=models.Index(fields=["po_number"], name="polio_vacci_po_numb_511963_idx"),
        ),
        migrations.AddIndex(
            model_name="vaccineprealert",
            index=models.Index(
                fields=["date_pre_alert_reception"],
                name="polio_vacci_date_pr_b7d59e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vaccinearrivalreport",
            index=models.Index(
                fields=["request_form", "arrival_report_date"],
                name="polio_vacci_request_48e891_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="vaccinearrivalreport",
            index=models.Index(fields=["po_number"], name="polio_vacci_po_numb_bd6c9f_idx"),
        ),
        migrations.AddIndex(
            model_name="vaccinearrivalreport",
            index=models.Index(fields=["doses_received"], name="polio_vacci_doses_r_d2cd9d_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="roundscope",
            unique_together={("round", "vaccine")},
        ),
        migrations.AlterUniqueTogether(
            name="reasonfordelay",
            unique_together={("key_name", "account")},
        ),
        migrations.AddIndex(
            model_name="outgoingstockmovement",
            index=models.Index(
                fields=["vaccine_stock", "campaign"],
                name="polio_outgo_vaccine_fa2e84_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="outgoingstockmovement",
            index=models.Index(fields=["form_a_reception_date"], name="polio_outgo_form_a__b64b56_idx"),
        ),
        migrations.AddIndex(
            model_name="outgoingstockmovement",
            index=models.Index(fields=["report_date"], name="polio_outgo_report__44ffe2_idx"),
        ),
        migrations.AddConstraint(
            model_name="outgoingstockmovement",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("campaign__isnull", False),
                    models.Q(("non_obr_name", ""), _negated=True),
                    _connector="OR",
                ),
                name="campaign_or_pseudo_campaign_not_null",
            ),
        ),
        migrations.AddConstraint(
            model_name="outgoingstockmovement",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("campaign__isnull", False),
                        models.Q(("non_obr_name", ""), _negated=True),
                    ),
                    _negated=True,
                ),
                name="campaign_and_pseudo_campaign_cannot_both_have_value",
            ),
        ),
        migrations.AddConstraint(
            model_name="lqasrounddata",
            constraint=models.UniqueConstraint(
                condition=models.Q(("subactivity__isnull", False)),
                fields=("round", "subactivity"),
                name="unique_lqasactivitystats_round_subactivity",
            ),
        ),
        migrations.AddConstraint(
            model_name="lqasrounddata",
            constraint=models.UniqueConstraint(
                condition=models.Q(("subactivity__isnull", True)),
                fields=("round",),
                name="unique_lqasactivitystats_round_no_subactivity",
            ),
        ),
        migrations.AddConstraint(
            model_name="lqasdistrictdata",
            constraint=models.UniqueConstraint(
                condition=models.Q(("subactivity__isnull", False)),
                fields=("round", "subactivity", "district"),
                name="unique_lqasentry_round_subactivity_district",
            ),
        ),
        migrations.AddConstraint(
            model_name="lqasdistrictdata",
            constraint=models.UniqueConstraint(
                condition=models.Q(("subactivity__isnull", True)),
                fields=("round", "district"),
                name="unique_lqasentry_round_district_no_subactivity",
            ),
        ),
        migrations.AddIndex(
            model_name="incidentreport",
            index=models.Index(
                fields=["vaccine_stock", "date_of_incident_report"],
                name="polio_incid_vaccine_b012dc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="incidentreport",
            index=models.Index(
                fields=["incident_report_received_by_rrt"],
                name="polio_incid_inciden_067b16_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="earmarkedstock",
            index=models.Index(
                fields=["vaccine_stock", "campaign"],
                name="polio_earma_vaccine_0a002f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="earmarkedstock",
            index=models.Index(fields=["created_at"], name="polio_earma_created_54ada5_idx"),
        ),
        migrations.AddIndex(
            model_name="earmarkedstock",
            index=models.Index(fields=["round"], name="polio_earma_round_i_a163e4_idx"),
        ),
        migrations.AddIndex(
            model_name="destructionreport",
            index=models.Index(
                fields=["vaccine_stock", "destruction_report_date"],
                name="polio_destr_vaccine_e5b90d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="destructionreport",
            index=models.Index(
                fields=["rrt_destruction_report_reception_date"],
                name="polio_destr_rrt_des_449e4f_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="campaignscope",
            unique_together={("campaign", "vaccine")},
        ),
    ]
