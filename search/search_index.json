{"config":{"lang":["en","fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"AWS-Deployment.html","title":"How Iaso is deployed on AWS","text":"<p>on ElasticBeanstalk + RDS </p>"},{"location":"AWS-Deployment.html#main-parts","title":"Main parts","text":"<ul> <li>Creation of the HOST environment where the Iaso code will be deployed as well as the related services</li> <li>The deployment of the code itself and of new version</li> </ul>"},{"location":"AWS-Deployment.html#host-infrastructure","title":"Host infrastructure","text":"<p>This documentation concerned the main Iaso deployment, that are done on AWS.</p> <p>The main pillar is AWS  Elastic beanstalk</p> <p>Which is kind of a magic solution from Amazon that tie several of their service together, handle deployment logic, etc...</p> <p>In the past we configured it by hands but now we are moving toward having it  all handled via Terrraform so it is in code (we can have an history, avoid misclick, do complex ops etc...).</p> <p>The technical term for this is \"Provisioning\" if you want to look it up.</p>"},{"location":"AWS-Deployment.html#setup-of-the-elastic-beainstalk","title":"Setup of the Elastic Beainstalk","text":"<p>See https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-django.html</p> <p>We have custom commands and configuration in .ebextensions/ and in  and in .platform/ to extend the nginx config.</p>"},{"location":"AWS-Deployment.html#running-django-3-on-elastic-beanstalk-custom-ami","title":"Running Django 3 on Elastic Beanstalk / Custom AMI","text":"<p>Django 3 requires version 2+ of the gdal library. Sadly, Beanstalk is based on Amazon Linux that contain an outdated version of GDAL.</p> <p>To fix this you have to create  a custom AMI to use in your Elastic Beanstalk environments and compile and your own version of gdal and it's dependencies.</p> <p>See the AWS documentation on creating adn using a custom AMI and the Django documentation on compiling the GIS libraries</p> <p>Custom build of the following libraries were done:</p> <ul> <li>geos</li> <li>SQLite</li> <li>proj</li> <li>proj-data</li> <li>spatialite</li> <li>gdal</li> </ul> <p>You can check <code>scripts/create_ami.sh</code> for reference</p> <p>Read AWS documentation on creating adn using a custom AMI but in summary:</p> <ol> <li>In EC2 -&gt; AMIs, identify the AMI of the Elastic Beanstalk EC2 server(Ex: Choose a public AMI in which python3.9 installed with Amazon Linux 2).</li> <li>Select the AMI and launch a new instance based on it. </li> <li>Specify the instance name and choose a key pair.</li> <li>Don't forget to set in the advanced section:</li> </ol> <pre><code>#cloud-config\n  repo_releasever: repository version number\n  repo_upgrade: none\n</code></pre> <ol> <li>Connect via SSH to the instance</li> <li>Install the dependencies (see scripts/create_ami.sh)</li> <li>Then go to Actions -&gt; Image -&gt; Create Image</li> <li>When it's ready, go to the Beanstalk Instance Settings and specify the AMI reference of the image we just created.</li> </ol>"},{"location":"AWS-Deployment.html#where-is-the-code","title":"Where is the code ?","text":"<p>Infrastructure and configuration in the Github repository BLSQ/terraform-iaso-eb There is good documentation from Mbayang in the <code>docs/</code> folder. Visibility is restricted.</p> <p>In the <code>BLSQ/iaso</code> Github repository: * <code>.github</code> For the workflow info * <code>scripts/</code> * <code>.ebextension</code> For the Elastic beanstalk specific command * <code>.platform</code> Configuration override</p>"},{"location":"AWS-Deployment.html#related-services","title":"Related services","text":"<ul> <li>S3 bucket: For the static and the user uploaded media (in AWS)</li> <li>Enketo (in another AWS Elastic Beanstalk)</li> <li>Postgresql RDS (in AWS)</li> <li>Queue Service for background Worker  (in AWS SQS)</li> <li>Sentry: error handling and notification (as Saas)</li> <li>MailGun (as Saas)</li> <li>Route53: DNS redirection (in AWS)</li> </ul> <p>Two type of env in elastic beanstalk: * web * worker</p> <p>We tie them via an \"env\" tag in AWS, so we can deploy them at the same time</p> <p>One Elastic Beanstalk Env can contain multipe \"EC2 Instance\", that is virtual machine server.  Their number auto scale according to rule in elastic beanstalk. Usually we have 1 instance for Worker and 2 for Web.</p>"},{"location":"AWS-Deployment.html#s3-bucket","title":"S3 bucket","text":"<ul> <li>Static: Push static in them so they can be properly cached and CDN (not sure we actually do this)</li> <li>Media: Store uploaded media by the users : Form response (XML), media attached to Form response (photos), gpkg, form definition, etc.. </li> </ul> <p>Static are readable by all.</p> <p>Media are only accessible via Signed url that expire after a laps of time (15 minutes I think) and that are generated on the fly by iaso when needed.</p>"},{"location":"AWS-Deployment.html#cicd","title":"CI/CD","text":"<p>Deployment of new version is done via Github action.</p> <p>Each change on main are automically deployed on the staging environment</p> <p>Deployment to other env have to be manually triggered</p>"},{"location":"AWS-Deployment.html#deployement-process","title":"Deployement process","text":"<p>How a new version of Iaso is deployed</p> <p>This is a simplified view, some details are omitted for clarity</p> <ol> <li>A user trigger the deploy worflow in github actions (or it is trigger automatically for staging)</li> <li>In the github worker: (code in .github/workflows/deploy.yml)<ol> <li>Determine version number. Call set_version to set it.</li> <li>It build all the JS/CSS and other ressource for the front-end</li> <li>Add the to the git repo</li> <li>scripts/eb-deploy.py:<ol> <li>Connect to the AWS api to fetch all the beanstalk environments for the <code>iaso</code> environment. e.g. : <code>staging</code> -&gt; <code>iaso-staging2</code> and <code>iaso-staging2-worker</code></li> <li>For each beanstalk env, trigger <code>eb deploy</code> (from awseb cli):<ol> <li>Make a zip file of the content of the git repo (done by eb deploy). Including the compiled asset</li> <li>Call ElasticBeanstalk API to deploy it</li> </ol> </li> </ol> </li> </ol> </li> <li>In the Iaso servers (EC2 instances): Our code/config for this is in the directory <code>.ebextensions</code> Action markqe with \u00a5 are part of Elastic beanstalk logic<ol> <li>Deployment is triggered \u00a5</li> <li>New app version is copied in <code>/var/app/staging</code> \u00a5</li> <li>The dependencies in requirements.txt are installed  \u00a5</li> <li>Our logic is executed<ol> <li>Server translations are compiled</li> <li>The frontend (compiled JS, image, css) is pushed to the S3 bucket.</li> <li>Database migration are done</li> <li>Cache table is created</li> </ol> </li> <li><code>/var/app/staging</code> is moved in <code>/var/app/current</code> \u00a5</li> <li>If these steps fail, Elastic beanstalk will do a rollback and revert to the previous version. Note since we do manually the maching between worker and web, sometime we have the problem that one is rolled back and not the other and we have a version mismatch. We sometime also have the problem with incompatible database migrations. \u00a5</li> <li>Send a Slack notification to notify of the success of failure of the github deployment.</li> </ol> </li> </ol>"},{"location":"AWS-Deployment.html#related-services-in-more-details","title":"Related services in more details","text":"<ul> <li>S3 bucket: For the static and the user uploaded media (in AWS)</li> <li>Enketo (in another AWS Elastic Beanstalk)</li> <li>Postgresql RDS (in AWS)</li> <li>Queue Service for background Worker  (in AWS SQS)</li> <li>Sentry: error handling and notification (as Saas)</li> <li>MailGun (as Saas)</li> <li>Route53: DNS redirection (in AWS)</li> </ul>"},{"location":"AWS-Deployment.html#enketo","title":"Enketo","text":"<p>Deployed separately, handled via Elastic Beanstalk also, linked to Iaso via environment variable. Mbayang manage this</p>"},{"location":"AWS-Deployment.html#aws-sqs","title":"AWS SQS","text":"<p>Queue system used for Worker, see worker section in README</p>"},{"location":"AWS-Deployment.html#s3-bucket_1","title":"S3 bucket","text":"<p>S3 see above</p>"},{"location":"AWS-Deployment.html#architecture-inside-the-vm","title":"Architecture inside the VM","text":"<p>Code is in the <code>/var/app/current</code></p> <p>Systemctl launch the web server  as the <code>web</code> unit. This is done via Gunicorn under the web user, gunicorn launch multiple Django server.</p> <p>There is a NGINX in front of gunicorn. The above is handled automatically via Iaso</p> <p>The logs can be listed inside the VM via <code>journalctl -u web</code></p> <p>We have 2 crons (for now). They can be seen  by using <code>systemctl list-timers</code></p>"},{"location":"index.html","title":"Welcome to the documentation of IASO","text":""},{"location":"index.html#introduction-to-iaso","title":"Introduction to IASO","text":"<p>IASO is an innovative, open-source, bilingual (EN/FR) data collection platform with advanced geospatial features to plan, monitor and evaluate health, environmental or social programmes in low- and middle-income settings (LMICs). IASO is recognized as a Digital Public Good by the Digital Public Good Alliance and listed as a Digital Square Software Global Good, a testament to its proven impact. For more information and detailed use cases, please visit IASO website.</p> <p>IASO comprises:</p> <ul> <li>a web dashboard - intended for supervisors to organize data collection and geographical data management</li> <li>a mobile application that also works offline - intended to field users to fill out forms and send data when network is available</li> <li>a matching and scripting interface to analyze, compare and merge several geographic data sources</li> <li>a bi-directional integration with DHIS2, the widely used Health Management Information System in Low- and middle-income countries</li> </ul> <p>In terms of features, IASO can be summarized around four main components which are interconnected and expand the powers of one another:</p> <ul> <li> <p>Geospatial data management (Georegistry)</p> <ul> <li>Manage multiple master lists of organizational units (e.g. health areas, districts, facilities, or schools) including their GPS coordinates and boundaries</li> <li>Keep track of changes made to the organization units</li> <li>Map multiple geographic data sources</li> <li>Propose changes to org units from IASO mobile application and validate them on the web</li> </ul> </li> <li> <p>Geo-structured data collection</p> <ul> <li>Create data collection forms using the widely known XLS form format and upload them to IASO</li> <li>Link your form to one or several organization unit type (e.g. National/Regional/District/Health facility) to geo-structure your data collection</li> <li>Keep track of changes with versioning of your data collection forms</li> <li>Validate from the web all data collection form submissions sent from IASO mobile application</li> <li>Monitor data collection completeness per organization unit level and drill-down to identify where issues happen</li> </ul> </li> <li> <p>Geo-enabled Microplanning</p> <ul> <li>Manage teams of users and teams of teams</li> <li>Assign data collection duties to teams and users using a map interface</li> <li>Create plannings with a scope, a time span, and one or several data collection form(s)</li> </ul> </li> <li> <p>Entities - these can be individuals (e.g. health programme beneficiaries) or physical objects (e.g. vaccines parcel, mosquito net, etc.). Workflows allows the tracking of entities by opening specific forms according to previous answers given to previous forms.</p> <ul> <li>Create entity types (beneficiaries, stocks, or other)</li> <li>Assign workflows to entity types</li> <li>Register entities via mobile app (offline)</li> <li>Synchronize mobile and web applications</li> <li>Compare and merge entities as needed</li> <li>Record entity data in an NFC card</li> </ul> </li> </ul> <p>The platform has been implemented in Benin, Burkina Faso, Burundi, Cameroon, Central African Republic, the Democratic Republic of Congo, Haiti, Ivory Coast, Mali, Niger, Nigeria and Uganda. It is the official georegistry in Burkina Faso since 2023. IASO has also been implemented at regional level (AFRO region) in support to the Global Polio Eradication Initiative for its geospatial and health facility registries capabilities.</p>"},{"location":"index.html#technical-stack","title":"Technical stack","text":"<p>IASO is made of a white labeled Android application using Java/Kotlin, reusing large parts of the ODK projects, and a web platform programmed using Python/GeoDjango on top of PostGIS.  Frontend is mainly React/Leaflet.  The API is implemented via Django rest framework, all data is stored in Postgresql or the media/ directory. One of the aims is the ease of integration with other platforms. We already have csv and geopackage imports and exports and target easy integration with OSM.</p> <p>The companion mobile app for Android allows form submission and and org unit creation. Forms can also be filled in a web interface via the Enketo companion service. </p>"},{"location":"pages/dev/how_to/add_new_permission/add_new_permission.html","title":"How to add a new permission in Iaso","text":""},{"location":"pages/dev/how_to/add_new_permission/add_new_permission.html#1-add-permission-in-the-model","title":"1. Add permission in the model","text":"<ul> <li>Go to `/hat/menupermissions/models.py``</li> <li>Add a private constant with the string value of the permission: `_MY_PERMISSION = \"iaso_my_permission\"``</li> <li>Add a constant to combine it with <code>_PREFIX</code>: <code>MY_PERMISSION = _PREFIX + _MY_PERMISSION</code></li> <li>Add the permission to the <code>permissions</code> property of <code>CustomPermissionSupport</code>'s <code>Meta</code> class: <code>(_MY_PERMISSION, _(\"Access some stuff\"))</code></li> </ul>"},{"location":"pages/dev/how_to/add_new_permission/add_new_permission.html#2-include-the-permission-in-a-module","title":"2. Include the permission in a module","text":"<ul> <li>Go to <code>/hat/menupermissions/constants.py</code></li> <li>Add the permission to a module from <code>MODULE_PERMISSIONS</code></li> <li>If no existing module fits, create one (see exiting modules for inspiration)</li> <li>If a new module is created, add it to <code>MODULES</code> (in the same file)</li> <li>If it's a new module run migration to add it in modules options for the account</li> </ul>"},{"location":"pages/dev/how_to/add_new_permission/add_new_permission.html#3-include-the-permission-in-the-corresponding-group","title":"3. Include the permission in the corresponding group","text":"<ul> <li>Go to <code>/hat/menupermissions/constants.py</code></li> <li>Add the permission to a group from <code>PERMISSIONS_PRESENTATION</code></li> <li>If no existing group fits, create one (see exiting groups for inspiration)</li> <li>If the corresponding group exists add the new permission to that group (see exiting groups for inspiration)</li> </ul>"},{"location":"pages/dev/how_to/add_new_permission/add_new_permission.html#4-if-the-added-permission-must-be-coupled-with-another-permission-like-read-and-edit","title":"4. If the added permission must be coupled with another permission like read and edit","text":"<ul> <li>Go to <code>/hat/menupermissions/constants.py</code></li> <li>Add the added permission and it's related permission as an item of the <code>READ_EDIT_PERMISSIONS</code> dictionnary</li> <li>The item should have a key which reprensente the string name which will be displayed</li> <li>The item should have a dictionnary reprensenting the coupled permissions, the keys (should be two keys) are <code>read</code> and <code>edit</code> or other keys like <code>no-admin</code> and <code>admin</code></li> <li>The item should look like <code>item_key\": {\"read\": \"added_permission\", \"edit\": \"coupled_permission\"}</code></li> <li>Add translations for all the keys(<code>item_key, read and edit</code>) and the tooltip message of the principal key(<code>item_key</code>)</li> </ul>"},{"location":"pages/dev/how_to/add_new_permission/add_new_permission.html#5-make-and-run-migration","title":"5. Make and run migration","text":"<p><code>docker compose run --rm iaso manage makemigrations &amp;&amp; docker compose run --rm iaso manage migrate</code></p>"},{"location":"pages/dev/how_to/add_new_permission/add_new_permission.html#6-add-the-permission-in-the-front-end","title":"6. Add the permission in the front-end","text":"<ul> <li>Go to <code>/hat/assets/js/apps/Iaso/utils/permissions.ts</code>. Add and export a constant with the permission key, in a similar way as what was done for the backend in step 1.</li> <li>When using the permission in the front-end: import the constant, don't write the key in a string.</li> </ul>"},{"location":"pages/dev/how_to/add_new_permission/add_new_permission.html#7-add-translations-in-the-front-end","title":"7. Add translations in the front-end","text":"<ul> <li>Add a translation for the permission, and its tooltip in <code>permissionMessages.ts</code>. The tooltip key should have the format: <code>&lt;permission name&gt;_tooltip</code> to enable the component to recognize and translate it.</li> <li>Add corresponding translations in <code>en.json</code> and <code>fr.json</code></li> </ul>"},{"location":"pages/dev/how_to/add_new_permission/add_new_permission.html#8-add-translation-for-new-module-if-applicable","title":"8. Add translation for new module (if applicable)","text":"<ul> <li>Go to <code>/hat/assets/js/apps/Iaso/domains/modules/messages.ts</code></li> <li>Add translation for the new module. The translation key should follow the pattern: `iaso.module.' <ul> <li>Example: codename = \"PAYMENTS\" =&gt; translation key = iaso.module.payments</li> </ul>"},{"location":"pages/dev/how_to/configure_black_on_vsc/configure_black_on_vsc.html","title":"Configure black on vsc","text":""},{"location":"pages/dev/how_to/configure_black_on_vsc/configure_black_on_vsc.html#configuring-black-auto-formatting-in-vs-code","title":"Configuring Black Auto-formatting in VS Code","text":"<p>To set up automatic formatting with Black in Visual Studio Code:</p> <ol> <li>Install the \"Black Formatter\" extension in VS Code:</li> <li>Open VS Code</li> <li>Go to the Extensions view (Ctrl+Shift+X or Cmd+Shift+X on Mac)</li> <li>Search for \"Black Formatter\"</li> <li> <p>Click \"Install\" for the extension by Microsoft</p> </li> <li> <p>Create a <code>.vscode/settings.json</code> file in your project root if it doesn't exist.</p> </li> <li> <p>Add the following to <code>settings.json</code>:</p> </li> </ol> <p>```json    {         \"editor.formatOnSave\": true,         \"[python]\": {             \"editor.defaultFormatter\": \"ms-python.black-formatter\",             \"editor.formatOnSave\": true         },         \"black-formatter.args\": [\"--config\", \"${workspaceFolder}/pyproject.toml\"],         \"black-formatter.path\": [\"${workspaceFolder}/.venv/bin/black\"]     }</p> <p>```</p> <ol> <li>Set up and activate your virtual environment:</li> </ol> <p><code>python3.9 -m venv .venv    source .venv/bin/activate</code></p> <ol> <li>Install development requirements, which include Black:</li> </ol> <p><code>pip install -r requirements-dev.txt</code></p> <p>This ensures you're using the version of Black specified in the project's requirements.</p> <ol> <li>(Optional) If you want to exclude certain directories from formatting, you can add them to a <code>.vscode/.prettierignore</code> file:</li> </ol> <p><code>.git    .venv    venv    node_modules</code></p> <p>Now, VS Code will automatically format your Python files using Black when you save them, using the settings specified in your <code>settings.json</code> file and the version of Black specified in your project's requirements.</p> <p>Note: This configuration is local to your VS Code environment and won't affect other developers or CI processes that might use the <code>pyproject.toml</code> file.</p>"},{"location":"pages/dev/how_to/contribute/contribute.html","title":"Contribute","text":""},{"location":"pages/dev/how_to/contribute/contribute.html#code-formatting","title":"Code formatting","text":"<p>We have adopted Black  as our code formatting tool. Line length is 120.</p> <p>The easiest way to use is is to install the pre-commit hook: 1. Install pre-commit: pip install pre-commit 2. Execute pre-commit install to install git hooks in your .git/ directory.</p> <p>Another good way to have it working is to set it up in your code editor. Pycharm, for example, has good support for this.</p> <p>The pre-commit is not mandatory but Continuous Integration will check if the formatting is respected!</p>"},{"location":"pages/dev/how_to/contribute/contribute.html#tests-and-linting","title":"Tests and linting","text":"<p>For the Python backend, we use the Django builtin test framework. Tests can be executed with</p> <pre><code>docker compose exec iaso ./manage.py test\n</code></pre>"},{"location":"pages/dev/how_to/contribute/contribute.html#translations","title":"Translations","text":"<p>The few translation for the Django side (login and reset password email etc..) are separated from the test. We only translate the template for now not the python code (string on model or admin).</p> <p>When modifying or adding new strings to translate, use the following command to regenerate the translations:</p> <p><code>manage.py makemessages --locale=fr --extension txt --extension html</code></p> <p>This will update <code>hat/locale/fr/LC_MESSAGES/django.po</code> with the new strings to translate.</p> <p>After updating it with the translation you need to following command to have them reflected in the interface:</p> <p><code>manage.py compilemessages</code></p>"},{"location":"pages/dev/how_to/contribute/contribute.html#code-reloading","title":"Code reloading","text":"<p>In development the servers will reload when they detect a file change, either in Python or Javascript. If you need reloading for the bluesquare-components code, see the \"Live Bluesquare Components\" section. </p>"},{"location":"pages/dev/how_to/contribute/contribute.html#troubleshooting","title":"Troubleshooting","text":"<p>If you need to restart everything</p> <pre><code>docker compose stop &amp;&amp; docker compose start\n</code></pre> <p>If you encounter problems, you can try to rebuild everything from scratch.</p> <pre><code># kill containers\ndocker compose kill\n# remove `iaso` container\ndocker compose rm -f iaso\n# build containers\ndocker compose build\n# start-up containers\ndocker compose up\n</code></pre>"},{"location":"pages/dev/how_to/contribute/contribute.html#jupyter-notebook","title":"Jupyter Notebook","text":"<p>To run a Jupyter Notebook, just copy the env variable from runaisasdev.sh, activate the virtualenv and run</p> <pre><code>python manage.py shell_plus --notebook\n</code></pre>"},{"location":"pages/dev/how_to/contribute/contribute.html#testing-prod-js-assets-in-development","title":"Testing prod js assets in development","text":"<p>During local development, by default, the Javascript and CSS will be loaded from a webpack server with live reloading of the code. To locally test the compiled version as it is in production ( minified and with the same compilation option). You can launch docker compose with the <code>TEST_PROD=true</code> environment variable set.</p> <p>e.g <code>TEST_PROD=true docker compose up</code></p> <p>This can be useful to reproduce production only bugs. Please also test with this configuration whenever you modify webpack.prod.js to validate your changes.</p> <p>Alternatively this can be done outside of docker by running:</p> <ol> <li><code>npm run webpack-prod</code> to do the build</li> <li>Launching the django server with <code>TEST_PROD</code>    e.g. <code>TEST_PROD=true python manage.py runserver</code>.</li> </ol>"},{"location":"pages/dev/how_to/create_entities_in_web_ui/create_entities_in_web_ui.html","title":"How to create entities in web interface","text":"<p>Use case: develop or test entity related features in the web interface</p>"},{"location":"pages/dev/how_to/create_entities_in_web_ui/create_entities_in_web_ui.html#1-get-some-xls-forms","title":"1. Get some XLS Forms","text":"<p>At least one form will be needed as reference form. More would be optimal as it would allow to test the follow-up feature.</p>"},{"location":"pages/dev/how_to/create_entities_in_web_ui/create_entities_in_web_ui.html#2-create-forms-and-form-versions","title":"2. Create Forms and form versions","text":"<p>For each XLS form:</p> <ul> <li>Open the menu, go to Forms</li> <li>Click the Create button</li> <li>Fill in all mandatory fields and Save</li> <li>Click the Create Version button</li> <li>Use an XLS form to create the version</li> </ul>"},{"location":"pages/dev/how_to/create_entities_in_web_ui/create_entities_in_web_ui.html#3-create-one-or-several-entitytypes","title":"3. Create one or several <code>EntityType</code>s","text":"<ul> <li>From the menu, go to Beneficairies &gt; Beneficiary types</li> <li>Click create</li> <li>Assign one of the created forms as reference form for the benefiacry type</li> </ul> <p>Repeat as needed</p>"},{"location":"pages/dev/how_to/create_entities_in_web_ui/create_entities_in_web_ui.html#4-create-submissions-for-the-reference-forms","title":"4. Create submissions for the reference form(s)","text":"<ul> <li>Go to Forms &gt; Submissions</li> <li>Using the filters, search for the reference form(s) that were created in the previous step</li> <li>For each form, create a submission</li> </ul> <p>Note: To be able to create submissions, Enketo needs to be running. This can be done with the following command: <code>docker compose -f docker-compose.yml -f docker/docker-compose-enketo.yml up</code></p>"},{"location":"pages/dev/how_to/create_entities_in_web_ui/create_entities_in_web_ui.html#5-create-entities-with-the-django-admin","title":"5. Create <code>Entities</code> with the Django admin","text":"<ul> <li>Go to `/admin``</li> <li>Open the <code>Entities</code> menu entry</li> <li>Fill in the mandatory fields</li> <li>Associate one of the newly created submissions to the <code>Entity</code>. It should be a submission for the form defined as reference form for the <code>EntityType</code> of the <code>Entity</code> being created.</li> <li>Save</li> <li>Repeat as needed.</li> </ul>"},{"location":"pages/dev/how_to/create_entities_in_web_ui/create_entities_in_web_ui.html#6-setting-up-for-deduplication","title":"6. Setting up for deduplication","text":"<ul> <li>In steps 4 and 5, create at least 2 entities with overlapping data, e.g.: Same or very close names, age etc. The idea is to simulate that 2 Entities were created for the same real world person/object.</li> <li>In a python shell, run:</li> </ul> <pre><code>from django.db import connection\n\nwith connection.cursor() as cursor:\n    cursor.execute('CREATE EXTENSION fuzzystrmatch;')\n</code></pre> <p>Note: To open a python shell in docker: <code>docker compose exec iaso ./manage.py shell</code> - In a terminal, launch a task worker: <code>docker compose run iaso manage tasks_worker</code> - Go to <code>/api/entityduplicates_analyzes</code> to launch an algorithm analysis (e.g: inverse) - In Iaso web, go to Benefiaries &gt; Duplicates to see if the algorithm matched the duplicates created in previous steps</p>"},{"location":"pages/dev/how_to/create_registry_in_web_ui/create_registry_in_web_ui.html","title":"How to create registry in web interface","text":"<p>Use case: develop or test registry related features in the web interface</p>"},{"location":"pages/dev/how_to/create_registry_in_web_ui/create_registry_in_web_ui.html#1-get-some-submission","title":"1. Get some Submission","text":"<p>Select a submission you are going to use has <code>reference_instance</code> in an org unit.</p>"},{"location":"pages/dev/how_to/create_registry_in_web_ui/create_registry_in_web_ui.html#2-get-some-org-unit","title":"2. Get some Org unit","text":"<p>We will use one organization unit and link a reference submission to it. Make sure you choose a org unit having children and that they are all validated. Make also sure that the type of this org unit has sub org unit types, and that those sub types are those used by the children org units. This org unit should have a shape and be visible by the account you are using. Children should also be visible, location (point or shape) is not mandatory.</p>"},{"location":"pages/dev/how_to/create_registry_in_web_ui/create_registry_in_web_ui.html#3-add-reference-instance-to-org-unit","title":"3. Add reference instance to org unit","text":"<ul> <li>Go to `/admin``</li> <li>Open the <code>Org units</code> menu entry</li> <li>Edit the org unit we choosed at step 2</li> <li>copy the id of the submission we choosed at step 1 in <code>Reference instance</code> field</li> <li>save</li> </ul>"},{"location":"pages/dev/how_to/create_registry_in_web_ui/create_registry_in_web_ui.html#4-optionnal-create-submissions-for-children","title":"4. Optionnal: create submissions for children","text":"<ul> <li>Go to Forms &gt; Submissions</li> <li>Using the filters, search for a form, doesn't need to be a specific one</li> <li>For each children of the main org unit, create a submission</li> </ul> <p>Note: To be able to create submissions, Enketo needs to be running. This can be done with the following command: <code>docker compose -f docker-compose.yml -f docker/docker-compose-enketo.yml up</code></p>"},{"location":"pages/dev/how_to/create_registry_in_web_ui/create_registry_in_web_ui.html#5-test-registry-page","title":"5. Test registry page","text":"<ul> <li>Go to Org units &gt; Registry</li> <li>Search for the main org unit we choosed in step 2</li> <li>Click on <code>View registry</code></li> <li>You should see the registry page, showing a map of the org unit with the children, the reference instance on the right</li> <li>If you click on list tab, you should see the list of children org units, including those without a location</li> <li>if you completed step 4, you can select the form you used in this step in the dropdown and check that those submissions are present at the bottom of the page</li> <li>You can find an example of registry here on staging. Credentials are in 1Password, look for <code>registry-demo</code></li> </ul>"},{"location":"pages/dev/how_to/debug_backend/debug_backend.html","title":"Debugging the Backend","text":""},{"location":"pages/dev/how_to/debug_backend/debug_backend.html#django-debug-toolbar","title":"Django Debug Toolbar","text":"<p>You can activate the Django Debug Toolbar.</p> <p>To do so, create a <code>hat/local_settings.py</code> files and configure the toolbar.</p> <p>E.g.:</p> <pre><code>from .settings import *  # noqa\n\nfrom debug_toolbar.middleware import show_toolbar\n\n\nINSTALLED_APPS += [\"debug_toolbar\"]\n\nMIDDLEWARE += [\"debug_toolbar.middleware.DebugToolbarMiddleware\"]\n\n\ndef custom_show_toolbar(request):\n    included_urls = [\"/__debug__\", \"/admin\", \"/api\"]\n    included = any(request.path.startswith(url) for url in included_urls)\n    return show_toolbar(request) and included\n\n\nDEBUG_TOOLBAR_CONFIG = {\n    \"DISABLE_PANELS\": [\n        \"debug_toolbar.panels.redirects.RedirectsPanel\",\n        # ProfilingPanel makes the django admin extremely slow.\n        \"debug_toolbar.panels.profiling.ProfilingPanel\",\n    ],\n    \"SHOW_TEMPLATE_CONTEXT\": True,\n    \"SHOW_TOOLBAR_CALLBACK\": custom_show_toolbar,\n}\n</code></pre>"},{"location":"pages/dev/how_to/deploy/deploy.html","title":"Deploy","text":""},{"location":"pages/dev/how_to/deploy/deploy.html#0-make-sure-everything-is-there","title":"0. Make sure everything is there","text":"<ul> <li>run the tests</li> <li>check with team mates</li> </ul> <p>For IASO deployment make sure you ran eb init with following info</p> <pre><code>eb init\nSelect a default region\n5) eu-central-1 : EU (Frankfurt)\nSelect an application to use\n4) Iaso\nDo you wish to continue with CodeCommit? (y/N) (default is n): n\n</code></pre>"},{"location":"pages/dev/how_to/deploy/deploy.html#1-prepare-assets","title":"1. Prepare assets","text":"<p>To avoid long/failing deployment, we commit the production assets in the repository</p> <pre><code>git checkout development\ngit pull\nrm hat/assets/webpack/*\nnpm run webpack-prod\ngit add hat/assets/webpack/\ngit commit -m 'Committing assets'\ngit push\n</code></pre> <p>Troubleshooting :</p> <ul> <li>npm install : might be needed</li> </ul>"},{"location":"pages/dev/how_to/deploy/deploy.html#2-deploy-to-staging","title":"2. Deploy to staging","text":"<p>Make sure you have eb installed and run eb init</p> <p>Then you deploy the <code>development</code> branch to staging</p> <pre><code>eb use Iaso-staging\neb deploy\n</code></pre> <p>eb deploy will take of (via container commands see ./.ebextensions/50_container_commands.config)</p> <ul> <li>deploying</li> <li>copying the resources and putting them in S3</li> <li>running the pending migrations</li> </ul> <p>Troubleshooting :</p> <ul> <li>you might need to dig in the eb activity logs</li> </ul>"},{"location":"pages/dev/how_to/deploy/deploy.html#3-deploy-to-production","title":"3. Deploy to production","text":"<p>Technically : we should merge development in master, and deploy master in production but for the momenent use \"just deploy\" to developement to prod</p> <pre><code>eb use Iaso-env\neb deploy\n</code></pre> <p>Check the production</p> <p>Troubleshooting :</p> <ul> <li>you might need to dig in the eb activity logs</li> </ul>"},{"location":"pages/dev/how_to/deploy/deploy.html#4-deploy-to-playground","title":"4. Deploy to playground","text":"<p>For the Playground, deploy as for staging and prod for the web server, but you also need to update the jupyter server (using the pem file you can find on 1password)</p> <p>Note jupyter is currently using the development branch too.</p> <pre><code>ssh -i ~/.ssh/lightsail.pem ubuntu@18.196.197.98\ncd iaso\ngit pull\nsource bin/activate\npip install -r requirements.txt\nkillall python\nnohup ./run.sh &amp;\n</code></pre> <p>Obviously, a more stable playground setup would be welcome.</p> <p>Troubleshooting :</p> <ul> <li>UNPROTECTED PRIVATE KEY FILE! : <code>chmod 600 ~/.ssh/lightsail.pem</code></li> </ul>"},{"location":"pages/dev/how_to/exclude_featureflag_related_module/exclude_featureflag_related_module.html","title":"How to exclude a featureflag related to a module","text":""},{"location":"pages/dev/how_to/exclude_featureflag_related_module/exclude_featureflag_related_module.html#1-add-a-new-module-for-which-to-exclude-its-related-feature-flag","title":"1. Add a new module for which to exclude its related feature flag","text":"<ul> <li>Go to <code>/hat/menupermissions/constants.py</code></li> <li>Add to the dictionnary <code>FEATUREFLAGES_TO_EXCLUDE</code> a new item</li> <li>The key is the name of the module like <code>DATA_COLLECTION_FORMS</code> in capitale letter</li> <li>The value is a list of featureflags(code in capitale letter) to be excluded like <code>[\"FEATUREFLAG_1\",\"FEATUREFLAG_2\"]</code></li> <li>The whole <code>FEATUREFLAGES_TO_EXCLUDE</code> should be like <code>FEATUREFLAGES_TO_EXCLUDE = { \"MODULE_1\": [\"FEATUREFLAG_1\"], \"MODULE_2\": [\"FEATUREFLAG_2\", \"FEATUREFLAG_3\"],}</code></li> </ul>"},{"location":"pages/dev/how_to/exclude_featureflag_related_module/exclude_featureflag_related_module.html#2-add-a-feature-flag-to-an-existing-module-to-be-excluded","title":"2. Add a feature flag to an existing module to be excluded","text":"<ul> <li>Go to <code>/hat/menupermissions/constants.py</code></li> <li>Check the key corresponding to the module</li> <li>Add the featureflag code to the value list of the corresponding module(key)</li> </ul>"},{"location":"pages/dev/how_to/manually_test_enketo/manually_test_enketo.html","title":"Manually test Enketo public_create_url","text":"<p>Ensure you have a usable project, form (with form version etc..) and an orgunit in iaso. And Enketo is working. You should be able to make a submission from the web interface. Do it to verify everything</p> <p>Edit the Project in Django admin. And copy the external token It's automatically generated, so you should always have one</p> <p><code>token='xxxxxxxxx-xxxx-xxxxx-xxxxx-xxxxxxxxx'</code></p> <p>Still in the admin, take the form_id on the Form (caution: this is an external id, a string, different from the form.id) You should have one if you uploaded a correct FormVersion</p> <p><code>form_id= 'FORM_ID'</code></p> <p>On the OrgUnit take the external token: (it's in the dashboard)</p> <p><code>external_org_unit_id= \"AAAA0000000000\"</code></p> <p>Make an url with it:</p> <pre><code>f\"/api/enketo/public_create_url/?period={period}&amp;form_id={form_id}&amp;token={token}&amp;external_org_unit_id={external_org_unit_id}\"\n=&gt; '/api/enketo/public_create_url/?period=202301&amp;form_id=FORM_ID&amp;token=xxxxxxxxx-xxxx-xxxxx-xxxxx-xxxxxxxxx&amp;external_org_unit_id=AAAA0000000000'\n</code></pre> <p>Iaso will return a json with a URL, open it. Fill the form.</p> <p>To test the export, add the to_export=true argument. You will need FormMapping and a DHIS2 configuration to test the full export</p>"},{"location":"pages/dev/how_to/rebuild_front/rebuild_front.html","title":"Rebuilding the Frontend","text":""},{"location":"pages/dev/how_to/rebuild_front/rebuild_front.html#docker","title":"Docker","text":""},{"location":"pages/dev/how_to/rebuild_front/rebuild_front.html#removing-existing-docker-images","title":"Removing Existing Docker Images:","text":"<pre><code>docker rmi -f iaso-webpack:latest\n</code></pre>"},{"location":"pages/dev/how_to/rebuild_front/rebuild_front.html#build-the-new-docker-image","title":"Build the new Docker image:","text":"<pre><code>docker compose build --no-cache webpack\n</code></pre>"},{"location":"pages/dev/how_to/rebuild_front/rebuild_front.html#local","title":"Local","text":""},{"location":"pages/dev/how_to/rebuild_front/rebuild_front.html#removing-node_modules","title":"Removing node_modules:","text":"<pre><code>rm -rf node_modules\n</code></pre>"},{"location":"pages/dev/how_to/rebuild_front/rebuild_front.html#clean-npm-cache","title":"Clean npm cache:","text":"<pre><code>npm cache clean --force\n</code></pre>"},{"location":"pages/dev/how_to/rebuild_front/rebuild_front.html#reinstall-npm-packages","title":"Reinstall npm packages:","text":"<pre><code>npm ci\n</code></pre>"},{"location":"pages/dev/how_to/run_docs_locally/run_docs_locally.html","title":"How to run this site locally","text":"<ul> <li>Clone the repository</li> <li>Start a virtual environment</li> <li>cd to <code>/docs/</code></li> <li>Run <code>pip install -r requirements.txt</code></li> <li>cd to the root folder of iaso</li> <li>Run <code>mkdocs serve</code></li> </ul>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html","title":"Setup a dev environment","text":"<p>A running local instance for development can be spun up via docker compose which will install and configure all deps in separate container. As such your computer should only need:</p> <ul> <li>git</li> <li>docker</li> <li>docker compose</li> </ul> <p>If docker compose give you trouble, make sure it can connect to the docker daemon.</p> <p>If you use an Apple Silicon Mac, ensure <code>export DOCKER_DEFAULT_PLATFORM=linux/amd64</code> is set.</p> <p>A <code>pgdata-iaso</code> folder, containing the database data, will be created in the parent directory of the git repository.</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#1-environment-variables","title":"1. Environment variables","text":"<p>The docker-compose.yml file contains sensible defaults for the Django application.</p> <p>Other environment variables can be provided by a .env file.</p> <p>As a starting point, you can copy the sample .env.dist file and edit it to your needs.</p> <pre><code>cp .env.dist .env\n</code></pre> <p>note: All the commands here need to be run in the project directory in which the repository was cloned</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#2-build-the-containers","title":"2. Build the containers","text":"<p>This will build and download the containers.</p> <pre><code>docker compose build\n</code></pre>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#3-start-the-database","title":"3. Start the database","text":"<pre><code>docker compose up db\n</code></pre>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#4-run-migrations","title":"4. Run migrations","text":"<pre><code>docker compose run --rm iaso manage migrate\n</code></pre> <p>If you get a message saying that the database iaso does not exist, you can connect to your postgres instance using </p> <pre><code>psql -h localhost -p 5433 -U postgres\n</code></pre> <p>then type </p> <pre><code>create database iaso; \n</code></pre> <p>to create the missing database.</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#5-start-the-server","title":"5. Start the server","text":"<p>To start all the containers (backend, frontend, db)</p> <pre><code>docker compose up\n</code></pre> <p>The web server will be reachable at <code>http://localhost:8081</code>.</p> <p>The <code>docker-compose.yml</code> file describes the setup of the containers.</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#6-create-a-superuser","title":"6. Create a superuser","text":"<p>To login to the app or the Django admin, a superuser needs to be created with:</p> <pre><code>docker compose exec iaso ./manage.py createsuperuser\n</code></pre> <p>You can now login in the admin at <code>http://localhost:8081/admin</code>.</p> <p>Then additional users with custom groups and permissions can be added through the Django admin or loaded via fixtures.</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#7-create-and-import-data","title":"7. Create and import data","text":"<p>To create the initial account, project and profile, do the following:</p> <pre><code>docker compose exec iaso ./manage.py create_and_import_data\n</code></pre> <p>You can now login on <code>http://localhost:8081</code> but still need to import your own data.</p> <p>An alternative to this and the following steps is to import data from DHIS2.</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#8-create-a-form","title":"8. Create a form","text":"<p>Run the following command to create a form:</p> <pre><code>docker compose exec iaso ./manage.py create_form\n</code></pre> <p>At this point, if you want to edit forms directly on your machine using Enketo, go to the Enketo setup section of this README (down below).</p> <p>Once you are done, you can click on the eye for your newly added form, click on \"+ Create\", tap a letter, then enter, select the org unit, then click \"Create submission\".</p> <p>If Enketo is running and well setup, you can fill the form now.</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#9-start-adding-features","title":"9. Start adding features","text":"<p>You can now start to develop additional features on Iaso!</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#10-import-orgunit-forms-and-submission-from-dhis2","title":"10. Import OrgUnit, Forms and Submission from DHIS2","text":"<p>Alternatively or in addition to steps 7-8, you can import data from the DHIS2 demo server (play.dhis2.org):</p> <pre><code>docker compose run --rm iaso manage seed_test_data --mode=seed --dhis2version=2.35.3\n</code></pre> <p>The hierarchy of OrgUnit, group of OrgUnit, Forms, and their Submissions will be imported. OrgUnit types are not handled at the moment</p> <p>Log in to  http://127.0.0.1:8081/dashboard with :</p> <ul> <li>user : testemail2.35.3</li> <li>password: testemail2.35.3</li> </ul>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#11-enketo","title":"11. Enketo","text":"<p>To submit and edit existing form submission from the browser, an Enketo service is needed. </p> <p>To enable the Enketo editor in your local environment, include the additional docker compose configuration file for Enketo. Do so by invoking docker compose with both files.</p> <pre><code>docker compose -f docker-compose.yml -f docker/docker-compose-enketo.yml up\n</code></pre> <p>No additional configuration is needed. The first time the docker image is launched, it will download dependencies and do a build witch may take a few minutes. Subsequents launches are faster.</p> <p>You can check that the server is correctly launched by going to http://localhost:8005</p> <p>To seed your DB with typical example forms editable by Enketo, see import data from DHIS2</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#12-database-dump","title":"12. Database dump","text":"<p>To create a copy of your iaso database in a file (dump) you can use:</p> <pre><code>docker compose exec db pg_dump -U postgres iaso  -Fc &gt; iaso.dump\n</code></pre> <p>The dumpfile will be created on your host. The <code>-Fc</code> meant it will use an optimised Postgres format (which take less place). If you want the plain sql command use <code>-Fp</code></p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#13-restore-database-from-dump","title":"13. Restore database from dump","text":"<ol> <li>Ensure the database server is running but not the rest. Close your docker compose, ensure it is down with <code>docker compose down</code></li> <li>Launch the database server with <code>docker compose up db</code> </li> <li>Choose a name for you database. In this example  it will be <code>iaso5</code>    You can list existing databases using <code>docker compose exec db psql -U postgres -l</code></li> <li>Create the database <code>docker compose exec db psql -U postgres -c \"create database iaso5\"</code></li> <li>Restore the dump file to put the data in your database</li> </ol> <pre><code>cat iaso.dump | docker compose exec -T db pg_restore -U postgres -d iaso5 -Fc --no-owner /dev/stdin\n</code></pre> <ol> <li>Edit your <code>.env</code> file to use to this database in the <code>RDS_DB_NAME</code> settings.</li> <li>Start Iaso. Cut your docker compose (see 0) and relaunch it fully. Warning: Modification in your .env file are not taken into account unless you entirely stop your docker compose</li> </ol>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#14-health","title":"14. Health","text":"<p>On the /health/ url you can find listed the Iaso version number, environment, deployment time, etc... that might help you understand how this server instance is deployed for debugging. e.g.  https://iaso.bluesquare.org/health/</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#15-set-up-a-local-dhis2-server","title":"15. Set up a local DHIS2 server","text":"<p>Experimental. For development if you need a local dhis2 server, you can spin up one in your docker compose by using the <code>docker/docker-compose-dhis2.yml</code> configuration file.</p> <p>Replace your invocations of <code>docker compose</code> by <code>docker compose -f docker-compose.yml -f docker/docker-compose-dhis2.yml</code> you need to specify both config files. e.g to launch the cluster:</p> <pre><code>docker compose -f docker-compose.yml -f docker/docker-compose-dhis2.yml up\n</code></pre> <p>The DHIS2 will be available on your computer on http://localhost:8080 and is reachable from Iaso as http://dhis2:8080. The login and password are admin / district. If you use it as an import source do not set a trailing /</p> <p>Database file are stored in <code>../pgdata-dhis2</code> and dhis2 log and uploaded files in <code>docker/DHIS2_home</code>.</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#16-sample-dhis2-database","title":"16. Sample dhis2 database","text":"<p>You will probably require some sample data in your instance. It is possible to populate your DHIS2 server with sample data from a database dump like it's done for the official play servers. The DHIS2 database take around 3 GB.</p> <p>The steps as are follow: Download the file, stop all the docker, remove the postgres database directory, start only the database docker, load the database dump and then restart everything.</p> <pre><code>wget https://databases.dhis2.org/sierra-leone/2.36.4/dhis2-db-sierra-leone.sql.gz\ndocker compose down\nsudo rm ../pgdata-dhis2 -r\ndocker compose up db_dhis2\nzcat dhis2-db-sierra-leone.sql.gz| docker compose exec -T db_dhis2 psql -U dhis dhis2 -f /dev/stdin\ndocker compose up\ncd Projects/blsq/iaso\ndocker compose up dhis2 db_dhis2\n</code></pre>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#17-set-up-single-sign-on-sso-with-a-local-dhis2","title":"17. Set up Single Sign On (SSO) with a local DHIS2","text":"<p>If you want to test the feature with your local dhis2 you can use the following step. This assume you are running everything in Docker containers</p> <ol> <li>Launch DHIS2 with iaso within docker compose <code>docker compose -f docker-compose.yml -f docker/docker-compose-dhis2.yml up</code>  With the default docker compose setup, iaso is on port 8081 and dhis2 on port 8081 on your machine</li> <li>These step assume you have loaded your DHIS2 with the play test data but it's not mandatory. To see how to do it, look at previous section</li> <li>Configure an Oauth client in DHIS2: open http://localhost:8080/dhis-web-settings/index.html#/oauth2</li> <li>Add new client:</li> <li>Name : what you want</li> <li>ClientId: What you want (must be the same as your external credential in Iaso)</li> <li>Client Secret : there is one generated, copy it and save it for a latter step</li> <li>Grant Type: check Authorization code</li> <li> <p>Redirect URI : http://localhost:8081/api/dhis2/{same as client id}/login/</p> </li> <li> <p>Setup external credential in iaso</p> </li> <li>open admin http://localhost:8081/admin/</li> <li>go to External Credentials | http://localhost:8081/admin/iaso/externalcredentials/</li> <li>Add external credentials on the top right | http://localhost:8081/admin/iaso/externalcredentials/add/</li> <li>Account: The account for which you want to enable dhis2 auth</li> <li>Name : Same as DHIS2 Client ID</li> <li>Login : http://dhis2:8080/</li> <li>Password: the client secret you saved in step 2</li> <li>Url: http://localhost:8081/</li> </ol> <p>5 Create a new user in Iaso, grant it some rights</p> <ol> <li> <p>In DHIS2 retrieve the id for the user</p> <ul> <li>Current way I have found it is to go to http://localhost:8080/api/me and copy the id field</li> <li>But you can also find a user here and it's in the url http://localhost:8080/dhis-web-user/index.html#/users</li> </ul> </li> <li> <p>Add the dhis2 id to the Iaso user : Open the target user in the iaso Admin http://localhost:8081/admin/iaso/profile/ and add it to the dhis2 id field, save.</p> </li> <li> <p>Unlog from iaso or in a separate session/container</p> </li> <li>Try the feature by opening : http://localhost:8080/uaa/oauth/authorize?client_id={your_dhis2_client_id}&amp;response_type=code</li> </ol>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#18-test-forms-from-iaso-mobile-application","title":"18. Test forms from Iaso mobile application","text":""},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#1-setup-ngrok","title":"1 - Setup Ngrok","text":"<p>Download and setup Ngrok on https://ngrok.com/. Once Ngrok installed and running you must add your ngrok server url in <code>settings.py</code> by adding the following line :</p> <pre><code>FILE_SERVER_URL = os.environ.get(\"FILE_SERVER_URL\", \"YOUR_NGROK_SERVER_URL\")\n</code></pre> <p>After this step you have to import  <code>settings.py</code> and add <code>FILE_SERVER_URL</code> to <code>forms.py</code> in iaso/models/forms as shown on the following lines :</p> <pre><code>\"file\": settings.FILE_SERVER_URL + self.file.url,\n\"xls_file\": settings.FILE_SERVER_URL + self.xls_file.url if self.xls_file else None\n</code></pre>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#2-setup-the-mobile-app","title":"2 - Setup the mobile app","text":"<p>Once Ngrok installed and running you have to run the app in developer mode (tap 10 times on the Iaso icon at start ) and connect the mobile app to your server by selecting the 3 dots in the top right corner and select \"change server url\". When connected to your server, refresh all data and your app will be ready and connected to your development server.</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#19-sso-with-dhis2","title":"19. SSO with DHIS2","text":"<p>You can use DHIS2 as identity provider to login on Iaso. It requires a little configuration on DHIS2 and Iaso in order to achieve that. </p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#1-setup-oauth2-clients-in-dhis2","title":"1 - Setup OAuth2 clients in DHIS2","text":"<p>In DHIS2 settings you must setup your Iaso instance as Oauth2 Clients. Client ID and Grant types must be : * Client ID : What you want (Must be the same as your external credential name in Iaso) * Grant Types : Authorization code</p> <p>Redirect URIs is your iaso server followed by : <code>/api/dhis2/{your_dhis2_client_id}/login/</code></p> <p>For example : https://myiaso.com/api/dhis2/dhis2_client_id/login/</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#2-configure-the-oauth2-connection-in-iaso","title":"2 - Configure the OAuth2 connection in Iaso","text":"<p>In iaso you must setup your dhis2 server credentials.  To do so, go to <code>/admin</code> and setup as follow :  </p> <ul> <li>Name: {your_dhis2_client_id} ( It must be exactly as it is in your DHIS2 client_id and DHIS2 Redirect URIs)</li> <li>Login: Your DHIS2 url (Ex : https://sandbox.dhis2.org/ )</li> <li>Password: The secret provided by DHIS2 when you created your OAuth2 client.</li> <li>Url: Your Iaso Url (Ex: https://myiaso.com/)</li> </ul> <p>Don't forget the <code>/</code> at the end of the urls.</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#3-workflow-for-single-sign-on-as-a-sequence-diagram","title":"3. Workflow for Single Sign On as a sequence diagram","text":"<pre><code>sequenceDiagram\n    autonumber\n    Note right of Browser: user open url to login\n    Browser-&gt;&gt;DHIS2: GET /uaa/oauth/authorize&lt;br&gt;?client_id={your_dhis2_client_id}\n    loop if not logged\n        DHIS2-&gt;&gt;Browser: Login screen\n        Browser-&gt;&gt;DHIS2: Enter credentials\n        DHIS2-&gt;&gt;Browser: Login ok\n    end\n    DHIS2 --&gt;&gt; Browser: 200 Authorize Iaso? Authorize/Deny\n    Browser -&gt;&gt; DHIS2: POST /authorize\n    DHIS2 --&gt;&gt; Browser: 303  redirect\n    Browser -&gt;&gt; IASO: GET /api/dhis2/&lt;dhis2_slug&gt;/login/?code=\n    IASO -&gt;&gt; DHIS2: POST /uaa/oauth/token/\n    DHIS2 --&gt;&gt; IASO: access token\n    IASO -&gt;&gt; DHIS2 : GET /api/me\n    DHIS2 --&gt;&gt; IASO: credential info\n    Note right of IASO: find matching IASO user\n    Note right of IASO: Log in session\n    IASO --&gt;&gt; Browser: 303 Redirect &amp; set cookies\n    Browser -&gt;&gt; IASO: Use iaso normally as logged user.\n</code></pre>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#20live-bluesquare-components","title":"20.Live Bluesquare components","text":"<p>It is possible to configure the project to load a version of Bluesquare components from a local git repository instead of the one installed from a package. This enabled to develop feature necessitating modification in the components code.</p> <p>To do so:  * place the repository in the parent repository of Iaso <code>../bluesquare-components/</code>  * install the dependency for bluesquare-component by running npm install in its directory  * set the environment variable <code>LIVE_COMPONENTS=true</code>  * start your docker compose</p> <pre><code>cd ..\ngit clone git@github.com:BLSQ/bluesquare-components.git\ncd  bluesquare-components\nnpm install\ncd ../iaso\nLIVE_COMPONENTS=true docker compose up\n</code></pre> <p>This way the page will reload automatically if you make a change to the bluesquare-components code.</p> <p>This functionality also works if you launch webpack outside of docker.</p> <p>If you encounter any problem, first check that your repo is on the correct branch and the deps are up-to-date</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#21-task-worker","title":"21. Task worker","text":"<p>In local development, you can run a worker for background tasks by using the command:</p> <pre><code>docker compose run iaso manage tasks_worker\n</code></pre> <p>Alternatively, you can call the url <code>tasks/run_all</code> which will run all the pending tasks in queue.</p>"},{"location":"pages/dev/how_to/setup_dev_env/setup_dev_env.html#22-customization","title":"22. Customization","text":"<p>You can override default application title, logo and colors using the <code>.env</code> file and specify those variables:</p> <pre><code>THEME_PRIMARY_COLOR=\"&lt;hexa_color&gt;\"\nTHEME_PRIMARY_BACKGROUND_COLOR=\"&lt;hexa_color&gt;\"\nTHEME_SECONDARY_COLOR=\"&lt;hexa_color&gt;\"\nAPP_TITLE=\"&lt;app_title&gt;\"\nFAVICON_PATH=\"&lt;path_in_static_folder&gt;\"\nLOGO_PATH=\"&lt;path_in_static_folder&gt;\"\nSHOW_NAME_WITH_LOGO=\"&lt;'yes' or 'no'&gt;\"\n</code></pre> <p>Those settings are optional and are using a default value if nothing is provided</p>"},{"location":"pages/dev/how_to/setup_dev_env/setuper.html","title":"Setuper","text":""},{"location":"pages/dev/how_to/setup_dev_env/setuper.html#introduction","title":"Introduction","text":"<p>The setuper.py script:</p> <ul> <li>kickstarts a fully working Iaso environment</li> <li>by generating contents for the database</li> <li>using the Iaso API</li> </ul> <p>It will:</p> <ul> <li>generate a random account name</li> <li>create the corresponding account, data source, source version, first user </li> <li>import an org unit sample </li> <li>import a test form</li> <li>create a few submissions of this form </li> <li>create a few entities</li> </ul> <p>Once the script has run, you can log in to your server using the account name as login and password. </p>"},{"location":"pages/dev/how_to/setup_dev_env/setuper.html#how-to-use","title":"How To Use","text":"<ol> <li> <p>Backup your DB</p> <pre><code>docker compose exec db pg_dump -U postgres iaso  -Fc &gt; ~/Desktop/iaso.dump\n</code></pre> </li> <li> <p>Use an empty DB</p> <pre><code># Find your Iaso DB.\ndocker compose exec db psql -U postgres -l\n\n# Delete your Iaso DB.\ndocker compose exec db psql -U postgres -c \"drop database if exists iaso\"\n\n# Create your Iaso DB.\ndocker compose exec db psql -U postgres -c \"create database iaso\"\n</code></pre> </li> <li> <p>Run the Django server in a first terminal (this will run DB migrations)</p> <pre><code>docker compose up iaso\n</code></pre> </li> <li> <p>Run a worker in a second terminal</p> <pre><code>docker compose run iaso manage tasks_worker\n</code></pre> </li> <li> <p>Create a superuser</p> <pre><code>docker compose exec iaso ./manage.py createsuperuser\n</code></pre> </li> <li> <p>Prepare the setuper (it requires a local Python 3)</p> <pre><code>cd setuper\n</code></pre> <ul> <li> <p>Create a virtual env for your local Python:</p> <p>python3 -m venv venv    source venv/bin/activate</p> </li> </ul> </li> <li> <p>Install requirements:</p> <pre><code>   pip install -r requirements.txt\n</code></pre> <ul> <li> <p>Update <code>credentials.py</code> because we need a user with API access (use your superuser credentials)</p> <p>cp data/sample-credentials.py credentials.py</p> </li> </ul> </li> <li> <p>Run the setuper</p> <pre><code>python3 setuper.py\n</code></pre> </li> </ol>"},{"location":"pages/dev/how_to/use_iaso_apis/use_iaso_apis.html","title":"Use iaso apis","text":"<p>It's a relatively standard json based API built using the Django Rest Framework. </p> <p>Here is a sample Python script showing how to fetch your list of submissions: </p> <pre><code>import os\nimport requests\n\n# API setup\nserver = \"https://iaso.bluesquare.org\"\ncreds = {\n    \"username\": USERNAME,\n    \"password\": PASSWORD\n}\n\ninstances_endpoint = server + \"/api/instances/\"\n\n# get API token\nr = requests.post(server + \"/api/token/\", json=creds)\n\ntoken = r.json().get('access')\nheaders = {\"Authorization\": \"Bearer %s\" % token}\n\n# request submissions data\nr = requests.get(instances_endpoint,\n                 headers=headers)\n\nj = r.json()\n</code></pre> <p>Most endpoints of Iaso provide exports to csv through the mechanisms provided by the Django Rest Framework (by adding <code>format=csv</code> to the url) and some of them provide exports to xlsx (<code>xlsx=true</code>) and geopackage (<code>gpkg=true</code>) formats.</p>"},{"location":"pages/dev/how_to/write_visit_on_nfc/write_visit_on_nfc.html","title":"Forewords","text":"<p>In the context of CODA2, Iaso will have to write some forms\u2019 information on an NFC card. The NFC card\u2019s size may vary in the future, but the current size of the card is 8k. Yet, the card is currently split into two partitions; one is used by CODA and the other by SCOPE. SCOPE has 6kB out of the 8, leaving 2kB to CODA.</p> <p>Famoco provided the implementation for the CODA 1.5 application.</p> <p>We know that the patient\u2019s profile can take up to 500B, and the subsequent visits can take up to 144B with a total of 8 visits maximum.</p> <p>This gives us a total of 1652B if all slots are filled.</p> <p>I assume that the remaining 396B (2048 - 1652) is the encryption overhead.</p> <p>Assuming Famoco is using an AES/CBC symmetric encryption with a salt of 256B and an IV (initialization vector) of 16B over the whole data, the assumption would hold.</p>"},{"location":"pages/dev/how_to/write_visit_on_nfc/write_visit_on_nfc.html#famocos-split","title":"Famoco\u2019s split","text":"<p>In the documentation provided by Famoco, called DESFireService_v1.0.1, they mention two types of writing:</p> <ol> <li> <p>File \u201c01\u201d, which we\u2019ll call the profile, is up to 500B</p> </li> <li> <p>File \u201c02\u201d, which we\u2019ll call the visits, is of variable length based     &gt; on the type of card used.</p> </li> </ol> <p>The profile is marked as a binary file overridden on each writing.</p> <p>The visits are marked as a cyclic record. Every time a visit is recorded, it is added to the previous ones. If the max length is reached, the oldest record is deleted to make room for the new one (FIFO).</p> \u2753 It is yet to be defined if a model outside of Famoco should follow the same split and enforce the writing of one record at a time."},{"location":"pages/dev/how_to/write_visit_on_nfc/write_visit_on_nfc.html#ndef-messages-and-ndef-records","title":"NDEF Messages and NDEF Records","text":"<p>NFC Data Exchange Format (or NDEF) is a lightweight binary format, used to encapsulate typed data. It is specified by the NFC Forum, for transmission and storage with NFC. However, it is transport agnostic.</p> <p>The format defines Messages and Records:</p> <ul> <li> <p>An NDEF Record contains typed data, such as MIME-type media, a URI,     &gt; or a custom application payload.</p> </li> <li> <p>An NDEF Message is a container for one or more NDEF Records.</p> </li> </ul>"},{"location":"pages/dev/how_to/write_visit_on_nfc/write_visit_on_nfc.html#why-use-ndef","title":"Why use NDEF?","text":"<p>As described in the Android documentation, It is mandatory for all Android devices with NFC to correctly enumerate Ndef on NFC Forum Tag Types 1-4, and implement all NDEF operations as defined in said documentation.</p> <p>Therefore, it guarantees that a perfectly written tag will be readable by all Android devices with NFC.</p> <p>Finally, the overhead of NDEF is existent but can be considered negligible compared to the advantages it brings. Based on this StackOverflow answer, the overhead is roughly 12 bytes:</p> <ul> <li> <p>NDEF Header byte: 1 byte</p> </li> <li> <p>NDEF type length field: 1 byte</p> </li> <li> <p>NDEF payload length field: 1-4 bytes</p> </li> <li> <p>NDEF type name \"iaso:p\" (external type): 6 bytes</p> </li> </ul>"},{"location":"pages/dev/how_to/write_visit_on_nfc/write_visit_on_nfc.html#encryption","title":"Encryption","text":"<p>Famoco\u2019s devices are relying on a Secure Access Module (or SAM) chip which encrypts and guarantees a secured shared secret across the authorized devices.</p> <p>Unfortunately, regular Android devices can't rely on such a chip. Therefore, we must find a solution to encrypt the card's data in a way only decipherable by another authorized device without an internet connection.</p> <p>Since all the authorized devices will need to be able to encrypt and decrypt the data, there is no need to go with asymmetric encryption.</p> <p>The current standard for symmetric encryption is AES.</p>"},{"location":"pages/dev/how_to/write_visit_on_nfc/write_visit_on_nfc.html#the-overhead","title":"The overhead","text":"<p>As explained in this StackOverflow answer, AES doesn\u2019t expand data, but the padding will.</p> <p>The maximum amount of padding is up to the padding algorithm.</p> <p>In the case of PKCS7Padding, it should be up to 16 bytes as defined in the RFC3602.</p> <p>On top of that, it\u2019s good practice to salt the password to make the deciphering even more complex, avoid rainbow tables attacks, and avoid being able to compare two identical records (which is more likely to happen with small forms).</p> <p>AES also comes with the concept of Initialization Vector (or IV) randomly generated on each encryption.</p> <p>The salt and the IV will be communicated in clear text alongside the encrypted data to be able to decrypt it. Therefore, they will add up to the number of bytes written on the card.</p> \ud83d\udd10 As advised by the National Institute of Standards and Technology (NIST), the length of the randomly-generated portion of the salt shall be at least 128 bits (16 bytes). In the current PoC implementation, it\u2019s 256 bytes. \ud83d\udd10 AES requires an IV size of 16 bytes <p>The total overhead is therefore of the size of the salt (256B), the size of the IV (16B), and the padding (up to 16B), which sums up to 288B but could be lowered to 48B if we reduce the salt to 16B for lesser security.</p>"},{"location":"pages/dev/how_to/write_visit_on_nfc/write_visit_on_nfc.html#how-the-data-is-split","title":"How the data is split","text":"<p>The overhead discussed previously is computed per encryption; if we encrypt all the data at once, the overhead is of that amount. If we encrypt the profile and the visits separately, the overhead is multiplied by two. The overhead is much higher if we encrypt the profile and each visit individually.</p> \ud83d\udd10 I don\u2019t have sufficient knowledge to tell if there is any security benefit in one or the other approach. Yet, based on the size of the available space on the card, I assume we should encrypt all the data at once or encrypt the profile and the visits separately but not all the visits apiece."},{"location":"pages/dev/how_to/write_visit_on_nfc/write_visit_on_nfc.html#sharing-the-nfc-password-securely","title":"Sharing the NFC password securely","text":"<p>Every security measure is as strong as its weakest link. The whole encryption mechanism is rendered useless if the password is too weak, easily guessable, or easily accessible.</p> <p>Therefore, we need to find a good way to share the password while considering the complexity for the end user to obtain it.</p> \ud83d\ude08 Keep in mind that nothing is 100% secure. All the solutions we could come up with have flaws, even the SAM chip used by Famoco. Yet, we can only make it harder and harder for someone to retrieve the key to the point that they either can\u2019t retrieve it (missing skills or hardware) or don\u2019t find that it is worth their while."},{"location":"pages/dev/how_to/write_visit_on_nfc/write_visit_on_nfc.html#embedded-inside-the-apk","title":"Embedded inside the APK","text":"<p>The easiest way to share a password across authorized devices is to embed it directly into the APK (an APK is a file containing the code and resources of an application that an Android device can interpret to install it).</p> <p>Yet, this solution is only viable if, and only if, the APK is distributed via a Mobile Device Management (or MDM) and that the MDM can securely prevent people from retrieving the APK from the device.</p> <p>If the APK is distributed via the Play Store (or any other means that is publicly available or that allow retrieving the APK), the password must be considered compromised and rendered useless.</p> <p>This solution is similar to what Famoco is doing since, in their case, the password is embedded and secured inside the SAM chip.</p>"},{"location":"pages/dev/how_to/write_visit_on_nfc/write_visit_on_nfc.html#over-the-network","title":"Over the network","text":"<p>This solution is easy for the end user, but more vulnerable as anyone can make a network request.</p> <p>The client should make an authorized (given a valid token previously retrieved with valid credentials) request to a specific endpoint.</p> <p>The endpoint would receive a public key (from an asymmetric encryption scheme like RSA) of a hardware-backed key pair as described in Android\u2019s documentation.</p> <p>The backend would be able to verify the validity of the key and its certificate chain, pointing to a Google valid certificate, and containing the correct application ID and signature.</p> <p>The password would then be encrypted by the backend with the public key and communicated back to the phone. The application should then be able to decrypt the password and store it securely.</p> <p>This solution involves that only the application can decrypt the given password.</p> \ud83d\udd11 This is the investigated solution at the moment of this writing but we are unsure how secure this would be on a rooted Android device. <p>This solution involves security measures that can be hard for attackers to obtain:</p> <ol> <li> <p>Valid credentials</p> </li> <li> <p>A compromised phone with the application on it.</p> </li> <li> <p>A way to compromise the device in a way it is not detected by     &gt; Android.</p> </li> </ol>"},{"location":"pages/dev/how_to/write_visit_on_nfc/write_visit_on_nfc.html#over-a-physical-device","title":"Over a physical device","text":"<p>If the password is stored inside a physical device (like a USB key, a specific phone application, etc.) that is provided in limited quantities to trusted members of the organization, it can be shared through physical contact between the device to authorize and the trusted member with the physical device.</p> <p>The password is then securely stored on the authorized device for later use.</p> <p>This solution is secure but could be cumbersome. For example, if there are many devices to authorize, it can take a long time to transfer the password on each device. There could also be an issue if the devices are spread across the country, and the trusted members must go to each location to authorize the devices.</p>"},{"location":"pages/dev/how_to/write_visit_on_nfc/write_visit_on_nfc.html#a-mix-of-the-above-solutions","title":"A mix of the above solutions","text":"<p>The solutions provided above are not exhaustive and can also be mixed. For example, we could consider storing the password on a physical device to be encrypted with a key that needs to be retrieved via an authorized network request.</p> <p>The more barrier we put in recovering the key, the more secure it is. Yet, it also makes the logistics for genuine authorized devices more complex.</p>"},{"location":"pages/dev/reference/API/entity.html","title":"API reference: Entity","text":"<p>Entity and related models</p> <p>The entity concept might feel a bit abstract, so it might be useful to reason about them using a concrete example (beneficiaries):</p> <ul> <li>Entities are used to track beneficiaries (=people who will benefit from the help an organization provides). Those beneficiaries can be of different types (E.g.: Children under 5, Pregnant or lactating women, etc.).</li> <li>Those beneficiaries are visited multiple times, so multiple submissions/instances (that we call \"records\") are attached to them via the entity_id foreign key of Instance.</li> <li>In addition to those records, we also want to track some core metadata about the beneficiary, such as their name, age,... Because entities can be of very different natures, we avoid hardcoding those fields in the Entity model, and also reuse the form mechanism: each EntityType has a foreign key to a reference form, and each entity has a foreign key (attributes) to an instance/submission of that form.</li> </ul>"},{"location":"pages/dev/reference/API/entity.html#iaso.models.entity.Entity","title":"<code>Entity</code>","text":"<p>         Bases: <code>SoftDeletableModel</code></p> <p>An entity represents a physical object or person with a known Entity Type</p> <p>Contrary to forms, they are not linked to a specific OrgUnit. The core attributes that define this entity are not stored as fields in the Entity model, but in an Instance / submission</p> Source code in <code>iaso/models/entity.py</code> <pre><code>class Entity(SoftDeletableModel):\n\"\"\"An entity represents a physical object or person with a known Entity Type\n\n    Contrary to forms, they are not linked to a specific OrgUnit.\n    The core attributes that define this entity are not stored as fields in the Entity model, but in an Instance /\n    submission\n    \"\"\"\n\n    name = models.CharField(max_length=255, blank=True)  # this field is not used, name value is taken from attributes\n    uuid = models.UUIDField(default=uuid.uuid4, editable=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    entity_type = models.ForeignKey(EntityType, blank=True, on_delete=models.PROTECT)\n    attributes = models.OneToOneField(\n        Instance, on_delete=models.PROTECT, help_text=\"instance\", related_name=\"attributes\", blank=True, null=True\n    )\n    account = models.ForeignKey(Account, on_delete=models.PROTECT)\n    merged_to = models.ForeignKey(\"self\", null=True, blank=True, on_delete=models.PROTECT)\n\n    objects = DefaultSoftDeletableManager.from_queryset(EntityQuerySet)()\n\n    objects_only_deleted = OnlyDeletedSoftDeletableManager.from_queryset(EntityQuerySet)()\n\n    objects_include_deleted = IncludeDeletedSoftDeletableManager.from_queryset(EntityQuerySet)()\n\n    class Meta:\n        verbose_name_plural = \"Entities\"\n\n    def __str__(self):\n        return \"%s %s %s %d\" % (self.entity_type.name, self.uuid, self.name, self.id)\n\n    def get_nfc_cards(self):\n        from iaso.models.storage import StorageDevice\n\n        nfc_count = StorageDevice.objects.filter(entity=self, type=StorageDevice.NFC).count()\n        return nfc_count\n\n    def as_small_dict(self):\n        return {\n            \"id\": self.pk,\n            \"uuid\": self.uuid,\n            \"name\": self.name,\n            \"created_at\": self.created_at,\n            \"updated_at\": self.updated_at,\n            \"entity_type\": self.entity_type_id,\n            \"entity_type_name\": self.entity_type and self.entity_type.name,\n            \"attributes\": self.attributes and self.attributes.as_dict(),\n        }\n\n    def as_small_dict_with_nfc_cards(self, instance):\n        entity_dict = self.as_small_dict()\n        entity_dict[\"nfc_cards\"] = self.get_nfc_cards()\n        return entity_dict\n\n    def as_dict(self):\n        instances = dict()\n\n        for i in self.instances.all():\n            instances[\"uuid\"] = i.uuid\n            instances[\"file_name\"]: i.file_name\n            instances[str(i.name)] = i.name\n\n        return {\n            \"id\": self.pk,\n            \"uuid\": self.uuid,\n            \"created_at\": self.created_at,\n            \"updated_at\": self.updated_at,\n            \"entity_type\": self.entity_type.as_dict(),\n            \"attributes\": self.attributes.as_dict(),\n            \"instances\": instances,\n            \"account\": self.account.as_dict(),\n        }\n\n    def soft_delete_with_instances_and_pending_duplicates(self, audit_source, user):\n\"\"\"\n        This method does a proper soft-deletion of the entity:\n        - soft delete the entity\n        - soft delete its attached form instances\n        - delete relevant pending EntityDuplicate pairs\n        \"\"\"\n        from iaso.models.deduplication import ValidationStatus\n\n        original = copy(self)\n        self.delete()  # soft delete\n        log_modification(original, self, audit_source, user=user)\n\n        for instance in set([self.attributes] + list(self.instances.all())):\n            original = copy(instance)\n            instance.soft_delete()\n            log_modification(original, instance, audit_source, user=user)\n\n        self.duplicates1.filter(validation_status=ValidationStatus.PENDING).delete()\n        self.duplicates2.filter(validation_status=ValidationStatus.PENDING).delete()\n\n        return self\n</code></pre>"},{"location":"pages/dev/reference/API/entity.html#iaso.models.entity.Entity.soft_delete_with_instances_and_pending_duplicates","title":"<code>soft_delete_with_instances_and_pending_duplicates(audit_source, user)</code>","text":"<p>This method does a proper soft-deletion of the entity: - soft delete the entity - soft delete its attached form instances - delete relevant pending EntityDuplicate pairs</p> Source code in <code>iaso/models/entity.py</code> <pre><code>def soft_delete_with_instances_and_pending_duplicates(self, audit_source, user):\n\"\"\"\n    This method does a proper soft-deletion of the entity:\n    - soft delete the entity\n    - soft delete its attached form instances\n    - delete relevant pending EntityDuplicate pairs\n    \"\"\"\n    from iaso.models.deduplication import ValidationStatus\n\n    original = copy(self)\n    self.delete()  # soft delete\n    log_modification(original, self, audit_source, user=user)\n\n    for instance in set([self.attributes] + list(self.instances.all())):\n        original = copy(instance)\n        instance.soft_delete()\n        log_modification(original, instance, audit_source, user=user)\n\n    self.duplicates1.filter(validation_status=ValidationStatus.PENDING).delete()\n    self.duplicates2.filter(validation_status=ValidationStatus.PENDING).delete()\n\n    return self\n</code></pre>"},{"location":"pages/dev/reference/API/entity.html#iaso.models.entity.EntityType","title":"<code>EntityType</code>","text":"<p>         Bases: <code>models.Model</code></p> <p>Its <code>reference_form</code> describes the core attributes/metadata about the entity type (in case it refers to a person: name, age, ...)</p> Source code in <code>iaso/models/entity.py</code> <pre><code>class EntityType(models.Model):\n\"\"\"Its `reference_form` describes the core attributes/metadata about the entity type (in case it refers to a person: name, age, ...)\"\"\"\n\n    name = models.CharField(max_length=255)  # Example: \"Child under 5\"\n    code = models.CharField(\n        max_length=255, null=True, blank=True\n    )  # As the name could change over the time, this field will never change once the entity type created and ETL script will rely on that\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    # Link to the reference form that contains the core attribute/metadata specific to this entity type\n    reference_form = models.ForeignKey(Form, blank=True, null=True, on_delete=models.PROTECT)\n    account = models.ForeignKey(Account, on_delete=models.PROTECT, blank=True, null=True)\n    is_active = models.BooleanField(default=False)\n    # Fields (subset of the fields from the reference form) that will be shown in the UI - entity list view\n    fields_list_view = ArrayField(\n        models.CharField(max_length=255, blank=True, db_collation=\"case_insensitive\"), size=100, null=True, blank=True\n    )\n    # Fields (subset of the fields from the reference form) that will be shown in the UI - entity detail view\n    fields_detail_info_view = ArrayField(\n        models.CharField(max_length=255, blank=True, db_collation=\"case_insensitive\"), size=100, null=True, blank=True\n    )\n    # Fields (subset of the fields from the reference form) that will be used to search for duplicate entities\n    fields_duplicate_search = ArrayField(\n        models.CharField(max_length=255, blank=True, db_collation=\"case_insensitive\"), size=100, null=True, blank=True\n    )\n    prevent_add_if_duplicate_found = models.BooleanField(\n        default=False,\n    )\n\n    class Meta:\n        unique_together = [\"name\", \"account\"]\n\n    def __str__(self):\n        return f\"{self.name}\"\n\n    def as_dict(self):\n        return {\n            \"name\": self.name,\n            \"created_at\": self.created_at,\n            \"updated_at\": self.updated_at,\n            \"reference_form\": self.reference_form.as_dict(),\n            \"account\": self.account.as_dict(),\n        }\n</code></pre>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html","title":"<code>OrgUnitChangeRequestConfiguration</code> API","text":"<p>This document is a first draft of the <code>OrgUnitChangeRequestConfiguration</code> API that was designed by Benjamin in August 2024 and updated by Thibault. It still needs to be updated and completed, once the developments are over.</p>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#1-post-apiorgunitschangesconfigs","title":"1 - POST /api/orgunits/changes/configs/","text":"<p>API used to create or modify a Change Request configuration.</p>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#permissions","title":"Permissions","text":"<ul> <li>Change Request Configuration</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#body","title":"Body","text":"<pre><code>{\n  \"uuid\": \"UUID? - OrgUnitChangeRequestConfiguration UUID\",\n  \"project_id\": \"Int - Project ID\",\n  \"org_unit_type_id\": \"Int - OrgUnit Type ID\",\n  \"org_units_editable\": \"Boolean? - Whether or not OrgUnits of this OrgUnit Type are editable\",\n  \"editable_fields\": [\"Array&lt;String&gt; - List of possible fields\"],\n  \"possible_type_ids\": [\"Array&lt;Int&gt; - List of possible OrgUnit Type IDs that are allowed as new type for this OrgUnit Type\"],\n  \"possible_parent_type_ids\": [\"Array&lt;Int&gt; - List of possible OrgUnit Type IDs that are allowed as new parent for this OrgUnit Type\"],\n  \"group_set_ids\": [\"Array&lt;Int&gt; - List of GroupSet IDs for this OrgUnit Type\"],\n  \"editable_reference_form_ids\": [\"Array&lt;Int&gt; - List of reference Form ID that can be modified\"],\n  \"other_group_ids\": [\"Array&lt;Int&gt; - List of possible Group IDs for this OrgUnit Type\"]\n}\n</code></pre>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#possible-responses","title":"Possible responses","text":""},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#201-created","title":"201 - Created","text":"<p># Do we return ID/UUID when something is successfully created? Let's try to return it, or even the full OUCRC</p>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#400-bad-request","title":"400 - Bad request","text":"<ul> <li>A non-nullable field was null or omitted</li> <li><code>org_unit_type_id</code> is not assigned to the given <code>project_id</code></li> <li>One or more <code>editable_fields</code> value is unknown</li> <li>One or more <code>possible_parent_type_ids</code> is not a suitable for as a parent for the given OrgUnit Type</li> <li>One or more <code>editable_reference_forms</code> is not a reference form for the given OrgUnit Type</li> <li><code>project_id</code> is not null and doesn't exist</li> <li><code>org_unit_type_id</code> is not null and doesn't exist</li> <li>One or more <code>possible_type_ids</code> don't exist</li> <li>One or more <code>possible_parent_type_ids</code> don't exist</li> <li>One or more <code>group_set_ids</code> don't exist</li> <li>One or more <code>editable_reference_form_ids</code> don't exist</li> <li>One or more <code>other_group_ids</code> don't exist</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#401-unauthorized","title":"401 - Unauthorized","text":"<ul> <li>No authentication token or an invalid one was provided</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#403-forbidden","title":"403 - Forbidden","text":"<ul> <li>User doesn't have the proper permission</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#2-get-apiorgunitschangesconfigs","title":"2 - GET /api/orgunits/changes/configs/","text":"<p>API used to list all Change Request configurations.</p>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#permissions_1","title":"Permissions","text":"<ul> <li>Change Request Configuration</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#query-parameters","title":"Query parameters","text":"<ul> <li>page: Int (optional) - Current page (default: 1)</li> <li>limit: Int (optional) - Number of entities returned by page (default: 20)</li> <li>org_unit_type_id: Int (optional) - ID of the <code>OrgUnitType</code> to filter on</li> <li>project_id: Int (optional) - ID of the <code>Project</code> to filter on</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#possible-responses_1","title":"Possible responses","text":""},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#200-ok","title":"200 - OK","text":"<pre><code>{\n    \"count\": \"Long\",\n    \"has_next\": \"Boolean\",\n    \"has_previous\": \"Boolean\",\n    \"page\": \"Long\",\n    \"pages\": \"Long\",\n    \"limit\": \"Long\",\n    \"results\": [\n        {\n            \"id\": \"Int - ID in the database\",\n            \"uuid\": \"UUID - UUID in the database\",\n            \"project\": {\n                \"id\": \"Int - Project ID\",\n                \"name\": \"String - Project name\"\n            },\n            \"org_unit_type\": {\n                \"id\": \"Int - OrgUnit Type ID\",\n                \"name\": \"String - OrgUnit Type name\"\n            },\n            \"org_units_editable\": \"Boolean - Whether or not OrgUnits of this OrgUnit Type are editable\",\n            \"editable_fields\": \"Array&lt;String&gt; - List of possible fields\",\n            \"created_at\": \"Timestamp\",\n            \"created_by\": {\n                \"id\": \"Int - User ID\",\n                \"username\": \"String\",\n                \"first_name\": \"String\",\n                \"last_name\": \"String\"\n            },\n            \"updated_at\": \"Timestamp\",\n            \"updated_by\": {\n                \"id\": \"Int - User ID\",\n                \"username\": \"String\",\n                \"first_name\": \"String\",\n                \"last_name\": \"String\"\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#400-bad-request_1","title":"400 - Bad request","text":"<ul> <li>One or more parameters provided couldn't be parsed</li> <li>One or more parameters provided couldn't be matched with the related resource (e.g.: unknown <code>project_id</code>)</li> <li>A given parameter was not recognized</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#401-unauthorized_1","title":"401 - Unauthorized","text":"<ul> <li>No authentication token or an invalid one was provided</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#403-forbidden_1","title":"403 - Forbidden","text":"<ul> <li>User doesn't have the proper permission to access this resource.</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#3-get-apiorgunitschangesconfigsid","title":"3 - GET /api/orgunits/changes/configs/{id}/","text":"<p>API used to fully retrieve a Change Request configuration.</p>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#permissions_2","title":"Permissions","text":"<ul> <li>Change Request Configuration</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#possible-responses_2","title":"Possible responses","text":""},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#200-ok_1","title":"200 - OK","text":"<pre><code>{\n    \"id\": \"Int - ID in the database\",\n    \"uuid\": \"UUID - UUID in the database\",\n    \"project\": {\n        \"id\": \"Int - Project ID\",\n        \"name\": \"String - Project name\"\n    },\n    \"org_unit_type\": {\n        \"id\": \"Int - OrgUnit Type ID\",\n        \"name\": \"String - OrgUnit Type name\"\n    },\n    \"org_units_editable\": \"Boolean - Whether or not OrgUnits of this OrgUnit Type are editable\",\n    \"editable_fields\": \"Array&lt;String&gt; - List of possible fields\",\n    \"possible_types\": [\n        {\n            \"id\": \"Int - OrgUnit Type ID\",\n            \"name\": \"String - OrgUnit Type name\"\n        }\n    ],\n    \"possible_parent_types\": [\n        {\n            \"id\": \"Int - OrgUnit Type ID\",\n            \"name\": \"String - OrgUnit Type name\"\n        }\n    ],\n    \"group_sets\": [\n        {\n            \"id\": \"Int - GroupSet ID\",\n            \"name\": \"String - GroupSet name\"\n        }\n    ],\n    \"editable_reference_forms\": [\n        {\n            \"id\": \"Int - Form ID\",\n            \"name\": \"String - Form name\"\n        }\n    ],\n    \"other_groups\": [\n        {\n            \"id\": \"Int - Group ID\",\n            \"name\": \"String - Group name\"\n        }\n    ],\n    \"created_at\": \"Timestamp\",\n    \"created_by\": {\n        \"id\": \"Int - User ID\",\n        \"username\": \"String\",\n        \"first_name\": \"String\",\n        \"last_name\": \"String\"\n    },\n    \"updated_at\": \"Timestamp\",\n    \"updated_by\": {\n        \"id\": \"Int - User ID\",\n        \"username\": \"String\",\n        \"first_name\": \"String\",\n        \"last_name\": \"String\"\n    }\n}\n</code></pre>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#401-unauthorized_2","title":"401 - Unauthorized","text":"<ul> <li>No authentication token or an invalid one was provided</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#403-forbidden_2","title":"403 - Forbidden","text":"<ul> <li>User doesn't have the proper permission to access this resource.</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#404-not-found","title":"404 - Not found","text":"<ul> <li>The given ID was not found</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#4-get-apimobileorgunitschangesconfigs","title":"4 - GET /api/mobile/orgunits/changes/configs/","text":"<p>API used to list all Change Request configurations for the mobile app.</p>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#permissions_3","title":"Permissions","text":"<ul> <li>User must be authenticated</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#query-parameters_1","title":"Query parameters","text":"<ul> <li>app_id: String - Application ID for which to retrieve the configuration</li> <li>page: Int (optional) - Current page (default: 1)</li> <li>limit: Int (optional) - Number of entities returned by page (default: 20)</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#possible-responses_3","title":"Possible responses","text":""},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#200-ok_2","title":"200 - OK","text":"<pre><code>{\n  \"count\": \"Long\",\n  \"has_next\": \"Boolean\",\n  \"has_previous\": \"Boolean\",\n  \"page\": \"Long\",\n  \"pages\": \"Long\",\n  \"limit\": \"Long\",\n  \"results\": [\n    {\n      \"org_unit_type_id\": \"Int - OrgUnit Type ID\",\n      \"org_units_editable\": \"Boolean - Whether or not OrgUnits of this OrgUnit Type are editable\",\n      \"editable_fields\": [\"Array&lt;String&gt; - List of possible fields\"],\n      \"possible_type_ids\": [\"Array&lt;Int&gt; - List of possible OrgUnit Type IDs that are allowed as new type for this OrgUnit Type\"],\n      \"possible_parent_types\": [\"Array&lt;Int&gt; - List of possible OrgUnit Type IDs that are allowed as new parent for this OrgUnit Type\"],\n      \"group_sets\": [\"Array&lt;Int&gt; - List of GroupSet IDs for this OrgUnit Type\"],\n      \"editable_reference_forms\": [\"Array&lt;Int&gt; - List of reference Form ID that can be modified\"],\n      \"other_groups\": [\"Array&lt;Int&gt; - List of other Group IDs for this OrgUnit Type\"],\n      \"created_at\": \"Timestamp\",\n      \"updated_at\": \"Timestamp\"\n    }\n  ]\n}\n</code></pre>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#400-bad-request_2","title":"400 - Bad request","text":"<ul> <li>One or more of the parameters provided couldn't be parsed</li> <li>One or more of the parameters provided couldn't be matched with the related resource (e.g.: unknown <code>project_id</code>)</li> <li>A given parameter was not recognized</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#401-unauthorized_3","title":"401 - Unauthorized","text":"<ul> <li>No authentication token or an invalid one was provided</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_change_request_configuration.html#403-forbidden_3","title":"403 - Forbidden","text":"<ul> <li>User doesn't have the proper permission to access this resource.</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html","title":"<code>OrgUnitChangeRequest</code> API","text":"<p>\"Change Requests\" can be submitted for an <code>OrgUnit</code> and then reviewed (approved or rejected).</p> <p>This API allows the DHIS2 Health pyramid to be updated using Iaso.</p> <p>The Django model that stores \"Change Requests\" is <code>OrgUnitChangeRequest</code>.</p>"},{"location":"pages/dev/reference/API/org_unit_registry.html#create-an-orgunitchangerequest-object-web-mobile-ia-2421","title":"Create an <code>OrgUnitChangeRequest</code> object - Web + Mobile (IA-2421)","text":"<ul> <li><code>POST /api/orgunits/changes/?app_id=\u2026</code></li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#permissions","title":"Permissions","text":"<ul> <li>User must be authenticated</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#query-parameters","title":"Query parameters","text":"<ul> <li><code>app_id</code>: String - Optional, project for which this is created.</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#body","title":"Body","text":"<pre><code>{\n  \"uuid\": \"UUID - Client generated UUID\",\n  \"org_unit_id\": \"String - id or UUID of the OrgUnit to change\",\n  \"new_parent_id\": \"String? - id or UUID of the parent OrgUnit, null to erase, omitted to ignore.\",\n  \"new_name\": \"String? - Name of the OrgUnit, \\\"\\\" (empty string) to erase, omitted to ignore.\",\n  \"new_org_unit_type_id\": \"Int? - id of the OrgUnitType, null to erase, omitted to ignore.\",\n  \"new_groups\": \"Array of Group ids? - empty array to erase, omitted to ignore.\",\n  \"new_location\": {\n    \"\": \"New geopoint for the OrgUnit, null to erase, omitted to ignore.\",\n    \"latitude\": \"Double - New latitude of the OrgUnit\",\n    \"longitude\": \"Double - New longitude of the OrgUnit\",\n    \"altitude\": \"Double - New altitude of the OrgUnit\"\n  },\n  \"new_location_accuracy\": \"Double - New accuracy of the OrgUnit, null to erase, omitted to ignore.\",\n  \"new_opening_date\": \"Timestamp, null to erase, omitted to ignore.\",\n  \"new_closed_date\": \"Timestamp, null to erase, omitted to ignore.\",\n  \"new_reference_instances\": \"Array of instance ids or UUIDs? - empty array to erase, omitted to ignore.\"\n}\n</code></pre>"},{"location":"pages/dev/reference/API/org_unit_registry.html#possible-responses","title":"Possible responses","text":""},{"location":"pages/dev/reference/API/org_unit_registry.html#201-created","title":"201 - Created","text":""},{"location":"pages/dev/reference/API/org_unit_registry.html#400-bad-request","title":"400 - Bad request","text":"<ul> <li>A not nullable field was null or omitted</li> <li>A <code>String</code> field has an empty value</li> <li><code>new_parent_id</code> is not a valid OrgUnit</li> <li><code>new_org_unit_type_id</code> is not a valid OrgUnitType</li> <li>One of the <code>new_groups</code> id is not a valid Group</li> <li><code>new_reference_instances</code> only one reference instance can exist by org_unit/form pair</li> <li><code>new_org_unit_type_id</code> is not part of the user account</li> <li><code>new_closed_date</code> must be later than <code>new_opening_date</code></li> <li><code>new_parent_id</code> and <code>org_unit_id</code> must have the same version</li> <li><code>new_parent_id</code> is already a child of <code>org_unit_id</code></li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#401-unauthorized","title":"401 - Unauthorized","text":"<ul> <li>No authentication token or an invalid one was provided</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#404-not-found","title":"404 - Not found","text":"<ul> <li>one or more of <code>new_reference_instances</code> ids is not found</li> <li><code>new_parent_id</code> is not found</li> <li><code>new_org_unit_type_id</code> is not found</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#list-orgunitchangerequest-objects-web-only-ia-2422","title":"List <code>OrgUnitChangeRequest</code> objects - Web only (IA-2422)","text":"<ul> <li><code>GET /api/orgunits/changes/</code></li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#permissions_1","title":"Permissions","text":"<ul> <li>User must be authenticated</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#query-parameters_1","title":"Query parameters","text":"<ul> <li><code>page</code>: Int (optional) - Current page (default: 1)</li> <li><code>limit</code>: Int (optional) - Number of entities returned by page (default: 20)</li> <li><code>org_unit_id</code>: Int (optional) - Id of the OrgUnit to which the changes apply (default: null)</li> <li><code>org_unit_type_id</code>: Int (optional) - Id of the OrgUnitType to filter on, either the old OrgUnitType before the change or the new one after the change (default: null)</li> <li><code>status</code>: Array&gt; (optional) - One of <code>new</code>, <code>validated</code>, <code>rejected</code> to filter the requests (default: null)<ul> <li>can be combined, e.g. <code>&amp;status=rejected&amp;status=new</code></li> </ul> <li><code>parent_id</code>: Int (optional) - Id of the old parent OrgUnit to filter on, before the change (default: null)</li> <li><code>project</code>: Int (optional) - Id of the project to filter on.</li> <li><code>groups</code>: List of int, comma separated (optional) - Ids of the old groups to filter on, before the change (default: null)<ul> <li>e.g. <code>&amp;groups=1847,1846</code></li> </ul> </li> <li><code>forms</code>: List of int, comma separated (optional) - Ids of the old forms to filter on, before the change (default: null)<ul> <li>e.g. <code>&amp;forms=12,34</code></li> </ul> </li> <li><code>users</code>: List of int, comma separated (optional) - Ids of the users who either created or last updated the change request (default: null)<ul> <li>e.g. <code>&amp;users=56,78</code></li> </ul> </li> <li><code>user_roles</code>: List of int, comma separated (optional) - Ids of the old user roles to filter on, specifically the roles associated with the user who created the change request (default: null)<ul> <li>e.g. <code>&amp;user_roles=90,123</code></li> </ul> </li> <li><code>with_location</code>: String (optional) - Filters the change requests based on the presence (<code>\"true\"</code>) or absence (<code>\"false\"</code>) of an old location, before the change (default: null)<ul> <li>e.g. <code>&amp;with_location=true</code></li> </ul> </li>"},{"location":"pages/dev/reference/API/org_unit_registry.html#possible-responses_1","title":"Possible responses","text":""},{"location":"pages/dev/reference/API/org_unit_registry.html#200-ok","title":"200 - OK","text":"<pre><code>{\n  \"count\": \"Long\",\n  \"has_next\": \"Boolean\",\n  \"has_previous\": \"Boolean\",\n  \"page\": \"Long\",\n  \"pages\": \"Long\",\n  \"limit\": \"Long\",\n  \"results\": [\n    {\n      \"id\": \"Int - id in the database\",\n      \"uuid\": \"UUID - uuid in the database\",\n      \"org_unit_id\": \"Int - id of the OrgUnit\",\n      \"org_unit_uuid\": \"UUID - uuid of the OrgUnit\",\n      \"org_unit_name\": \"String - name of the OrgUnit\",\n      \"org_unit_type_id\": \"Int - id of the current OrgUnitType\",\n      \"org_unit_type_name\": \"String - name of the current OrgUnitType\",\n      \"status\": \"Enum&lt;Status&gt; - one of `new`, `validated`, `rejected`\",\n      \"groups\": [\n        {\n          \"id\": \"Int - id of the Group\",\n          \"name\": \"String - name of the Group\"\n        }\n      ],\n      \"requested_fields\": \"Array&lt;String&gt; - name of the properties that were requested to change\",\n      \"approved_fields\": \"Array&lt;String&gt;? - name of the properties that were approved to change\",\n      \"rejection_comment\": \"String? - Comment about why the changes were rejected\",\n      \"created_by\": {\n        \"id\": \"Int - id of the User who created that request\",\n        \"username\": \"String?\",\n        \"first_name\": \"String?\",\n        \"last_name\": \"String?\"\n      },\n      \"created_at\": \"Timestamp\",\n      \"updated_by\": {\n        \"\": \"May be null\",\n        \"id\": \"Int - id of the User\",\n        \"username\": \"String?\",\n        \"first_name\": \"String?\",\n        \"last_name\": \"String?\"\n      },\n      \"updated_at\": \"Timestamp?\"\n    }\n  ]\n}\n</code></pre>"},{"location":"pages/dev/reference/API/org_unit_registry.html#400-bad-request_1","title":"400 - Bad request","text":"<ul> <li><code>page</code> or <code>limit</code> cannot be parsed to a correct integer value</li> <li>One or more of the parameters provided couldn't be parsed</li> <li>One or more of the parameters provided couldn't matched to the related resource (E.g.: unknown parent_id)</li> <li>A parameter was given that is not recognized</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#401-unauthorized_1","title":"401 - Unauthorized","text":"<ul> <li>No authentication token or an invalid one was provided</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#403-forbidden","title":"403 - Forbidden","text":"<ul> <li>User doesn't have the proper permission to access this resource.</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#list-orgunitchangerequest-objects-mobile-only-ia-2425","title":"List <code>OrgUnitChangeRequest</code> objects - Mobile only (IA-2425)","text":"<ul> <li><code>GET /api/mobile/orgunits/changes/?app_id=\u2026</code></li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#permissions_2","title":"Permissions","text":"<ul> <li>User must be authenticated</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#query-parameter","title":"Query parameter","text":"<ul> <li><code>app_id</code>: String - Must be provided, project for which this is queried.</li> <li><code>last_sync</code>: DateString - May be null or omitted. Limits the results to everything that was modified after this DateString<ul> <li><code>last_sync</code> filter is built with <code>django.utils.dateparse.parse_datetime</code> and allows:<ul> <li><code>&amp;last_sync=2023-09-26T17:21:22.921692Z</code></li> <li><code>&amp;last_sync=2021-09-26T17:21:22Z</code></li> <li><code>&amp;last_sync=2021-09-26T17:21:22</code></li> <li><code>&amp;last_sync=2021-09-26T17:21</code></li> </ul> </li> </ul> </li> <li><code>page</code>: Int (optional) - Current page (default: 1)</li> <li><code>limit</code>: Int (optional) - Number of entities returned by page (default: 20)</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#possible-responses_2","title":"Possible responses","text":""},{"location":"pages/dev/reference/API/org_unit_registry.html#200-ok_1","title":"200 - OK","text":"<pre><code>{\n  \"count\": \"Long\",\n  \"has_next\": \"Boolean\",\n  \"has_previous\": \"Boolean\",\n  \"page\": \"Long\",\n  \"pages\": \"Long\",\n  \"limit\": \"Long\",\n  \"results\": [\n    {\n      \"id\": \"Int - id in the database\",\n      \"uuid\": \"UUID - uuid in the database\",\n      \"org_unit_id\": \"Int - id of the OrgUnit\",\n      \"org_unit_uuid\": \"UUID - uuid of the OrgUnit\",\n      \"status\": \"Enum&lt;Status&gt; - one of `new`, `validated`, `rejected`\",\n      \"approved_fields\": \"Array&lt;String&gt;? - name of the properties that were approved to change\",\n      \"rejection_comment\": \"String? - Comment about why the changes were rejected\",\n      \"created_at\": \"Timestamp in double\",\n      \"updated_at\": \"Timestamp in double\",\n      \"new_parent_id\": \"String? - id or UUID of the parent OrgUnit, may be null or omitted.\",\n      \"new_name\": \"String? - Name of the OrgUnit, may be null or omitted.\",\n      \"new_org_unit_type_id\": \"Int? - id of the OrgUnitType, may be null or omitted\",\n      \"new_groups\": \"Array of Group ids? - can be empty, null or omitted. Empty means we want to remove all values\",\n      \"new_location\": {\n        \"\": \"New geopoint for the OrgUnit, may be null or omitted\",\n        \"latitude\": \"Double - New latitude of the OrgUnit\",\n        \"longitude\": \"Double - New longitude of the OrgUnit\",\n        \"altitude\": \"Double - New altitude of the OrgUnit\"\n      },\n      \"new_location_accuracy\": \"Double - New accuracy of the OrgUnit\",\n      \"new_opening_date\": \"Timestamp in double\",\n      \"new_closed_date\": \"Timestamp in double\",\n      \"new_reference_instances\": [\n        {\n          \"id\": \"Int\",\n          \"uuid\": \"UUID - provided by the client\",\n          \"form_id\": \"Int\",\n          \"form_version_id\": \"Int\",\n          \"created_at\": \"Timestamp in double\",\n          \"updated_at\": \"Timestamp in double\",\n          \"json\": \"JSONObject - contains the key/value of the instance\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"pages/dev/reference/API/org_unit_registry.html#400-bad-request_2","title":"400 - Bad request","text":"<ul> <li><code>app_id</code> was not provided</li> <li><code>page</code> or <code>limit</code> cannot be parsed to a correct integer value</li> <li><code>last_sync</code> cannot be parsed to a correct date time.</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#401-unauthorized_2","title":"401 - Unauthorized","text":"<ul> <li>No authentication token or an invalid one was provided</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#get-an-orgunitchangerequest-object-web-only-ia-2423","title":"Get an <code>OrgUnitChangeRequest</code> object - Web only (IA-2423)","text":"<p><code>GET /api/orgunits/changes/{id}/</code></p>"},{"location":"pages/dev/reference/API/org_unit_registry.html#permissions_3","title":"Permissions","text":"<ul> <li>User must be authenticated</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#possible-responses_3","title":"Possible responses","text":""},{"location":"pages/dev/reference/API/org_unit_registry.html#200-ok_2","title":"200 - OK","text":"<pre><code>{\n  \"id\": \"Int - id in the database\",\n  \"uuid\": \"UUID - uuid in the database\",\n  \"status\": \"Enum&lt;Status&gt; - one of `new`, `validated`, `rejected`\",\n  \"created_by\": {\n    \"id\": \"Int - id of the User who created that request\",\n    \"username\": \"String?\",\n    \"first_name\": \"String?\",\n    \"last_name\": \"String?\"\n  },\n  \"created_at\": \"Timestamp\",\n  \"updated_by\": {\n    \"\": \"May be null\",\n    \"id\": \"Int - id of the User who updated that request\",\n    \"username\": \"String?\",\n    \"first_name\": \"String?\",\n    \"last_name\": \"String?\"\n  },\n  \"updated_at\": \"Timestamp?\",\n  \"requested_fields\": \"Array&lt;String&gt; - name of the properties that were requested to change\",\n  \"approved_fields\": \"Array&lt;String&gt;? - name of the properties that were approved to change\",\n  \"rejection_comment\": \"String? - Comment about why the changes were rejected\",\n  \"org_unit\": {\n    \"id\": \"Int - id in the database\",\n    \"parent\": {\n      \"id\": \"Int - id of the parent OrgUnit\",\n      \"name\": \"String - name of the parent OrgUnit\"\n    },\n    \"name\": \"String - Name of the OrgUnit.\",\n    \"org_unit_type\": {\n      \"id\": \"Int - id of the OrgUnitType\",\n      \"name\": \"String - name of the OrgUnitType\",\n      \"short_name\": \"String - short name of the OrgUnitType\"\n    },\n    \"groups\": [\n      {\n        \"id\": \"Int - id of the Group\",\n        \"name\": \"String - name of the Group\"\n      }\n    ],\n    \"location\": {\n      \"\": \"Geopoint for the OrgUnit\",\n      \"latitude\": \"Double - New latitude of the OrgUnit\",\n      \"longitude\": \"Double - New longitude of the OrgUnit\",\n      \"altitude\": \"Double - New altitude of the OrgUnit\"\n    },\n    \"opening_date\": \"Timestamp?\",\n    \"closed_date\": \"Timestamp?\",\n    \"reference_instances\": [\n      \"Array of form objects - can be empty\",\n      {\n        \"id\": \"Int - id in the database\",\n        \"form_id\": \"id of the form\",\n        \"form_name\": \"Name of the form\",\n        \"values\": [\n          {\n            \"key\": \"String\",\n            \"label\": \"String or translated object\",\n            \"value\": \"String\"\n          }\n        ]\n      }\n    ]\n  },\n  \"new_parent\": {\n    \"\": \"May be null\",\n    \"id\": \"Int - id of the new parent OrgUnit in the database\",\n    \"name\": \"String? - name of the new parent OrgUnit\"\n  },\n  \"new_name\": \"String? - New name of the OrgUnit, may be null or omitted\",\n  \"new_org_unit_type\": {\n    \"\": \"May be null\",\n    \"id\": \"Int? - id of the new OrgUnitType\",\n    \"name\": \"String? - name of the new OrgUnitType\",\n    \"short_name\": \"String? - short name of the new OrgUnitType\"\n  },\n  \"new_groups\": [\n    {\n      \"id\": \"Int - id of the Group\",\n      \"name\": \"String - name of the Group\"\n    }\n  ],\n  \"new_location\": {\n    \"\": \"New GeoPoint? for the OrgUnit, may be null or omitted\",\n    \"latitude\": \"Double - New latitude of the OrgUnit\",\n    \"longitude\": \"Double - New longitude of the OrgUnit\",\n    \"altitude\": \"Double - New altitude of the OrgUnit\"\n  },\n  \"new_location_accuracy\": \"Double? - New accuracy of the OrgUnit\",\n  \"new_opening_date\": \"Timestamp?\",\n  \"new_closed_date\": \"Timestamp?\",\n  \"new_reference_instances\": [\n    \"Array of form objects? - may be null or omitted, cannot be empty\",\n    {\n      \"id\": \"Int - id in the database\",\n      \"form_id\": \"id of the form\",\n      \"form_name\": \"Name of the form\",\n      \"values\": [\n        {\n          \"key\": \"String\",\n          \"label\": \"String or translated object\",\n          \"value\": \"String\"\n        }\n      ]\n    }\n  ],\n  \"old_name\": \"String? - Old name of the OrgUnit, may be an empty\",\n  \"old_org_unit_type\": {\n    \"\": \"May be null\",\n    \"id\": \"Int? - id of the old OrgUnitType\",\n    \"name\": \"String? - name of the old OrgUnitType\",\n    \"short_name\": \"String? - short name of the old OrgUnitType\"\n  },\n  \"old_groups\": [\n    \"Array of old groups objects? - may be empty\",\n    {\n      \"id\": \"Int - id of the Group\",\n      \"name\": \"String - name of the Group\"\n    }\n  ],\n  \"old_location\": {\n    \"\": \"Old GeoPoint? for the OrgUnit, may be null\",\n    \"latitude\": \"Double - New latitude of the OrgUnit\",\n    \"longitude\": \"Double - New longitude of the OrgUnit\",\n    \"altitude\": \"Double - New altitude of the OrgUnit\"\n  },\n  \"old_opening_date\": \"Timestamp? - may be null\",\n  \"old_closed_date\": \"Timestamp? - may be null\",\n  \"old_reference_instances\": [\n    \"Array of old form instance objects? - may be empty\",\n    {\n      \"id\": \"Int - id in the database\",\n      \"form_id\": \"id of the form\",\n      \"form_name\": \"Name of the form\",\n      \"values\": [\n        {\n          \"key\": \"String\",\n          \"label\": \"String or translated object\",\n          \"value\": \"String\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"pages/dev/reference/API/org_unit_registry.html#400-bad-request_3","title":"400 - Bad request","text":"<ul> <li>One or more of the parameters provided couldn't be parsed</li> <li>One or more of the parameters provided couldn't matched to the related resource (E.g.: unknown parent_id)</li> <li>A parameter was given that is not recognized</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#401-unauthorized_3","title":"401 - Unauthorized","text":"<ul> <li>No authentication token or an invalid one was provided</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#403-forbidden_1","title":"403 - Forbidden","text":"<ul> <li>User doesn't have the proper permission to access this resource.</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#approve-or-reject-an-orgunitchangerequest-web-only-ia-2424","title":"Approve or reject an <code>OrgUnitChangeRequest</code> - Web only (IA-2424)","text":"<p><code>PATCH /api/orgunits/changes/{id}/</code></p> <p>API to change the status of on change request.</p>"},{"location":"pages/dev/reference/API/org_unit_registry.html#permissions_4","title":"Permissions","text":"<ul> <li>User must be authenticated</li> <li>User must have the <code>ORG_UNITS_CHANGE_REQUEST_REVIEW</code> permission</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#body_1","title":"Body","text":"<pre><code>{\n  \"status\": \"Enum&lt;Status&gt; - One of `validated` or `rejected`\",\n  \"approved_fields\": \"Array&lt;Enum&lt;Field&gt;&gt;? - name of the properties that were approved to change\",\n  \"rejection_comment\": \"String? - Comment about why the changes were rejected\"\n}\n</code></pre>"},{"location":"pages/dev/reference/API/org_unit_registry.html#possible-responses_4","title":"Possible responses","text":""},{"location":"pages/dev/reference/API/org_unit_registry.html#204-no-content","title":"204 - No content","text":"<p>Change were applied successfully</p>"},{"location":"pages/dev/reference/API/org_unit_registry.html#400-bad-request_4","title":"400 - Bad request","text":"<ul> <li><code>status</code> of the change to be patched is not <code>new</code></li> <li><code>status</code> must be <code>approved</code> or <code>rejected</code></li> <li><code>status</code> was <code>validated</code> but <code>approved_fields</code> was null, omitted or empty: at least one <code>approved_fields</code> must be provided</li> <li><code>approved_fields</code> contains one or more unknown fields</li> <li><code>status</code> was <code>rejected</code> but <code>rejection_comment</code> was null, omitted or empty: a <code>rejection_comment</code> must be provided</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#list-reference_instances-objects-for-a-given-orgunit-mobile-only-ia-2420","title":"List <code>reference_instances</code> objects for a given <code>OrgUnit</code> - Mobile only (IA-2420)","text":"<p><code>GET /api/mobile/orgunits/{id or UUID}/reference_instances?app_id=\u2026</code></p> <p>Returns <code>Instance</code> objects marked as <code>reference_instances</code> for an <code>OrgUnit</code> from newest to oldest.</p>"},{"location":"pages/dev/reference/API/org_unit_registry.html#permission","title":"Permission","text":"<ul> <li>Same as downloading instances</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#query-parameters_2","title":"Query parameters","text":"<ul> <li><code>page</code>: Int (optional) - Current page (default: 1)</li> <li><code>limit</code>: Int (optional) - Number of entities returned by page (default: 20)</li> <li><code>app_id</code>: String - project for which this is queried.</li> <li><code>last_sync</code>: DateString - May be null or omitted. Limits the results to everything that was modified after this DateString<ul> <li><code>last_sync</code> filter is built with <code>django.utils.dateparse.parse_datetime</code> and allows:<ul> <li><code>&amp;last_sync=2023-09-26T17:21:22.921692Z</code></li> <li><code>&amp;last_sync=2021-09-26T17:21:22Z</code></li> <li><code>&amp;last_sync=2021-09-26T17:21:22</code></li> <li><code>&amp;last_sync=2021-09-26T17:21</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#possible-response","title":"Possible response","text":""},{"location":"pages/dev/reference/API/org_unit_registry.html#200-ok_3","title":"200 - OK","text":"<pre><code>{\n  \"count\": \"Long\",\n  \"instances\": [\n    {\n      \"id\": \"Int\",\n      \"uuid\": \"UUID - provided by the client\",\n      \"form_id\": \"Int\",\n      \"form_version_id\": \"Int\",\n      \"created_at\": \"Timestamp in double\",\n      \"updated_at\": \"Timestamp in double\",\n      \"json\": \"JSONObject - contains the key/value of the instance\"\n    }\n  ],\n  \"has_next\": \"Boolean\",\n  \"has_previous\": \"Boolean\",\n  \"page\": \"Long\",\n  \"pages\": \"Long\",\n  \"limit\": \"Long\"\n}\n</code></pre>"},{"location":"pages/dev/reference/API/org_unit_registry.html#400-bad-request_5","title":"400 - Bad request","text":"<ul> <li><code>app_id</code> was not provided</li> <li><code>page</code>, <code>limit</code> or <code>version_count</code> cannot be parsed to a correct integer value</li> <li><code>last_sync</code> cannot be parsed to a correct date time.</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#401-unauthorized_4","title":"401 - Unauthorized","text":"<ul> <li>No authentication token or an invalid one was provided (if needed)</li> </ul>"},{"location":"pages/dev/reference/API/org_unit_registry.html#403-forbidden_2","title":"403 - Forbidden","text":"<ul> <li>User doesn't have the proper permission to access this resource (if needed)</li> </ul>"},{"location":"pages/dev/reference/API/payments/payments.html","title":"<code>PaymentStatus</code> API","text":"<p>Mock-ups</p> <p>This API allows the status of payments linked to multiple <code>OrgUnitChangeRequest</code> by the same user to be updated and queried.</p> <p>The Django model that stores \"Payment Status\" is <code>PaymentStatus</code>.</p> <p>The <code>PaymentStatus</code> model has a <code>status</code> field which can have one of the following values:</p> <ul> <li><code>PENDING</code>: This is the default status. It indicates that the payment is yet to be processed.</li> <li><code>SENT</code>: This status indicates that the payment has been processed and sent.</li> <li><code>REJECTED</code>: This status indicates that the payment was not successful and has been rejected.</li> </ul> <p>These statuses are stored as a list of tuples in the <code>STATUS_CHOICES</code> field.</p>"},{"location":"pages/dev/reference/API/payments/payments.html#get-a-paymentstatus-list","title":"Get a <code>PaymentStatus</code> list","text":""},{"location":"pages/dev/reference/API/payments/payments.html#permissions","title":"Permissions","text":"<ul> <li>User must be authenticated</li> <li>User needs <code>iaso_payments</code> permission</li> </ul>"},{"location":"pages/dev/reference/API/payments/payments.html#query-parameters-filters","title":"Query Parameters - Filters","text":"<ul> <li><code>page</code>: Int (optional) - Specifies the current page number. If not provided, the default value is 1.</li> <li><code>order</code>: String (optional) - Specifies the order in which the results should be returned. If not provided, the default ordering value is <code>id</code>.</li> <li><code>limit</code>: Int (optional) - Defines the number of entities to be returned per page. The default value is 20 if not specified.</li> <li><code>user_ids</code>: String (optional) - A comma-separated list of User IDs associated with the payments</li> <li>Example: <code>&amp;user_ids=10,9</code></li> <li><code>user_role_ids</code>: String (optional) - A comma-separated list of User Role IDs associated with the payments</li> <li>Example: <code>&amp;user_role_ids=10,9</code></li> <li><code>org_unit_id</code>: Int (optional) - The ID of the parent organization unit linked to the change requests. This should also include child units.</li> <li><code>from_date</code>: Date - 'YYYY-MM-DD' (optional) - The start date for when the change request has been validated. </li> <li><code>to_date</code>: Date - 'YYYY-MM-DD' (optional) - The end date for when the change request has been validated.</li> </ul>"},{"location":"pages/dev/reference/API/payments/payments.html#possible-responses","title":"Possible responses","text":""},{"location":"pages/dev/reference/API/payments/payments.html#200-ok","title":"200 - OK","text":"<pre><code>{\n  \"count\": \"Long\",\n  \"has_next\": \"Boolean\",\n  \"has_previous\": \"Boolean\",\n  \"page\": \"Long\",\n  \"pages\": \"Long\",\n  \"limit\": \"Long\",\n  \"results\": [\n    \"id\": \"Int - unique id\",\n    \"status\": \"String - PENDING or SENT or REJECTED\",\n    \"change_requests\": [\n      {\n        \"id\": \"Int - change request unique id\",\n        \"org_unit_id\": \"String - id or UUID of the OrgUnit to change\",\n      }\n    ],\n    \"created_by\": {\n      \"id\": \"Int - id of the User who created that payment\",\n      \"username\": \"String - username of user\",\n      \"first_name\": \"String - first name of user\",\n      \"last_name\": \"String - last name of user\",\n    },\n    \"created_at\": \"Timestamp\",\n    \"updated_by\": {\n      \"id\": \"Int - id of the User who updated that payment\",\n      \"username\": \"String - username of user\",\n      \"first_name\": \"String - first name of user\",\n      \"last_name\": \"String - last name of user\",\n    },\n    \"updated_at\": \"Timestamp\",\n    \"user\": {\n        \"id\": \"Int - user unique id\",\n        \"username\": \"String - username of user\",\n        \"first_name\": \"String - first name of user\",\n        \"last_name\": \"String - last name of user\",\n        \"user_role_id\": \"Int - user role id if one\",\n        \"user_role_name\": \"String - user role name if one\",\n        \"telephone\": \"String? - This type of field should be specified\",\n    },\n  ]\n}\n</code></pre>"},{"location":"pages/dev/reference/API/payments/payments.html#400-bad-request","title":"400 - Bad request","text":"<ul> <li><code>page</code> or <code>limit</code> cannot be parsed to a correct integer value</li> </ul>"},{"location":"pages/dev/reference/API/payments/payments.html#401-unauthorized","title":"401 - Unauthorized","text":"<ul> <li>No authentication token or an invalid one was provided</li> </ul>"},{"location":"pages/dev/reference/API/payments/payments.html#403-forbidden","title":"403 - Forbidden","text":"<ul> <li>User doesn't have the proper permission to access this resource.</li> </ul>"},{"location":"pages/dev/reference/API/payments/payments.html#404-not-found","title":"404 - Not found","text":"<ul> <li>payment not fount</li> <li><code>user_id</code>, <code>user_role_id</code>, <code>org_unit_id</code> not found</li> </ul>"},{"location":"pages/dev/reference/API/payments/payments.html#model","title":"Model","text":"<pre><code>class PaymentStatus(models.Model):\n    \"\"\"\n    Model to store the status of payments linked to multiple OrgUnitChangeRequest by the same user.\n    \"\"\"\n\n    class Statuses(models.TextChoices):\n        PENDING = \"pending\", _(\"Pending\")\n        SENT = \"sent\", _(\"Sent\")\n        REJECTED = \"rejected\", _(\"Rejected\")\n\n    status = models.CharField(choices=Statuses.choices, default=Statuses.PENDING, max_length=40)\n    change_requests = models.ManyToManyField(OrgUnitChangeRequest, related_name=\"payment_statuses\")\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"payment_statuses\")\n    created_by = models.ForeignKey(User, null=True, blank=True, on_delete=models.SET_NULL, related_name=\"payment_created_set\")\n    updated_by = models.ForeignKey(User, null=True, blank=True, on_delete=models.SET_NULL, related_name=\"payment_updated_set\")\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n</code></pre>"},{"location":"pages/dev/reference/API/payments/payments.html#remarks","title":"Remarks","text":"<ol> <li> <p>Who creates the payments? Typically, a payment is created when a user initiates a transaction. This could be done automatically when a change request is made or manually by an admin user. The creation of a payment could be triggered in the backend code where the change request is processed.</p> </li> <li> <p>Marking change requests as paid: We could add a payment_status field to the OrgUnitChangeRequest model. This field would reference the PaymentStatus of the associated payment. When a payment is processed, We can update this field accordingly.</p> </li> </ol>"},{"location":"pages/dev/reference/audit/audit.html","title":"Audit","text":"<p>Allow keeping a history of modification done on a Model instance.</p> <p>It is not automatic, model that wish to implement this have to call log_modification manually when changed. Diff are stored in audit.Modification model.</p>"},{"location":"pages/dev/reference/background_tasks/background_tasks.html","title":"Background tasks &amp; worker","text":"<p>Iaso queue certains functions (task) for later execution, so they can run outside an HTTP request. This is used for functions that take a long time to execute so they don't canceled in the middle by a timeout of a connection closed. e.g: bulk import, modifications or export of OrgUnits.  Theses are the functions marked by the decorator @task_decorator, when called they get added to a Queue and get executed by a worker.</p> <p>The logic is based on a fork of the library django-beanstalk-worker from tolomea, please consult it's doc for reference.</p> <p>If you want to develop a new background task, the endpoint <code>/api/copy_version/</code> is a good example of how to create a task and to plug it to the api.</p> <p>To call a  function with the @task decorator, you need to pass it a User objects, in addition to the other function's arguments, this arg represent which user is launching the task. At execution time the task will receive a iaso.models.Task instance in argument that should be used to report progress. It's mandatory for the function, at the end of a successful execution to call task.report_success() to mark its proper completion.</p>"},{"location":"pages/dev/reference/campaigns/subactivities.html","title":"SubActivity and SubActivityScope Models and APIs","text":""},{"location":"pages/dev/reference/campaigns/subactivities.html#models","title":"Models","text":""},{"location":"pages/dev/reference/campaigns/subactivities.html#subactivity","title":"SubActivity","text":"<p>The <code>SubActivity</code> model represents a sub-activity within a round of a campaign. It has the following fields:</p> <ul> <li><code>round</code>: A foreign key to the <code>Round</code> model, representing the round to which the sub-activity belongs.</li> <li><code>name</code>: A string field representing the name of the sub-activity.</li> <li><code>age_unit</code>: A choice field representing the unit of age targeted by the sub-activity. The choices are \"Months\" and \"Years\".</li> <li><code>age_min</code>: An integer field representing the minimum age targeted by the sub-activity.</li> <li><code>age_max</code>: An integer field representing the maximum age targeted by the sub-activity.</li> <li><code>start_date</code>: A date field representing the start date of the sub-activity.</li> <li><code>end_date</code>: A date field representing the end date of the sub-activity.</li> </ul>"},{"location":"pages/dev/reference/campaigns/subactivities.html#subactivityscope","title":"SubActivityScope","text":"<p>The <code>SubActivityScope</code> model represents the scope of a sub-activity, including the selection of an organizational unit and the vaccines used. It has the following fields:</p> <ul> <li><code>group</code>: A one-to-one field to the <code>Group</code> model, representing the group of organizational units for the sub-activity.</li> <li><code>subactivity</code>: A foreign key to the <code>SubActivity</code> model, representing the sub-activity to which the scope belongs.</li> <li><code>vaccine</code>: A choice field representing the vaccine used in the sub-activity. The choices are \"mOPV2\", \"nOPV2\", and \"bOPV\".</li> </ul>"},{"location":"pages/dev/reference/campaigns/subactivities.html#apis","title":"APIs","text":"<p>The <code>SubActivity</code> API allows for the creation, retrieval, update, and deletion of sub-activities. The API endpoint is <code>/api/polio/campaigns_subactivities/</code>.</p>"},{"location":"pages/dev/reference/campaigns/subactivities.html#create","title":"Create","text":"<p>To create a new sub-activity, send a POST request to the endpoint with the following data:</p> <pre><code>{\n    \"round_number\": &lt;round_number&gt;,\n    \"campaign\": &lt;campaign_obr_name&gt;,\n    \"name\": &lt;subactivity_name&gt;,\n    \"start_date\": &lt;start_date&gt;,\n    \"end_date\": &lt;end_date&gt;,\n    \"scopes\": [\n        {\n            \"group\": {\n                \"name\": &lt;group_name&gt;,\n                \"org_units\": [&lt;org_unit_id&gt;]\n            },\n            \"vaccine\": &lt;vaccine_choice&gt;\n        }\n    ]\n}\n</code></pre>"},{"location":"pages/dev/reference/campaigns/subactivities.html#retrieve","title":"Retrieve","text":"<p>To retrieve all sub-activities, send a GET request to the endpoint. To retrieve a specific sub-activity, send a GET request to <code>/api/polio/campaigns_subactivities/&lt;subactivity_id&gt;/</code>.</p>"},{"location":"pages/dev/reference/campaigns/subactivities.html#update","title":"Update","text":"<p>To update a sub-activity, send a PUT request to <code>/api/polio/campaigns_subactivities/&lt;subactivity_id&gt;/</code> with the new data.</p>"},{"location":"pages/dev/reference/campaigns/subactivities.html#delete","title":"Delete","text":"<p>To delete a sub-activity, send a DELETE request to <code>/api/polio/campaigns_subactivities/&lt;subactivity_id&gt;/</code>.</p>"},{"location":"pages/dev/reference/campaigns/subactivities.html#permissions","title":"Permissions","text":"<p>Only authenticated users can interact with the <code>SubActivity</code> API. The user must belong to the same account as the campaign associated with the round of the sub-activity.</p>"},{"location":"pages/dev/reference/data_model_glossary/data_model_glossary.html","title":"Data model glossary","text":"<p>Some terminology in Iaso come from DHIS2, some from ODK which mean that it can be a bit confusing. We will highlight some equivalences that might help you.</p> <p>This is not (yet) the complete Data Model, but here are the main concepts/model in Iaso:</p> <ul> <li>Iaso is multi tenant. Tenant are called and represented by the model <code>Account</code>. It represents roughly one client org or country. It also represents the natural limit of right for a user.</li> <li>Each Django's User has a linked Iaso <code>Profile</code> that link it to an <code>Account</code> and store extra parameters for the user.</li> <li>Each tenant can have multiple <code>Project</code>. Projects are linked to one android version App via the <code>app_id</code>. We use the link to control what a user can see from that app.</li> <li><code>DHIS2</code> is a standard server application and web UI in the industry to handle Health Data. Iaso can import and export data (forms and org unit) to it.</li> <li><code>OrgUnit</code> (Organizational Unit) is a Node of the GeoRegistry tree. e.g a particular Country, City or Hospital. each belonging to each other via a <code>parent</code> relationship.</li> <li>They can have a type <code>OrgUnitType</code> e.g. Country, City, Hospital</li> <li>they can belong to multiple <code>Group</code>, e.g. Urban Region or Campaign 2017</li> <li>DHIS2 has the concept of <code>Group</code> but not <code>Type</code> so when importing from a DHIS2 Instance all the type will be Unknown and OrgUnit will belong to group like <code>Clinic</code></li> <li><code>GroupSet</code> are Group of group. Used when we export Group to DHIS2</li> <li>OrgUnit may have a position in space, it can be an area, the  <code>geom</code> field is then used, or just a Point, the <code>location</code> field is then used.<ul> <li>It's technically possible to have both</li> <li>a OrgUnit may have no geographical info</li> <li>a OrgUnit may geographically be outside its parent.</li> </ul> </li> <li><code>DataSource</code> links OrgUnit and Group imported from the same source, e.g a DHIS2 instance, a CSV or a GeoPackage.</li> <li>A <code>source_ref</code> on the imported instance is used to keep the reference from the original source, so we can match it again in the future (when updating the import or exporting it back)</li> <li><code>SourceVersion</code> is used to keep each version separated. e.g each time we import from DHIS2 we create a new version.</li> <li>OrgUnit (for their parent) and Group should only reference other OrgUnit and Group in the same version. (This is not enforced everywhere yet)</li> <li><code>Task</code> are asynchronous function that will be run by a background worker in production. eg: Importing Data from DHIS2. see Worker section below for more info.</li> <li><code>Form</code> is the definition of a Form (list of question and their presentation).<ul> <li>The model contain the metadata, the actual definition is done in a <code>XSLForm</code> as an attached file.</li> <li>Form are linked to one or more Project. This is used to know which Form are presented in the Mobile App.</li> <li>Form can have multiple versions</li> </ul> </li> <li><code>Instance</code> or Form instance is the <code>Submission</code> of a form. A form that has actually been filed by a user.<ul> <li>Instance can be GeoTagged and/or linked to a OrgUnit</li> <li>Note: We are moving to use Submission everywhere in the UI, but it is still in progress. please submit PR.</li> <li>Submission cannot be done via the Iaso UI itself but through Enketo or the Mobile App.</li> </ul> </li> <li><code>APIImport</code> are used to log some request from the mobile app so we can replay them in case of error. See vector_control wiki</li> <li><code>audit.Modification</code> are used to keep a history of modification on some models (mainly orgunit). See audit wiki</li> <li><code>Link</code> are used to match two OrgUnit (in different sources or not) that should be the same in the real world. Links have a confidence score indicating how much we trust that the two OrgUnit are actually the same.</li> </ul> <p>They are usually generated via <code>AlgorithmRun</code>, or the matching is done in a Notebook and uploaded via the API.</p>"},{"location":"pages/dev/reference/doc_setup/doc_setup.html","title":"Doc setup","text":""},{"location":"pages/dev/reference/doc_setup/doc_setup.html#documentation-setup","title":"Documentation setup","text":"<p>Iaso's online documentation is built using mkDocs and deployed on Github pages. A CNAME record allows it to be available on docs.openiaso.com</p>"},{"location":"pages/dev/reference/doc_setup/doc_setup.html#mkdocs-setup","title":"mkDocs setup","text":"<p>The mkDocs build is configured in mkdocs.yml, at the root of the project The docs (markdown files) themselves as well as all other files related to mkdocs are located in the <code>/docs</code> folder</p> <p>The dependencies are in <code>/docs/requirements.txt</code>. The file has been generated using <code>pip-compile</code> and <code>/docs/requirements.in</code>, except for the plugin <code>mkdocs-static-i18n</code> which had its version upgarded manually.</p> <p>The markdown files follow the format <code>&lt;name&gt;.&lt;locale&gt;.md</code> to enable the localization plugin to display the right files</p> <p>The menu is defined in mkdocs.yml: - default menu is under <code>nav`` - french menu is under</code>plugins&gt;i18n&gt;languages&gt;fr&gt; nav`</p> <p>We had to duplicate the whole menu because we have a nested menu. On the flip side this can allow us to have an entirely different menu structure for each language if we wish to do so.</p>"},{"location":"pages/dev/reference/doc_setup/doc_setup.html#github-pages-setup","title":"Github pages setup","text":"<p>There is a <code>deploy_doc</code> Github action that will build and deploy the documentation when pushing on <code>main</code>.  The action itself will deploy the branch <code>gh-pages</code>. This in turn will trigger Github's own action to deploy the Github page.</p> <p>IMPORTANT: - There is a <code>CNAME</code> file in the <code>/docs</code> folder. Removing or altering it will break the redirection of <code>docs.openisao.com</code> to the Github page - The <code>gh-pages</code> branch should be left alone. It only contains the built documentation and none of the Iaso code</p>"},{"location":"pages/dev/reference/docker/docker.html","title":"Docker","text":""},{"location":"pages/dev/reference/docker/docker.html#run-commands-inside-the-docker-container","title":"Run commands inside the docker container","text":"<p>Each docker container uses the entrypoint.</p> <p>The <code>entrypoint.sh</code> script offers a range of commands to start services or run commands. The full list of commands can be seen in the script. The pattern to run a command is</p> <pre><code>docker compose run &lt;container-name&gt; &lt;entrypoint-command&gt; &lt;...args&gt;\n</code></pre> <p>The following are some examples:</p> <ul> <li>Run tests                    <code>docker compose exec iaso ./manage.py test</code></li> <li>Create a shell inside the container    <code>docker compose run iaso bash</code></li> <li>Run a shell command          <code>docker compose run iaso eval curl http://google.com</code></li> <li>Run Django manage.py         <code>docker compose exec iaso ./manage.py help</code></li> <li>Launch a python shell        <code>docker compose exec iaso ./manage.py shell</code></li> <li>Launch a postgresql shell    <code>docker compose exec iaso ./manage.py dbshell</code></li> <li>Create pending ORM migration files <code>docker compose exec iaso ./manage.py makemigrations</code></li> <li>Apply pending ORM migrations <code>docker compose exec iaso ./manage.py migrate</code></li> <li>Show ORM migrations          <code>docker compose exec iaso ./manage.py showmigrations</code></li> <li>To run a background worker   <code>docker compose run iaso manage tasks_worker</code></li> </ul>"},{"location":"pages/dev/reference/docker/docker.html#containers-and-services","title":"Containers and services","text":"<ul> <li>iaso       The python backend in Django</li> <li>webpack    The JS frontend in react</li> <li>db         PostgreSQL database</li> </ul> <p>All the container definitions for development can be found in <code>docker-compose.yml</code>.</p>"},{"location":"pages/dev/reference/docker/docker.html#docker-compose-run-vs-docker-compose-exec","title":"docker compose run vs. docker compose exec","text":"<p><code>docker compose run</code> launches a new docker container, <code>docker compose exec</code> launches a command in the existing container.</p> <p>So <code>run</code> will ensure the dependencies like the database are up before executing. <code>exec</code> main advantage is that it is faster but the containers must already be running (launched manually) </p> <p><code>run</code> will launch the entrypoint.sh script but exec will take a bash command to run which is why if you want to run the django manage.py you will need to use <code>run iaso manage</code> but <code>exec iaso ./manage.py</code></p> <p>Also take care that <code>run</code> unless evoked with the <code>--rm</code> will leave you with a lot of left over containers that take up disk space and need to be cleaned occasionally with <code>docker compose rm</code> to reclaim disk space.</p>"},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html","title":"Table of contents","text":"<p>Table of contents 2</p> <p>What are entities? 3</p> <p>How to create an entity? 3</p> <p>Enable the feature 3</p> <p>Create and upload the profile form 3</p> <p>Create the entity type 4</p> <p>Create an entity 4</p> <p>How to configure how we display an entity? 6</p> <p>In the web interface 6</p> <p>In the list 6</p> <p>In the details screen 7</p> <p>In the mobile application 7</p> <p>In the list 7</p> <p>In the details screen 8</p> <p>Searching for an entity 8</p> <p>On the web 8</p> <p>In the application 9</p> <p>What are workflows? 9</p> <p>Create a workflow 9</p> <p>Follow-ups and changes 10</p> <p>Follow-ups 10</p> <p>Changes 10</p> <p>Using values from the profile in subsequent forms 11</p> <p>Publishing workflows 11</p>"},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#what-are-entities","title":"What are entities?","text":"<p>We call an \u201cEntity\u201d anything that can move or be moved and that we want to track through time and Org Units. For example, a beneficiary, a car, a vaccination card, etc.</p> <p>To differentiate between different kinds of entities, Iaso has a concept of \u201cEntity Type\u201d.</p> <p>Iaso heavily relies on XLSForms, and entities are no exceptions. Therefore, an entity is represented by a submission to a form. This submission is referred to as the profile. The entity type defines which form has to be filled in.</p>"},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#how-to-create-an-entity","title":"How to create an entity?","text":""},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#enable-the-feature","title":"Enable the feature","text":"<p>In order to create an entity, your project must first enable the entity feature flag. You can set this flag either during its creation or by updating it later.</p> <p></p>"},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#create-and-upload-the-profile-form","title":"Create and upload the profile form","text":"<p>Using the sheet application of your choosing, create an XLSForm which will contain all the questions related to your entity that are either fixed (I.e., first name and last name) or can evolve through time (I.e., a program to which an entity can be affiliated to).</p> <p>Upload it on the server using the web application.</p> Note: The questions that can evolve through time should not be editable."},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#create-the-entity-type","title":"Create the entity type","text":"<p>In the entity types screen, click on the \u201cCREATE\u201d button. Give the entity type a name and select the newly uploaded form as a reference form:</p> <p></p> Note: We\u2019ll see later what \u201cList fields\u201d and \u201cDetail info fields\u201d are."},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#create-an-entity","title":"Create an entity","text":"<p>In the mobile application, make sure that the data has been refreshed and are up to date with the backend server. You will now be able to see the entity screen.</p> <p>At the moment, it is not possible to create an Entity from a web interface.</p> <p>Click the \u201cAdd\u201d button in the application.</p> <p></p> <p>Select the entity type you want to create.</p> <p></p> <p>You will be prompted to confirm your selection.</p> <p></p> <p>You can then fill out the form to finalize your first entity.</p>"},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#how-to-configure-how-we-display-an-entity","title":"How to configure how we display an entity?","text":"<p>Within the entity type\u2019s configuration, it is possible for administrators to define which questions are displayed within lists and within the details screen.</p> <p></p> <p>This impacts how the web and mobile applications display entities, as shown below.</p>"},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#in-the-web-interface","title":"In the web interface","text":""},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#in-the-list","title":"In the list","text":""},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#in-the-details-screen","title":"In the details screen","text":""},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#in-the-mobile-application","title":"In the mobile application","text":""},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#in-the-list_1","title":"In the list","text":""},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#in-the-details-screen_1","title":"In the details screen","text":""},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#searching-for-an-entity","title":"Searching for an entity","text":""},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#on-the-web","title":"On the web","text":"<p>In the beneficiary list, you can filter by type and/or enter a query to filter based on the identifier or any of the list fields values.</p> <p></p>"},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#in-the-application","title":"In the application","text":"<p>Clicking on the magnifying glass icon on the entity screen will lead you to the list of all entities and allow you to filter them quickly based on the identifier or any of the list fields values.</p> <p>If you need a more fine-grained selection, you can click on the funnel icon, select a type and fill out the search form (second picture)</p> <p></p>"},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#what-are-workflows","title":"What are workflows?","text":"<p>As stated before, an entity is tracked through time and Org Units. In order to achieve this, Iaso links the subsequent submissions for an entity together and allows subsequent submissions to change the profile. In order for you to choose which forms should be presented next and what values override the properties of the profile, you can define a workflow.</p>"},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#high-level-schema-of-the-workflows-models","title":"High Level Schema of the workflow's models","text":"<pre><code>classDiagram\nclass WorkflowVersion {\n  Workflow workflow\n  String name\n  Form reference_form\n  Enum status\n}\nclass Workflow {\n  EntityType entity_type\n}\nclass EntityType {\n  String name\n  Form reference_form\n  Account account\n  Bool is_active\n}\n\nclass Form {\n String form_id\n String namer\n String device_field\n String location_field\n String correlation_field\n Bool correlatable\n JSON possible_fields\n String period_ty pe\n Bool single_per_period\n Int periods_before_allowed\n Int periods_after_allowed\n Bool derived\n UUID uuid\n}\n\nclass FormVersion {\n  Form form\n  File file\n  File xls_file\n  JSON form_descriptor\n  String version_id\n}\n\nWorkflowVersion --&gt; Form : Foreign Key (reference_form)\nEntityType --&gt; Form : Foreign Key (reference_form)\nEntityType -- Workflow : One To One (entity_type)\nWorkflowVersion --&gt; Workflow : Foreign Key (form) \nFormVersion --&gt; Form : Foreign Key (form)\n</code></pre>"},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#create-a-workflow","title":"Create a workflow","text":"<p>In the entity types\u2019 list, click on the workflow icon </p> <p></p> <p>In the list of the workflow versions, create the \u201cCREATE\u201d button and give the version a name:</p> <p></p>"},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#follow-ups-and-changes","title":"Follow-ups and changes","text":""},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#follow-ups","title":"Follow-ups","text":"<p>They represent the next possible forms based on the state of the profile. They are based on a condition. In the following example, the mobile application will offer \u201cU5 Registration WFP\u201d as the next possible form if the first name is \u201cBill\u201d.</p> <p></p> Reminder: \u201cFirst Name\u201d is one of the questions in the Entity Type\u2019s form."},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#changes","title":"Changes","text":"<p>They represent the mapping of what value from a form will change the values in the profile.</p> <p>In the example below, the \u201cTarget form\u201d is the Entity Type\u2019s form, and the \u201cSource form\u201d is the subsequent submission.</p> <p>When a \u201cU5 Registration WFP\u201d form is filled out, the value entered in \u201cChild\u2019s Age in months\u201d will be copied into the profile\u2019s \u201cAge (Months)\u201d question. And the value entered in \u201cChild\u2019s Name\u201d will be copied into the profile\u2019s \u201cFirst Name\u201d question.</p> <p></p>"},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#using-values-from-the-profile-in-subsequent-forms","title":"Using values from the profile in subsequent forms","text":"<p>Sometimes, you want a subsequent form to use values from the profile. In order to do so, just add a question with the same identifier and type as the value from the profile.</p> <p>I.e., Let\u2019s assume the profile has 2 questions of type \u201ctext\u201d: first_name and last_name. By adding a read-only similar question in your subsequent forms, the value will be available to you.</p>"},{"location":"pages/dev/reference/entities_in_iaso/entities_in_iaso.html#publishing-workflows","title":"Publishing workflows","text":"<p>Once a workflow version has been published, it is marked as finalized, and it cannot be edited anymore. Only workflows in \u201cdraft\u201d can be edited.</p> <p>If you want to edit a finalized workflow, you first need to duplicate it using the \u201cCopy version\u201d button. A new draft version is then created with the same content.</p>"},{"location":"pages/dev/reference/env_variables/env_variables.html","title":"Environnement variables","text":""},{"location":"pages/dev/reference/env_variables/env_variables.html#db-connection-related","title":"DB connection related","text":"<p>the url is build based on the following env variables</p> <pre><code>RDS_USERNAME\nRDS_PASSWORD\nRDS_HOSTNAME\nRDS_DB_NAME\nRDS_PORT\n</code></pre> <p>the SQL dashboard use a dedicated user/password with readonly access to the data</p> <pre><code>DB_READONLY_USERNAME \nDB_READONLY_PASSWORD\n</code></pre>"},{"location":"pages/dev/reference/env_variables/env_variables.html#aws-related","title":"AWS related","text":"<p>Storing the various files like</p> <ul> <li>js/css/... static assets</li> <li>raw forms (xlsform), submissions (xml and media),... is done in s3 (or an s3 compatible api like minio)</li> </ul> <pre><code>AWS_ACCESS_KEY_ID:\nAWS_SECRET_ACCESS_KEY:\nAWS_S3_REGION_NAME\nAWS_STORAGE_BUCKET_NAME:\nAWS_S3_ENDPOINT_URL: (used to for ex to point to minio)\n</code></pre> <p>for async task</p> <pre><code>BACKGROUND_TASK_SERVICE    : default to SQS :  possible values are  SQS POSTGRES\nBEANSTALK_SQS_REGION\nBEANSTALK_SQS_URL\n\n</code></pre>"},{"location":"pages/dev/reference/env_variables/env_variables.html#security-settings","title":"Security Settings","text":""},{"location":"pages/dev/reference/env_variables/env_variables.html#django-settings","title":"Django settings","text":"<p>Iaso allows to set some of Django security settings as environment variable. To activate these features set the environment variable to <code>\"true\"</code>. Default is <code>\"false\"</code></p> <pre><code>CSRF_COOKIE_HTTPONLY \nCSRF_COOKIE_SECURE \nSESSION_COOKIE_SECURE\n</code></pre>"},{"location":"pages/dev/reference/env_variables/env_variables.html#cors","title":"CORS","text":"<p>It is possible to setup a IASO server with CORS authorizing access from any server with the following environment variable <code>\"ENABLE_CORS\"</code>. Default is <code>\"true\"</code></p>"},{"location":"pages/dev/reference/env_variables/env_variables.html#disabling-login-through-passwords","title":"Disabling login through passwords","text":"<p>Set the environment variable <code>DISABLE_PASSWORD_LOGINS</code>to the value<code>\"true\"</code> in case you wish to deactivate passwords using login:</p> <ul> <li>in the basic login page</li> <li>to connect to the admin</li> <li>through /api/token , which is used by default by the mobile application</li> </ul>"},{"location":"pages/dev/reference/env_variables/env_variables.html#sentry-related","title":"Sentry related","text":"<p>If you don't provide a SENTRY_URL, sentry won't be configured</p> name optional default value description --- SENTRY_URL true - url specific to your sentry account SENTRY_ENVIRONMENT true development environnement (dev, staging, prod,...) SENTRY_TRACES_SAMPLE_RATE true 0.1 float between 0 and 1 : send 10% SENTRY_ERRORS_SAMPLE_RATE true 1.0 float between 0 and 1 : send everything SENTRY_ERRORS_HTTPERROR_SAMPLE_RATE true 0.8 float between 0 and 1 : send 80% of the errors"},{"location":"pages/dev/reference/env_variables/env_variables.html#maintenance-mode","title":"Maintenance mode","text":"<p><code>MAINTENANCE_MODE</code> (default is <code>\"false\"</code>)</p> <p>If you need to set up IASO in maintenance mode, meaning that it will display at / a page indicating that the  server is under maintenance, and give a 404 answer to all requests except for /health or /_health (wich we encourage to use  for status monitoring), you can set the environment variable <code>MAINTENANCE_MODE</code> to the value <code>\"true\"</code></p>"},{"location":"pages/dev/reference/front-end_reference/front-end_reference.html","title":"Front-end reference","text":"<p>Frontend assets include JS, CSS, translations and images. They are all handled by webpack. Most of the structure is taken from this blog post: http://owaislone.org/blog/webpack-plus-reactjs-and-django/</p> <p>Frontend assets are mounted on the pages via the <code>django-webpack-loader &lt;https://github.com/owais/django-webpack-loader&gt;</code>__</p>"},{"location":"pages/dev/reference/front-end_reference/front-end_reference.html#build","title":"Build","text":""},{"location":"pages/dev/reference/front-end_reference/front-end_reference.html#the-2-builds-dev-and-prod","title":"The 2 builds, dev and prod","text":"<ul> <li> <p>There are two webpack configuration files: <code>webpack.dev.js</code> and <code>webpack.prod.js</code>.</p> </li> <li> <p>A JS production build is created inside the docker-file, via <code>npm run build</code></p> </li> <li> <p>the <code>start_dev</code> entry point starts a webpack development server, that watches   assets, rebuilds and does hot reloading of JS Components.</p> </li> </ul>"},{"location":"pages/dev/reference/front-end_reference/front-end_reference.html#css-build","title":"CSS Build","text":"<p>The CSS build is separate, and can contain both <code>.sass</code> and <code>.css</code> files. They spit out a webpack build called <code>styles.css</code>.</p>"},{"location":"pages/dev/reference/front-end_reference/front-end_reference.html#js-build","title":"JS Build","text":"<p>Each page has their own JS entry point (needs to be defined in both webpack files). On top of that, they load a common chunk, containing <code>react</code>, <code>react-intl</code> and other stuff that the <code>webpack common chunk</code> plugin finds is shared between the apps.</p> <p>Including a JS bundle via django-webpack-loader ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p> <p>If we have created a new JS app <code>MyCustomApp</code> in <code>hat/assets/js/apps/</code>.</p> <p>The entrypoint should be <code>/dashboard/my-custom-app</code></p> <p>Folders and files affected::</p> <pre><code>+ hat/\n  + assets/\n    + js/\n      + apps/\n        + MyCustomApp\n          . index.js\n          . MyCustomApp.js\n          . MyCustomAppContainer.js\n\n  + dashboard/\n    . urls.py\n    . views.py\n\n  + templates/\n    + dashboard/\n      . my_custom_app.html\n\n  . webpack.dev.js\n  . webpack.prod.js\n</code></pre> <p>These are the steps to visualize it within the dashboard:</p> <ul> <li>In <code>hat/webpack.dev.js</code> include a new <code>entry</code>.</li> </ul> <pre><code>    'my_custom_app': [\n    'webpack-dev-server/client?' + WEBPACK_URL,\n    'webpack/hot/only-dev-server',\n    './assets/js/apps/MyCustomApp/index'\n    ],\n</code></pre> <ul> <li>In <code>hat/webpack.prod.js</code> include a new <code>entry</code>.</li> </ul> <pre><code>    'my_custom_app': './assets/js/apps/MyCustomApp/index',\n</code></pre> <ul> <li>In <code>hat/dashboard/views.py</code> include a new view.</li> </ul> <pre><code>    @login_required()  # needs login?\n    @permission_required('cases.view')  # the needed permissions\n    @require_http_methods(['GET'])  # http methods allowed\n    def my_custom_app(request: HttpRequest) -&gt; HttpResponse:\n        return render(request, 'dashboard/my_custom_app.html')\n</code></pre> <ul> <li>In <code>hat/dashboard/urls.py</code> include a new url pattern.</li> </ul> <pre><code>    url(r'^my-custom-app/.*$', views.my_custom_app, name='my_custom_app'),\n</code></pre> <pre><code>  url(r'^my-custom-app/.*$', views.my_custom_app, name='my_custom_app'),\n</code></pre> <ul> <li>In <code>hat/templates/dashboard</code> create a new template file <code>my_custom_app.html</code>.</li> </ul> <pre><code>      {% extends 'app.html' %}\n      {% load i18n %}\n      {% load render_bundle from webpack_loader %}\n\n      {% block header %}\n        &lt;h1 class=\"header__title\"&gt;{% trans 'My Custom App' %}&lt;/h1&gt;\n      {% endblock %}\n\n      {% block content %}\n\n        &lt;div class=\"content\"&gt;\n          &lt;div id=\"app-container\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n\n        {% render_bundle 'common' %}\n        {% render_bundle 'my_custom_app' %}\n        &lt;script&gt;\n          HAT.MyCustomApp.default(\n            document.getElementById('app-container'),\n            '/dashboard/my-custom-app/'\n          )\n        &lt;/script&gt;\n      {% endblock %}\n</code></pre>"},{"location":"pages/dev/reference/front-end_reference/front-end_reference.html#testing-the-production-build","title":"Testing the production build","text":""},{"location":"pages/dev/reference/front-end_reference/front-end_reference.html#stop-any-containers-that-might-be-currently-running","title":". Stop any containers that might be currently running.","text":""},{"location":"pages/dev/reference/front-end_reference/front-end_reference.html#start-the-containers-with","title":". Start the containers with:","text":"<p>.. code:: shell</p> <pre><code>  TEST_PROD=true docker compose up\n</code></pre> <p>When the setup is run with <code>TEST_PROD=true</code>, it will exit the unneeded containers <code>webpack</code> and <code>jupyter</code>. It will also run the webpack build during startup, so that there is no need to rebuild the image for that.</p>"},{"location":"pages/dev/reference/front-end_reference/front-end_reference.html#js-unit-testing","title":"JS Unit Testing","text":"<pre><code>    docker compose run hat test_js\n</code></pre>"},{"location":"pages/dev/reference/front-end_reference/front-end_reference.html#adding-new-assets-in-packagejson","title":"Adding new assets in package.json","text":"<p>Unfortunately, for now you need to rebuild the container after adding or upgrading packages in <code>package.json</code>.</p> <p>.. code:: shell</p> <pre><code>docker compose build\n</code></pre> <p>or</p> <p>.. code:: shell</p> <pre><code>docker compose up --build\n</code></pre>"},{"location":"pages/dev/reference/front-end_reference/front-end_reference.html#translations","title":"Translations","text":"<p>Translations are extracted on the first webpack build. Just like the django translation strings; translations are downloaded for every <code>Travis CI &lt;https://travis-ci.com&gt;</code>__ build, and uploaded on the <code>development</code> branch.</p>"},{"location":"pages/dev/reference/front-end_reference/front-end_reference.html#set-up-vscode-for-front-end-development","title":"Set up VSCode for front-end development","text":"<p>See also: <code>this pull request &lt;https://github.com/BLSQ/iaso/pull/120&gt;</code>__</p> <p>The script <code>show-lint-problems</code> can be turned into a VSCode task that will show all linter errors in VSCode's PROBLEMS Tab.</p> <p>Steps to follow:</p> <ul> <li> <p>Go to Terminal&gt;Configure task</p> </li> <li> <p>Select npm: show-lint-problems</p> </li> <li> <p>Add <code>$eslint-stylish</code> to the <code>problemMatcher</code> array</p> </li> <li> <p>Run the task: Terminal&gt;Run Task...&gt; npm: show-lint-problems.    IMPORTANT: you need to run the task this way. Running the script directly from the terminal using npm will not enable VS Code to display the problems in the PROBLEMS tab</p> </li> <li> <p>You should be able to see and track the problems through the dedicated tab.    CAUTION: if you navigate to a file through the tab, then close the file, it will be removed from the problems list, even if it wasn't changed. This seems to be a problem with using npm through VSCode's tasks</p> </li> </ul>"},{"location":"pages/dev/reference/front-end_reference/front-end_reference.html#depend-on-bluesquare-components-library","title":"Depend on bluesquare-components library","text":"<p>See the <code>library's README &lt;https://github.com/BLSQ/bluesquare-components/blob/main/README.md&gt;</code>__ for the general setup.</p> <p>When depending on a local version of the library:</p> <ul> <li> <p>Your local folder should be on the same level as the iaso folder, so that the path to the tgz file in your package.json is : ../bluesquare-components/bluesquare-components-0.1.0.tgz</p> </li> <li> <p>Run <code>docker compose build --build-arg LIBRARY=&lt;name-of-the-library-image&gt;</code></p> </li> </ul>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html","title":"Backend and API Guidelines","text":""},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#important-considerations","title":"Important considerations","text":"<p>Please do a rough design before any implementation and discuss it with the rest of the team. It doesn't need to be too detailed but you should have at least a list of Model, the important fields on it, the security model and what endpoint you will add.</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#security","title":"Security","text":"<p>When Adding New feature that will add Model and API please think about the security model. You can start by asking yourself these questions:</p> <ol> <li>Which user should have access to this?</li> <li>How to implement the multi-tenant</li> <li>Are new permission needed?</li> <li>Is the item listable/readable by user without the permission to implement Filter dropdown. For example users without the Form permission but with the Submission permission can still list Form from the API to be able to filter Instance by Form</li> </ol>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#tenancy","title":"Tenancy","text":"<p>Iaso is multi tenant. Tenant are called and represented by the model <code>Account</code>. It represents roughly one client org or country. It also represents the natural limit of right for a user.</p> <p>So all new model and API per default should support tenancy. It's kind of annoying  to add it later.</p> <p>We have two kind of tenancy, one per Project, one per Account. A Project represent a mobile app, there might be several linked to an account. You will have to consider which want you one to use. In some case it might be both.</p> <p>In some case if your new model is linked to existing one it might derive the tenancy from there (for example FormVersion derive their tenancy from Form). </p> <p>In practice this will consist on: 1. adding a ForeignKey to Account or Project on your model. 2. At creation  2. in your ViewSet filtering on the Object in the account (see filtering for user)</p> <p>In most case if this an API for the Mobile the tenancy will be per project. But if that's not the case and  you are really not sure, there is nobody to ask and you need to advance, add it on the Account it will be simpler.</p> <p>Don't hesitate to ask if you don't understand what tenancy means or how it works.</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#in-the-broad-lines-adding-a-complete-new-feature-will-consist-of","title":"In the broad lines adding a complete new feature will consist of","text":"<ol> <li>The model(s): The modelisation in the Database</li> <li>The serializer(s): Which decide which field  are returned to the client. But also which field(s) are accepted for creating and modifying object</li> <li>The ViewSet(s) which represent the Endpoints (GET PATCH, POST DELETE etc...)</li> <li>The routing, tell which url we use. <code>/api/yourmodel</code></li> <li>The security model : Who can see and modify what and how.</li> </ol>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#new-model-implementation","title":"New Model implementation","text":"<p>Always add the field <code>created_at</code>, <code>updated_at</code>. This allow us the minimum of traceability and is useful in debug.</p> <pre><code>    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n</code></pre> <p>You might need Soft delete (see Soft Delete section)</p> <p>Don't forget the tenancy.</p> <p>Examples: There is a very simple Model/API example in the directory <code>plugins/tests</code> that you can use as a template.</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#api","title":"API","text":"<p>Please use serializers !</p> <p>This will allow the API to be autodocumented in the swagger and the browsable API interface. You can check the swagger at /swagger/</p> <p>For the ViewSet, always^ inherit  ModelViewSet from iaso.api.common, not the one from DRF ! This will handle the Pagination that is particular to Django correctly out of the box.</p> <p>^ Except in some case obviously but it should be the default</p> <p>For the default case you ModelViewSet should be very simple, and you should not have to reimplement <code>def list()</code> and <code>def create()</code> etc... if you properly did the Serializer and inherited from <code>iaso.api.common.ModelViewset</code></p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#filtering-for-user","title":"Filtering for user","text":"<p>Per default you will want to filter what is viewable by the correctly connected user (at minimum for the tenancy, see relevant section)</p> <p>To do so add a <code>get_queryset()</code> method on your ViewSet which will filter the queryset on the user. It's not a bad idea to move the logic of that code directly on your Model queryset by adding a <code>Queryset.for_user(user: User)</code> on your model so we can reuse it on other models. See for example TeamQuerySet.</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#permissions","title":"Permissions","text":"<p>We use the DRF system with <code>permission_class</code> see DRF Doc. See also <code>plugins/test/api.py</code> for an example.</p> <p>By default all the API require to be logged but any user can post GET / POST / PATCH / DELETE so beware of that.</p> <p>Further restriction can be added using <code>http_method_names = [\"put\"]</code> if you want to be extra sure, but that shouldn't be the only check method.</p> <p>Do not hesitate to put test to check that the method are effectively restricted to both authorized and unauthenticated user so they are not re-enabled by default.</p> <p>If you want to check if an user has a permission there is a HasPermission class in <code>iaso.api.common.py</code> TODO : expand section</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#filtering","title":"Filtering","text":"<p>Set the <code>filter_backends</code> config key in your ViewSet, with per default at least, the backends  <code>filters.OrderingFilter</code>  and <code>DjangoFilterBackend</code></p> <pre><code>    filter_backends = [\n        filters.OrderingFilter,\n        DjangoFilterBackend,\n\n    ]\n</code></pre> <p>This will allow ordering and filtering on the key present on the model automatically.</p> <p>The front dev will push you to include special filter with Javascript case name like <code>FormId</code> or stuff which will require special case in list() because that's what they are used to but in 99% of the case this is not needed and there is already a filter in python case <code>form_id</code>. The normal django operator can also be used <code>__in</code> for list, <code>__gte</code> for <code>&gt;=</code> , <code>iexact</code> to ignore case, etc..</p> <p>See the field lookup for the complete reference <code>https://docs.djangoproject.com/en/4.1/ref/models/querysets/#field-lookups</code></p> <p>All these filters are conveniently listed in the swagger for each endpoint and in the browsable API</p> <p>If your model use SoftDelete include the <code>DeletionFilterBackend</code> filter. See the SoftDelete section</p> <pre><code>        DeletionFilterBackend,\n</code></pre> <p>If you need more control on how fields can be used for ordering and filtering you can respectively use <code>ordering_fields</code> and <code>filterset_fields</code>. See the django-filter and drf doc.</p> <p>Frontend expect \"big\" api to accept a <code>search</code> filter which usually does a <code>icontains</code> on any of the model StringField (e.g. name or description) or related model (e.g the org unit name).</p> <p>The <code>filters.OrderingFilter</code> use the <code>?order_by</code> query parameters, multiple field can be specified, separated by <code>,</code>,  <code>-</code> in front of the field can be used to specify to reverse the order</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#annotation-for-ordering-and-filtering","title":"Annotation for ordering and filtering","text":"<p>In very special case if you need strange manipulation for ordering or filtering, adding an annotation on the queryset might help a lot. Since it does all the calculation on the database side, this allows use to add filter on fields that would otherwise not be possible without retrieving a lot of data on the backend. </p> <p>You might need to add them in  <code>ordering_fields</code> and <code>filterset_fields</code>. (TODO Olivier : check)</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#mobile","title":"Mobile","text":"<p>If this API is accessible via mobile, add a separate endpoint for the mobile to use, in <code>/api/mobile</code>, even if it is the same as the \"regular\" <code>web</code> endpoint and that you connect it to the same ViewSet. This allows us flexibility if we have to break compatibility in the future.</p> <p>For date in new API endpoint we use the RFC format (2022-03-02 23:34...) that is the default in DRF so there is nothing to be done. Old endpoint might still use the old format in Timestamp.</p> <p>In the endpoint for mobile we  always use Timestamp. You can use TimestampField and DateTimestampField in your Serializer for this.</p> <p>Take special care when modifying the API used by the mobile, we don't have a complete list, but we still have old version of the APP using very old endpoints that newer version don't use anymore.</p> <p>For API endpoint that the mobile APP will POST to, you should check with Martin if you may need the decorator <code>@safe_api_import</code> to ensure no data is lost. See <code>/iaso/hat/vector_control/README.md</code></p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#csv-and-xls-export","title":"CSV and XLS export","text":"<p>For data that will be presented as a table, we will want to provide CSV and XLS export to the user in nearly all cases. </p> <p>We don't use the CSV export provided by DRF for that and use a bit of code that we copy  past and should really be refactored.</p> <p>TODO: Expand section</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#softdelete","title":"SoftDelete","text":"<p>Soft Delete is a way to mark an Object as deleted without actually deleting it from the database. That way we can still show them to user in the interface it they choose to and the user can restore it easily.</p> <p>We have a standard way to implement it: - Have your model inherit from the SoftDelete. - This will add the deleted_at field. When the field is null it's not deleted  if it contains a data it is deleted.</p> <p>In the ViewSet add the filter DeletionFilterBackend.</p> <p>Test that you can restore by doing a patch on your row on the <code>deleted_at</code> fields</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#permissions_1","title":"Permissions","text":"<p>if you add a new permission, don't forget to add it in the Frontend, or it will not be displayed properly. See the instruction on the top of <code>menupermissions/models.py</code></p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#django-admin","title":"Django Admin","text":"<p>If you add New model, add them in the Admin if you don't know which fields or filter to add just add at least the minimum, we can expand it latter.</p> <p>Minimum Admin for a Model (BlogPost in this Example), in admin.py</p> <pre><code>class BlogPostAdmin(admin.ModelAdmin):\n    pass\n\nadmin.site.register(BlogPost, BlogPostAdmin)\n</code></pre> <p>If you want a base to be a mot more fancy:</p> <pre><code>    search_fields = (\"title\", \"content\")\n    list_display = (\"title\", \"author\", \"created_at\", \"updated_at\")\n    date_hierarchy = \"created_at\"\n    list_filter = (\"author\", \"updated_at\")\n    readonly_fields = (\"created_at\", \"updated_at\")\n\n</code></pre>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#configuration-settings","title":"Configuration settings","text":"<p>We configure the Iaso deployement (the server) via environment flags. So if you add something configurable on the whole server level do it that way. See https://12factor.net/config if your are not familiar with the philosophy. </p> <p>Note :There are of course some exceptions and thus some settings are configured in the Database. Notably for the Polio plugins. But please keep that exceptional.</p> <p>You can change your own local configuration in the file <code>.env</code>. Do note that if you make any modification in your <code>.env</code> or  in your <code>docker-compose.yml</code> file. You will need to restart the whole docker compose for it to take effect (Ctrl-c your current docker compose and bring it back up with <code>docker compose up</code></p> <p>If you add a new Environement variable to allow some configuration: 1. Do not access the Enviroement variable directly from your python code ! 1. Instead add it as a variable in the <code>settings.py</code>. 1. Add a comment explaing what this variable does. 1. Always provide a default value 1. To allow developer to change the variable locally add it in docker-compose.yml</p> <p>Also KISS, the less configuration the better !</p> <p>There is no comprehensive documentation of all the configuration settings except what is in settings.py so it's important that you comment it well !</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#example","title":"Example","text":"<ol> <li><code>settings.py</code></li> </ol> <pre><code># Application customizations\nAPP_TITLE = os.environ.get(\"APP_TITLE\", \"Iaso\")\n</code></pre> <ol> <li>Docker-compose</li> </ol> <pre><code>diff --git a/docker-compose.yml b/docker-compose.yml\nindex 057b81e39..49b29ac30 100644\n--- a/docker-compose.yml\n+++ b/docker-compose.yml\n@@ -44,6 +44,7 @@ services:\n       THEME_PRIMARY_BACKGROUND_COLOR:\n       FAVICON_PATH:\n       LOGO_PATH:\n+      APP_TITLE:\n       SHOW_NAME_WITH_LOGO:\n       RDS_USERNAME: postgres\n       RDS_PASSWORD: postgres\n</code></pre> <ol> <li>Your python code</li> </ol> <pre><code>from django.conf import settings\nsettings.APP_TITLE\n</code></pre>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#feature-flags","title":"Feature Flags","text":"<p>Feature flags allow to enable special feature or behaviour for our clients. The use case are: certain workflow that are particular to a client use case or feature that are still in development and that we are co-developing with the client.</p> <p>Example of feature flag: Enable editing an org unit geography directly via the web map or requiring user to log in into the mobile app to submit.</p> <p>We have two kind of flags in iaso: Mobile and Web</p> <ol> <li>To control how the Mobile application behave. Model <code>FeatureFlag</code> that are linked to <code>Project</code> (there might have multiple Mobile application per account)</li> <li>Model <code>AccountFeatureFlag</code> for the whole account. It is mainly used to control the behaviour of the web frontend.</li> </ol> <p>The list of flags are stored in database tables, to add a new Flag migration are used.</p> <p>Usually client can control which Project/Mobile flag they have but not the one on the Account level.</p> <p>To toggle a Mobile Feature flag for a client, add it in the dashboard -&gt; Admin -&gt; Projects -&gt; Edit a project -&gt; <code>Options</code>. </p> <p>To toggle an Account Feature flag, it is in the django Admin</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#adding-a-new-feature-flag-via-a-migration","title":"Adding a new Feature Flag via a Migration","text":"<p>For example a Project Feature Flag</p> <ol> <li>Create an empty migration:   <code>python manage.py makemigrations --empty yourappname</code></li> <li>Open the generated migration file, and adapt it to Create the migration.</li> <li>It should look like this</li> </ol> <pre><code>def create_feature_flags(apps, schema_editor):\n    FeatureFlag = apps.get_model(\"iaso\", \"FeatureFlag\")\n    FeatureFlag.objects.create(\n        code=\"CHECK_POSITION_FOR_FORMS\",\n        name=\"Mobile: Enforce users are within reach of the Org Unit before starting a form.\",\n    )\n\n\ndef destroy_feature_flags(apps, schema_editor):\n    FeatureFlag = apps.get_model(\"iaso\", \"FeatureFlag\")\n    FeatureFlag.objects.filter(code=\"CHECK_POSITION_FOR_FORMS\").delete()\n\n\nclass Migration(migrations.Migration):\n    dependencies = [\n        (\"iaso\", \"0150_profile_home_page\"),\n    ]\n\n    operations = [\n        migrations.RunPython(create_feature_flags, destroy_feature_flags),\n    ]\n</code></pre> <ol> <li>Run black on it</li> <li>Add the file in git</li> </ol> <p>See https://docs.djangoproject.com/en/4.0/topics/migrations/#data-migrations</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#typing-and-annotations","title":"Typing and annotations","text":"<p>If you use an annotate and mypy complains when using the field. You can add the field on the model using Annotated. for example:</p> <pre><code>from typing_extensions import Annotated, TypedDict\n\nclass LastBudgetAnnotation(TypedDict):\n    budget_last_updated_at: datetime\n\n\nclass MonSerializeur()\n    def get_budget_last_updated_at(self, campaign: Annotated[Campaign, LastBudgetAnnotation]):\n        if campaign.budget_last_updated_at:\n            return campaign.budget_last_updated_at.strftime(\"%Y-%m-%d\")\n\n\n</code></pre> <p>Do not use the <code>WithAnnotations</code> from django-stubs. it doesn't work with our setup. I think it's a problem of python 3.8</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#glossary","title":"Glossary","text":"<ul> <li>DRF: Django Rest Framework, the magic framework we use to generate the API</li> <li>mypy: Tool used to check the </li> <li>ci: continuous integration, it the fact that we launch the test on github on each commit</li> <li>There is a Glossary of common Model in the Iaso root Readme. also check it</li> </ul>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#faq","title":"FAQ","text":""},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#i-added-a-new-environement-variable-in-my-env-but-it-is-not-accessible-from-python-or-in-the-settingspy","title":"I added a new environement variable in my .env but it is not accessible from python or in the <code>settings.py</code>","text":"<p>The new environment variable need to be listed in the docker-compose.yml</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#logging-is-broken","title":"Logging is broken","text":"<p>Symptom : The request are not displayed in the the sever console, or in productoin <code>/var/app/log</code></p> <p>Someone probably imported a function from the <code>tests</code> directory, which disable logging. Please don't do that. Move the imported code elsewhere. See https://github.com/BLSQ/iaso/commit/b22b1bcc31a5b05650b675a3c168285103f9bcf8</p>"},{"location":"pages/dev/reference/guidelines/back-end/back-end.html#in-prod-how-to-see-the-log","title":"in prod how to see the log","text":"<p><code>journalctl -u web</code></p>"},{"location":"pages/dev/reference/guidelines/front-end/front-end.html","title":"Front-end guidelines","text":""},{"location":"pages/dev/reference/guidelines/front-end/front-end.html#prerequisite","title":"Prerequisite","text":"<p>First of all make sure your eslint, prettier, typescript environnement is set properly.</p> <p>On VSC code you can format code following IAOS rules while saving in the settings:</p> <pre><code>\"[javascript]\": {\n    \"editor.formatOnSave\": true,\n},\n\"[typescript]\": {\n    \"editor.formatOnSave\": true,\n},\n</code></pre> <p>Make sure you installed eslint extension too. On each file you can have only one component. Use constants, and config files to store static data. Don't be afraid to split your code into smaller parts, using understandable naming convention. It will help to understand what you are doing in your code.  </p>"},{"location":"pages/dev/reference/guidelines/front-end/front-end.html#legacy","title":"Legacy","text":"<p>Class component, proptypes are still old way to create features in IASO. Please use <code>hooks</code>, <code>typescript</code> and <code>arrow component</code>. We already have a lot of typing done in each domain of the application (forms, submissions, org units, ... )</p>"},{"location":"pages/dev/reference/guidelines/front-end/front-end.html#bluesquare-components","title":"Bluesquare-components","text":"<p>Lots of components used in IASO has been moved to a separate repo. We tried to be the most generic has possible in this repo, people from outside IASO should be able to use it in their own project. To use it locally, checkout the repo on the same level has ISO and run:  <code>LIVE_COMPONENTS=true pm run dev</code> in IASO folder. This will use directly the code from your local repo. To make it available too everybody you have to build new files with <code>npm run clean &amp;&amp; npm run build</code> in bluesquare-component folder. </p>"},{"location":"pages/dev/reference/guidelines/front-end/front-end.html#architecture","title":"Architecture","text":"<p>Main index file is located here: <code>hat/assets/js/apps/Iaso/index</code> This is the entrypoint of the app, setting up providers, theme, react-query query client, custom plugins,...  </p> <p><code>components</code> Used to store generic components that can be used everywhere, like <code>inputComponent</code>, <code>buttons</code>, ...</p> <p><code>domains</code> For every big feature entity in IASO (forms, org units, plannings, ...) we have a domain folder allowing to display related pages. - <code>index</code> is generally used to display a list of items  - <code>details</code> the details of an item - <code>config</code> used to store constants for the domain (columns, default order, ...) - <code>hooks</code>: dedicated hooks to make requests or compute specitic data for the domain - <code>components</code>: mostly intermediate components using smaller ones to construct domain page - <code>messages</code>: translations messages used for this specific domain config: used to store constants like defaultOrder, columns, 'baseUrls'  - <code>types</code>: All types related to the domain</p>"},{"location":"pages/dev/reference/guidelines/front-end/front-end.html#styling-components","title":"Styling components","text":"<p>In our effort to maintain readability and conciseness in our code, we are transitioning away from the <code>makeStyles</code> hook and adopting a new approach for styling our components. We will now use a separate object, <code>styles</code>, to define our styles outside of the component function. This object will then be referenced within the <code>sx</code> prop in our JSX.</p> <p>Here's how to apply this approach:</p> <ol> <li>Define your styles in a <code>styles</code> object using the <code>SxStyles</code> type from <code>hat/assets/js/apps/Iaso/types/general.ts</code>. This helps with readability and keeps the component code clean.</li> <li>Apply styles to your components using the <code>sx</code> prop by referencing the <code>styles</code> object properties.</li> </ol> <p>Example:</p> <pre><code>const styles: SxStyles = {\n    root: {\n        cursor: 'pointer',\n    },\n    tooltip: {\n        color: 'text.primary',\n        bgcolor: 'background.paper',\n        boxShadow: (theme: Theme) =&gt; theme.shadows[1],\n        '&amp; .MuiTooltip-arrow': {\n            color: 'background.paper',\n        },\n    },\n    noResult: {\n        textDecoration: 'underline dotted',\n    },\n};\n\n...\n &lt;Box sx={styles.root}&gt;\n ...\n</code></pre>"},{"location":"pages/dev/reference/guidelines/front-end/front-end.html#maps","title":"Maps","text":"<p>We are using leaflet latest version and react-leaflet (LTS version 3). To use latest version of react-leaflet we need to upgrade to react 18.</p> <p>Styles are located in <code>bluesquare-components</code>, you have to import it on each map:</p> <pre><code>const styles = (theme) =&gt; ({\n    mapContainer: {\n        ...commonStyles(theme).mapContainer,\n    },\n});\n</code></pre>"},{"location":"pages/dev/reference/guidelines/front-end/front-end.html#from-react-leaflet","title":"From react-leaflet","text":"<p>MapContainer</p> <p>The main container of the Map. Props we use: - <code>bounds</code>: not required, bounds of markers and shapes displayed, used by fit to bound, doc here. - <code>boundsOptions</code>: not required, options related to bounds, doc here. - <code>zoomControl</code>: required and set to <code>false</code>, in order to use the <code>CustomZoomControl</code>. - <code>whenCreated</code>: not required,to use a ref of the map in the same component as the MapContainer, you get it by doing     whenCreated={mapInstance =&gt; {         map.current = mapInstance;     }}</p> <p>default props:</p> <pre><code>doubleClickZoom={false}\nscrollWheelZoom={false}\nmaxZoom={currentTile.maxZoom}\nstyle={{ height: '100%' }}\ncenter={[0, 0]}\nzoomControl={false}\nkeyboard={false}\nbounds={bounds}\nboundsOptions={boundsOptions}\n</code></pre> <p>Scalecontrol</p> <p>Used to display a scale on the bottom left of the map.</p> <p>Props we use: - <code>imperial</code>: always set to <code>false</code></p> <p>We use other component from react-leaflet not listed here as they are optionnal and used like describe in their docs.</p>"},{"location":"pages/dev/reference/guidelines/front-end/front-end.html#custom-components","title":"Custom components","text":"<p>CustomZoomControl </p> <p>This will display an extended zoom control on the top left of the map. You can zoom in and out, select an area to zoom in and fit the map to the bounds of the map.  </p> <p>Props: - <code>bounds</code>: not required, computed bounds displayed on the map, doc here. - <code>boundsOptions</code>: not required, options related to bounds, doc here. - <code>bound</code>: not required, a boolean to fit to bounds on load, not working if bounds stays undefined.</p> <p>CustomTileLayer + TilesSwitchDialog </p> <p>Control to display a dialog allowing to change the tile layer of the map, on the top right of the map Those twot components are going together, maybe we should refactor it to a single component.</p> <p>CustomTileLayer Props: - <code>currentTile</code>: required, active tile of the map, usually setted in the map itself with a <code>useState</code>.</p> <p>TilesSwitchDialog Props: - <code>currentTile</code>: required, active tile of the map, usually setted in the map itself with a <code>useState</code>. - <code>setCurrentTile</code>: required, method to update current tile on the map.</p> <p>MapToggleTooltips</p> <p>A switch to show or hide tooltips on the map.</p> <p>Props:</p> <ul> <li><code>showTooltip</code>: required, usually setted in the map itself with a <code>useState</code>.</li> <li><code>setShowTooltip</code>: required, method to showTooltip or not.</li> </ul> <p>MapToggleFullscreen </p> <p>A switch to set the map fullscreen or not.</p> <p>Props:</p> <ul> <li><code>isMapFullScreen</code>: required, usually setted in the map itself with a <code>useState</code>.</li> <li><code>setIsMapFullScreen</code>: required, method to set into fullscreen or not.</li> </ul> <p>MapToggleCluster</p> <p>A switch to allow clustering or not of marker on the map. You should use <code>MarkerClusterGroup</code> from <code>react-leaflet-markercluster</code> </p> <p>Props:</p> <ul> <li><code>isClusterActive</code>: required, usually setted in the map itself with a <code>useState</code>.</li> <li><code>setIsClusterActive</code>: required, method to enable custering of markers or not.</li> </ul> <p>MarkerComponent / CircleMarkerComponent Components used to display a marker on the map. Props: - see js file for not required props, mainly the same props as <code>Marker</code> from react-leaflet. - <code>PopupComponent</code>: not required, Popup used while clicking on the marker - <code>TooltipComponent</code>: not required, Tooltip used while hovering the marker - <code>item</code>: required, an object with <code>latitude</code> an <code>longitude</code> arguments, those are numbers</p> <p>MarkersListComponent Used to display a list of markers</p> <p>Props: - <code>markerProps</code>: not required, props spreaded to the marker - <code>items</code>: required, array of items use by previous component - <code>PopupComponent</code>: not required, Popup used while clicking on the marker - <code>TooltipComponent</code>: not required, Tooltip used while hovering the marker - <code>onMarkerClick</code>: not required, method applied while clicking on the marker on the map - <code>isCircle</code>: not required, display marker as a circle or not - <code>onContextmenu</code>: not required, method applied while right clicking on the marker on the map</p>"},{"location":"pages/dev/reference/guidelines/front-end/front-end.html#tables","title":"Tables","text":"<p>Most tables we use need to support filters and deep linking. We have a <code>TableWithDeepLinking</code> component for that purpose, which is a wrapper on the <code>Table</code> from Bluesuare-components.</p> <p>The typical props to pass are: - <code>data</code>: the table data. Usually originate s from a <code>react-query</code> hook - <code>page</code>: the current page. Usually returned by the API - <code>pageSize</code>: the amount of rows to display on each page. Also comes from the API - <code>count</code>: the total amount of items in the page. From the API - <code>pages: total number of pages. From the API -</code>baseUrl<code>: the baseUrl the table will redirect to  -</code>params<code>: the params of the current location.</code>TableWithDeepLink<code>will combine them with</code>baseUrl<code>to redirect to the correct location -</code>extraProps<code>: an object. The</code>loading<code>key will be used to manage the table's loading state. Other values will force a table re-render when they change (similar to</code>useEffect<code>deps array), which can be useful in some situations -</code>columns<code>: an array of objects of type</code>Column` (imported from bluesquare-components). It's usually defined in a custom hook in order to easily handle translations.</p> <p>Note: <code>useDeleteTableRow</code>  When performing <code>DELETE</code> operations from the table that will reduce the amount of table rows, we can run into a pagination bug. To avoid it, use <code>useDeleteTableRow</code> in the <code>useDelete&lt;whatever&gt;</code> hook that will return the delete function:</p> <pre><code>export const useDeleteWhatever = (\n    params: Record&lt;string, any&gt;,\n    count: number,\n): UseMutationResult =&gt; {\n    const onSuccess = useDeleteTableRow({\n        params,\n        pageKey: 'whateverPage', // optional, will default to \"page\"\n        pageSizeKey: 'whateverPageSize', //optional, will default to \"pageSize\"\n        count,\n        invalidateQueries: ['whatever'], // optional\n        baseUrl: baseUrls.whatever,\n    });\n    return useSnackMutation({\n        mutationFn: deleteWhatever,\n        options: { onSuccess },\n    });\n};\n</code></pre>"},{"location":"pages/dev/reference/guidelines/front-end/front-end.html#filters","title":"Filters","text":"<p>Most tables we display come with one or several filters, most commonly a text search and date filters.</p> <p>It's a global feature in Iaso that all filter searches performed on pages are deep-linked, i.e.: the parameters of the filters are saved in the url, so users can share the results of their search/filtering. This has an impact on the architecture of Iaso:</p> <ul> <li> <p>All search fields need to be declared in <code>routes.js</code>, under the <code>params</code> key. Important: <code>params</code> is an ordered list. Passing them in the wrong order in the URL will result in a 404.</p> </li> <li> <p>Applying a filter doesn't change the component state per se but results in a redirection. Depending on the use cases, we may or may not want to save consecutive filters/searches in the routers history</p> </li> </ul> <p>We have a few ready-made components for filters:</p> <ul> <li><code>InputComponent</code>: handles most types of inputs: text, select, checkbox, radio</li> <li><code>OrgUnitTreeviewModal</code>: handles searches on org units</li> <li><code>DatePicker</code> and <code>DateRange</code>: handle dates</li> </ul> <p><code>InputComponent</code> takes a <code>keyValue</code> prop, which is a string that corresponds to the url parameter that stores the filter value, and an <code>onChange</code> prop which is a function with the signature (keyValue,value) =&gt; void. <code>DateRange</code> takes a <code>keyDateFrom</code> and a <code>keyDateTo</code> that play the same role for the start and end date respectively. </p> <p>We also have a <code>useFilterState</code> hook that handles the state and update methods for filters of a given page:</p> <pre><code> const { filters, handleSearch, handleChange, filtersUpdated } =\n        useFilterState({\n            baseUrl,\n            params,\n            withPagination: false,\n            saveSearchInHistory: false,\n        });\n</code></pre> <ul> <li><code>baseUrl</code>: is the url of the page</li> <li><code>params</code>: the parameters passed to the url. <code>useFilterState</code>  will generate the state for the filters based on those. </li> <li>withPagination: if <code>false</code>  the hook will remove parameters related to table pagination (<code>page</code>, <code>pageSize</code> and so on)</li> <li><code>saveSearchInHistory</code>: if <code>true</code>, the redirection will use <code>redirect</code>  i.o <code>redirectToReplace</code> and the searchg will be saved in the router's history, meaning that using the back arrow will bring the user to the previous search and not the previous page. </li> </ul>"},{"location":"pages/dev/reference/guidelines/front-end/front-end.html#code-style","title":"Code style","text":"<ul> <li>Prefer <code>type?:string</code> to <code>type: string | undefined</code></li> <li>Prefer <code>const</code> to <code>let</code>:</li> </ul> <p>```javascript  // BAD let myVar = \"placeholder\"  if(otherVAlue) {     myVar = otherValue }</p> <p>// GOOD const myVar = otherValue ?? \"placeholder </p> <p>```</p> <ul> <li>Function names should include a verb:</li> </ul> <pre><code>// BAD\nconst username = user =&gt; user.firstname + user.lastname\n\n// GOOD\nconst makeUsername = user =&gt; user.firstname + user.lastname\n</code></pre> <ul> <li>Not all functions are hooks. Hooks should either have some sort of internal state or trigger a side-effect:</li> </ul> <pre><code>// BAD, we're just returning a value\nconst useMyValue = (value :string) =&gt; {\n    return parseInt(value,10)\n}\n\n// GOOD, because of useSafeIntl, the return value will change with user locale\nconst useMyValue = (value :IntlMessage) =&gt; {\n    const { formatMessage } = useSafeIntl()\n    return formatMessage(value)\n}\n\n//GOOD, the returned object is memoized\nconst useMyValue = (value: string) =&gt; {\n    return useMemo(() =&gt; {\n        const result = {\n            isNumber:false, \n            value\n            }\n        if (parseFloat(value)){\n            result.isNumber = true\n        }\n        return result\n    },[value])\n}\n\n// GOOD, as side effect will be triggered after the first render\nexport const useSkipEffectOnMount = (func:Function, deps:Array&lt;unknown&gt;) =&gt; {\n    const didMount = useRef(false);\n\n    useEffect(() =&gt; {\n        if (didMount.current) {\n            func();\n        } else {\n            didMount.current = true;\n        }\n    }, deps);\n};\n\n</code></pre>"},{"location":"pages/dev/reference/guidelines/front-end/front-end.html#remarks","title":"Remarks","text":"<ul> <li>order translations by alphanumeric</li> <li>spacing is by default theme.spacing(2)</li> <li>do not use Grid everywhere or too much</li> <li>all the calls to the api without query params should end by '/'</li> <li>in routes.js, the <code>params</code> listed are ordered, meaning you can get a 404 when they are not in the right order. Related to this, the <code>paginationPathParams</code> that we spread in most routes should come first, right after the <code>accountId</code> to avoid getting 404 because of automatic redirections</li> </ul>"},{"location":"pages/dev/reference/guidelines/git/git.html","title":"Github flow","text":""},{"location":"pages/dev/reference/guidelines/git/git.html#create-and-merge-a-pull-request","title":"Create and merge a pull request","text":"<ul> <li>Make a new branch using the name of the JIRA issue in title</li> <li>Make sure you fill up all sections of the template (changes, how to test, ...)</li> <li>For any new feature make sure you wrote enough python or cypress tests </li> <li>To be mergeable your PR needs to pass build, JS and Python tests.</li> <li>You can also launch Cypress test manually to make sure you didn't brake something else just by tagging <code>@cypress</code> in a comment on your PR</li> <li>Add reviewer(s) to make sure someone is gonna take care of it</li> <li>Merge main in your branch if you have conflicts (we are not doing rebase)</li> <li>If a reviewer request changes apply the changes and mark the discussion on github as resolved when fixed. It will help other reviewers to see if the changes has been done.</li> <li>Re-request a review when all changes are pushed (double check tests again)</li> <li>Wait at least that one reviewer approved the PR and merge the thing</li> <li>Add documentation when necessary (new feature, change in config, etc)</li> </ul>"},{"location":"pages/dev/reference/guidelines/git/git.html#review-a-pull-request","title":"Review a pull request:","text":"<ul> <li>Go to all modified files and parse the code</li> <li>You can write your remarks or change requests directly on the files</li> <li>For each file, click on viewed checkbox while you reviewed it. This can help you to show changes on files after the author fixed your change requests</li> <li>Pull the branch and test the feature locally</li> <li>Approve/comment/request changes while you are done</li> <li>Restart the proccess if the author re-request a review</li> </ul>"},{"location":"pages/dev/reference/guidelines/git/git.html#tips","title":"Tips","text":"<ul> <li>You can always write a draft PR to run the tests or share a discussion with other developers </li> <li>To make sure your PR will pass in the next release you can add the <code>release</code> label to it</li> <li>You can add comments on a file or on multiple lines</li> <li>Black formatting is not automatic on new migration files</li> <li>You can access to the pull requests where your review is requested here</li> <li>When reviewing a PR and adding comments, you can inline a suggestion with the <code>suggestion</code> block. More information can be found here on point 6.</li> </ul>"},{"location":"pages/dev/reference/public_registry/public_registry.html","title":"Configuring a Public Registry","text":"<p>To configure a public registry, follow these steps:</p>"},{"location":"pages/dev/reference/public_registry/public_registry.html#step-1-activate-the-plugin","title":"Step 1: Activate the Plugin","text":"<p>First, you need to activate the plugin by adding <code>\"registry\"</code> to the <code>PLUGINS</code> variable in your settings.</p> <pre><code>PLUGINS = registry,...\n</code></pre>"},{"location":"pages/dev/reference/public_registry/public_registry.html#step-2-make-a-data-source-public","title":"Step 2: Make a Data Source Public","text":"<ol> <li>Open the Django admin interface.</li> <li>Navigate to the data source you want to make public.</li> <li>Select the data source and mark it as public.</li> </ol>"},{"location":"pages/dev/reference/public_registry/public_registry.html#step-3-create-a-public-registry-config","title":"Step 3: Create a Public Registry Config","text":"<ol> <li>In the Django admin interface, navigate to the public registry config section.</li> <li>Click on \"Add\" to create a new public registry config.</li> </ol>"},{"location":"pages/dev/reference/public_registry/public_registry.html#configuration-fields","title":"Configuration Fields","text":"<ul> <li>Host: Enter any URL you want to use as the host.</li> <li>Slug: Set this to <code>default_registry</code> (this value is hardcoded in the front-end at the moment).</li> <li>Whitelist: Leave this field to the default value.</li> <li>Account: Select the account where your data source is located.</li> <li>Root Orgunit: Leave this field empty.</li> <li>Data Source: Select the data source you made public.</li> <li>Source Version: Select the version of the data source.</li> <li>App ID: Fill in the App ID of the project that uses the account and the data source.</li> </ul>"},{"location":"pages/dev/reference/public_registry/public_registry.html#example-configuration","title":"Example Configuration","text":"<p>Here is an example configuration:</p> <ul> <li>Host: <code>https://www.example.com</code></li> <li>Slug: <code>default_registry</code></li> <li>Whitelist: <code>{\"fields\": [\"Name\"]}</code></li> <li>Account: <code>polioTest</code></li> <li>Root Orgunit: (leave empty)</li> <li>Data Source: <code>polio</code></li> <li>Source Version: <code>Polio 1</code></li> <li>App ID: <code>com.poliooutbreaks.app</code></li> </ul>"},{"location":"pages/dev/reference/public_registry/public_registry.html#final-steps","title":"Final Steps","text":"<p>After filling in all the required fields, save the configuration. Your public registry should now be configured and ready to use.</p>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html","title":"SQL Dashboard feature","text":"<p>For super user across account there is a way to run raw read only SQL queries at the <code>/explore/</code> page : https://iaso.bluesquare.org/explore/ e.g SELECT name FROM iaso_orgunittype</p> <p>This is useful to check the database state and query data accross different client account. You can also save query and share them with others.</p> <p>This feature is implemented via the excellent Django SQL Dashboard, their documentation has more complete information:  https://django-sql-dashboard.datasette.io/en/stable/index.html</p>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#tips","title":"Tips","text":""},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#bar-charts","title":"Bar charts","text":"<p>You can generate bar chart by having two column named <code>bar_label</code>  and <code>bar_quantity</code></p> <p>Examples</p>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#example-number-of-org-unit-per-type-in-a-project","title":"Example: Number of Org Unit per type in a project","text":"<pre><code>select iaso_orgunittype.name as bar_label, count(org_unit.id) as bar_quantity  \nfrom iaso_orgunittype  \n    join iaso_orgunittype_projects on iaso_orgunittype.id = iaso_orgunittype_projects.orgunittype_id  \n    left join iaso_orgunit org_unit on iaso_orgunittype.id = org_unit.org_unit_type_id  \n    where iaso_orgunittype_projects.project_id = 1  \ngroup by iaso_orgunittype.id  \norder by  bar_quantity\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#orgunit-hierarchy-linked-to-an-org-unit","title":"OrgUnit hierarchy linked to an org unit","text":"<pre><code>SELECT * FROM iaso_orgunit WHERE path ~ '*.104133.*'\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#use-of-parameters","title":"Use of parameters","text":"<p>You can use parameter, this will automatically create an input.</p> <p>If you save them as a dashboard it will allow passing the paramter in the url</p>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#example-number-of-submission-per-form-and-per-org_unit-in-a-particular-sourceversion-version_id","title":"Example number of submission per form and per org_unit in a particular SourceVersion (version_id)","text":"<pre><code>SELECT \"iaso_orgunit\".\"path\",  \n       \"iaso_orgunit\".\"name\",  \n       \"iaso_instance\".\"form_id\",  \n       count(\"iaso_instance\".\"id\") filter  \n           (WHERE (not (\"iaso_instance\".\"file\" = '' and \"iaso_instance\".\"file\" is not null) and  \n                   not (\"iaso_instance\".\"deleted\" and \"iaso_instance\".\"deleted\" is not null))) as \"instances_count\"  \n\nFROM \"iaso_orgunit\"  \n         JOIN \"iaso_instance\"  \n              ON (\"iaso_orgunit\".\"id\" = \"iaso_instance\".\"org_unit_id\")  \n                  and version_id = %(version_id)s\nGROUP BY \"iaso_orgunit\".path, \"iaso_orgunit\".\"id\", \"iaso_instance\".\"form_id\"  \norder by \"iaso_orgunit\".path  \nlimit 100;\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#use-multiple-ids","title":"Use multiple ids","text":"<p>This tips is useful to allow passing multiple ids, separated per <code>,</code></p> <pre><code>select * from iaso_form where\niaso_form.id = ANY (string_to_array(%(form_ids)s::text, ',')::int[])\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#multi-line-chart","title":"Multi Line chart","text":"<p>You can generate multi line chart by naming columns <code>line_label</code>, <code>line_quantity</code> and <code>line_category</code> (you need all three)</p> <p></p>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#example-cumulative-submission-per-projects-per-month","title":"Example cumulative submission per projects per month","text":"<pre><code>select line_label,\n       line_category,\n       sum(line_quantity) over (PARTITION BY line_category order by line_label) as line_quantity\nfrom (\nselect TO_CHAR(date_trunc('month', COALESCE(iaso_instance.source_created_at, iaso_instance.created_at)), 'YYYY/MM') as line_label, count(*) as line_quantity,  iaso_project.name as line_category from iaso_instance inner join iaso_project on iaso_instance.project_id = iaso_project.id\n group by line_label, iaso_project.name order by line_label, line_quantity desc limit 200\n) as data\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#cumulative-sum","title":"Cumulative sum","text":"<p>To generate a cumulative sum (particularly useful for progression over time). Wrap your query with</p> <pre><code>select line_label,\n       line_category,\n       sum(line_quantity) over (PARTITION BY line_category order by line_label) as line_quantity\nfrom (\n YOUR QUERY\n) as data\n</code></pre> <p>See previous example.</p>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#random-data-generation-example","title":"random data generation example","text":"<pre><code>select line_label,  \n       line_category,  \n       sum(line_quantity) over (PARTITION BY line_category order by line_label) as line_quantity  \nfrom (select TO_CHAR(gen_date.generate_series, 'YYYY/MM') as line_label,  \n             (random() - 0.2) * 1000::int                 as line_quantity,  \n             name                                         as line_category  \n      from (select *  \n            from generate_series('2008-03-01 08:00'::timestamp,  \n                                 '2009-03-04 12:00'::timestamp, '1 month')) gen_date  \n               cross join (VALUES ('foo'), ('bar'), ('baz')) as categories (name)) as data\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#searching-in-org-units-org-unit-types","title":"Searching in Org Units, Org Unit Types","text":"<p>Here are some examples of queries to find Org Units, their types, reference forms and everything linked to the hierarchy of a specific Org Unit.</p> <p>As we are using Postgre's ltree extension and django-ltree to model this hierarchy, specific SQL operators are available to search in a performant way and queries can be cumbersome.</p> <p>Let's say you have a OrgUnit with ID : XXXXXX</p>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#find-the-hierarchy-linked-to-this-org-unit","title":"Find the hierarchy linked to this Org Unit.","text":"<pre><code>SELECT * FROM iaso_orgunit WHERE path ~ '*.XXXXXX.*'\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#find-the-related-org-unit-types","title":"Find the related Org Unit Types :","text":"<pre><code>SELECT * FROM iaso_orgunittype WHERE id IN \n    (SELECT org_unit_type_id FROM iaso_orgunit WHERE path ~ '*.XXXXXX.*')\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#reference-forms-of-these-org-unit-types","title":"Reference forms of these Org Unit Types","text":"<pre><code>SELECT * FROM iaso_form WHERE id IN \n    (SELECT reference_form_id FROM iaso_orgunittype WHERE id IN \n        (SELECT org_unit_type_id FROM iaso_orgunit WHERE path ~ '*.XXXXXX.*'))\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#find-the-form-versions-of-these-reference-forms","title":"Find the Form Versions of these Reference Forms.","text":"<pre><code>SELECT * FROM iaso_formversion WHERE id IN \n    (SELECT id FROM iaso_form WHERE id IN \n        (SELECT reference_form_id FROM iaso_orgunittype WHERE id IN \n            (SELECT org_unit_type_id FROM iaso_orgunit WHERE path ~ '*.XXXXXX.*')))\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#the-instances-linked-to-that-hierarchy","title":"The Instances linked to that hierarchy","text":"<pre><code>SELECT * FROM iaso_instance WHERE org_unit_id IN \n    (SELECT id FROM iaso_orgunit WHERE path ~ '*.104133.*')\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#finding-the-projects-linked-to-that-hierarchy","title":"Finding the projects linked to that hierarchy","text":"<pre><code>SELECT * FROM iaso_project WHERE id in \n    (SELECT project_id FROM iaso_instance WHERE org_unit_id IN \n        (SELECT id FROM iaso_orgunit WHERE path ~ '*.104133.*'))\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#devices-linked-to-that-hierarchy","title":"Devices linked to that hierarchy","text":"<pre><code>SELECT * FROM iaso_device WHERE id in \n    (SELECT device_id FROM iaso_instance WHERE org_unit_id IN \n        (SELECT id FROM iaso_orgunit WHERE path ~ '*.104133.*'))\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#accounts-linked-to-these-projects","title":"Accounts linked to these projects","text":"<pre><code>SELECT * FROM iaso_account WHERE id IN \n    (SELECT account_id FROM iaso_project WHERE id in \n        (SELECT project_id FROM iaso_instance WHERE org_unit_id IN \n            (SELECT id FROM iaso_orgunit WHERE path ~ '*.104133.*')))\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#source-versions-linked-to-these-projects","title":"Source versions linked to these projects","text":"<pre><code>SELECT * FROM iaso_sourceversion WHERE id IN\n    (SELECT default_version_id FROM iaso_account WHERE id IN \n        (SELECT account_id FROM iaso_project WHERE id in \n            (SELECT project_id FROM iaso_instance WHERE org_unit_id IN \n                (SELECT id FROM iaso_orgunit WHERE path ~ '*.104133.*'))))\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#datasources-linked-to-these-versions","title":"Datasources linked to these versions","text":"<pre><code>SELECT * FROM iaso_datasource WHERE id IN (SELECT data_source_id FROM iaso_sourceversion WHERE id IN\n(SELECT default_version_id FROM iaso_account WHERE id IN \n    (SELECT account_id FROM iaso_project WHERE id in \n        (SELECT project_id FROM iaso_instance WHERE org_unit_id IN \n            (SELECT id FROM iaso_orgunit WHERE path ~ '*.104133.*')))))\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#credentials-linked-these-datasources","title":"Credentials linked these datasources","text":"<pre><code>SELECT * FROM iaso_externalcredentials WHERE id IN (SELECT credentials_id FROM iaso_datasource WHERE id IN (SELECT data_source_id FROM iaso_sourceversion WHERE id IN\n(SELECT default_version_id FROM iaso_account WHERE id IN \n    (SELECT account_id FROM iaso_project WHERE id in \n        (SELECT project_id FROM iaso_instance WHERE org_unit_id IN \n            (SELECT id FROM iaso_orgunit WHERE path ~ '*.104133.*'))))))\n</code></pre>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#restrictions","title":"Restrictions","text":"<p>This functionality is severly restricted to prevent the risk of data leak and security issues:</p> <ul> <li>Only a certain set of table are accessible. (notably not the user table password)</li> <li>Since this is ignore the multi tenant rule only super user can be given access to it</li> <li>Access is read only (see implementation detail)</li> </ul>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#configuration-and-implementation-detail","title":"Configuration and Implementation detail","text":"<p>To garantee read only access this feature use a separate user that should only be given restricted right.</p> <p>The functionnality is automatically enabled if this user is set via the <code>DB_READONLY_USERNAME</code> environment variable.</p> <p>To configure it: Create a Postgresql user with a password and no acess and give him the role <code>readonlyrole</code>. You can do so using the sql command</p> <pre><code>GRANT readonlyrole to YOUR_USER\n</code></pre> <p>Set the environment variable <code>DB_READONLY_USERNAME</code> and <code>DB_READONLY_PASSWORD</code>.</p> <p>Some migration will give read acess to the certain tables to the <code>readonlyrole</code>, should you give access to more table use the command</p> <pre><code>GRANT SELECT ON TABLE   \n iaso_new_table_1,\n iaso_new_table_2,\nTO \"readonlyrole\";\n</code></pre> <p>to only give access to certain column on a table</p> <pre><code>GRANT SELECT(  \n  id, username, is_active, date_joined  \n) ON auth_user TO \"readonlyrole\";\n</code></pre> <p>See also https://django-sql-dashboard.datasette.io/en/stable/security.html</p>"},{"location":"pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#in-local-dev","title":"In local dev","text":"<p>this feature is automatically enabled.</p>"},{"location":"pages/dev/reference/vector_control/vector_control.html","title":"Vector control","text":"<p>This App is used to log API calls in the DB.</p> <p>The idea is that the mobile app user may not have great internet connection where they are so in case of import problem we can fix it server side and not ask them to upload again.</p> <pre><code>API endpoint to be logged as such are decorated with the @safe_api_import decorator.\nThe request themselves are stored in the vector_control.APIImport model.\nTo replay the failings requests use the django command reimport_failed_imports.py\n</code></pre> <p>This app used to be a lot of others things too before, hence the not matching name.</p>"},{"location":"pages/users/FAQ/faq.html","title":"Faq","text":"<p>How do I configure Iaso in a way that mobile users cannot create new OUs ? And/or is it possible to limit OU creation to certain OU types. Ex: mobile users can create the types at the bottom of the hierarchy (FOSA, village), but not at the top (Region -&gt; Aire sanitaire) ?</p> <p>It\u2019s in the org unit type configuration: you specify what is allowed under a given org unit type in the \"sub org unit types\" selector.</p> <p></p>"},{"location":"pages/users/how_to/convert_docx_to_md/convert_docx_to_md.html","title":"How to convert a .docx file to .md","text":"<ul> <li>Install pandoc</li> <li>Add a copy of your <code>docx</code> file to <code>iaso/docs/originals</code></li> <li>Create a folder for your file at the right place. E.g: If you want to create a how-to file for users, you would create the folder <code>iaso/docs/pages/users/how_to/my_new_page</code>. Make sure to use snake_case when naming your folder.</li> <li>In your <code>iaso/docs/pages/users/how_to/my_new_page</code> folder, create a <code>media</code> folder. The full path to the media folder should be: <code>iaso/docs/pages/users/how_to/my_new_page/media/</code></li> <li>In <code>iaso/docs/pages/users/how_to/my_new_page/</code>, run the following pandoc command: </li> </ul> <pre><code>pandoc -s -f docx -t markdown_mmd --extract-media=. -o ./my_new_page.md ../../../../originals/MyPage.docx\n</code></pre> <p>This will copy all the attached media of you <code>docx</code>file (like screenshots) in <code>iaso/docs/pages/users/how_to/my_new_page/media/</code>, and create <code>my_new_page.md</code> in <code>iaso/docs/pages/users/how_to/my_new_page/</code> - Rename the <code>media</code> folder to <code>attachments</code> - Open <code>my_new_pages.md</code>. search (ctrl+F/cmd+F) for the word \"media\" and replace it with \"attachment\" whenever it is a path to a file, eg:</p> <pre><code>&lt;!--&gt;Initial value&lt;--&gt;\n&lt;img src=\"./media/image1.png\"style=\"width:3.02211in;height:0.79688in\" /&gt;\n&lt;!--&gt;Correct value&lt;--&gt;\n&lt;img src=\"./attachments/image1.png\"style=\"width:3.02211in;height:0.79688in\" /&gt;\n</code></pre> <p>This is because <code>media</code> folders are not pushed on github, so if we don't rename it, the screenshots in your docs will be lost</p> <ul> <li>Go through <code>my_new_pages.md</code> and fix any layout issues that may have been caused by the conversion.</li> <li>Now you can add you page to the docs: go to <code>iaso/mkDocs.yml</code> and locate the <code>nav</code> entry. </li> <li>Add you new page:</li> </ul> <pre><code>nav:\n  - Home: index.md\n  - Users: \n    - References:\n      - User guide:\n        - ./pages/users/reference/user_guide/user_guide.md\n      - How to:\n        - ./pages/users/how_to/my_new_page/my_new_page.md #&lt;-- Your page would go here\n      - FAQ: ./pages/users/FAQ/faq.md\n</code></pre>"},{"location":"pages/users/how_to/create_new_documentation_page/create_new_documentation_page.html","title":"How to add a new page to Iaso's documentation","text":""},{"location":"pages/users/how_to/create_new_documentation_page/create_new_documentation_page.html#1-determine-where-the-page-belongs","title":"1. Determine where the page belongs","text":"<p>To determine where a new documentation page fits, there are 2 questions to answer: - Who is it intended for? - What kind of document is it?</p> <p>We currently have 2 categories of documentation users: developers and users. This will determine the style of the writing and the assumptions  you can make in terms of, eg prior knowledge of the product.</p> <p>We determine the kind of document using the diataxis framework. Basically, the idea is to ask what the goal of the document is. A simple rule of thumb is: - Give instructions about how to perform a task, eg: how do I login? -&gt; how to - Explanation of concepts, eg: what is an org unit type? -&gt; reference - Explanation on choices made for some implementation, eg: why do we use react-query for API calls? -&gt; explanation</p> <p>Once we know who the document is intended for and what kind of document it is, we just need to follow the folder structure. For example, this document is intended for users and aims to explain how to create a new page in the documentation, so it will go in:</p> <pre><code>&gt; pages\n    &gt; users\n        &gt; how_to\n</code></pre> <p>There is an exception for the FAQ whixh we keep separate and visible for convenience</p>"},{"location":"pages/users/how_to/create_new_documentation_page/create_new_documentation_page.html#2-create-a-branch-on-git-for-the-new-document","title":"2. Create a branch on git for the new document","text":"<p>Ideally, there will be a Jira ticket for the changes about to be made. It should be used to name the branch, as it will enable Jira to directly link the ticket to the branch. For example, the development branch for this document is called <code>IA-2630_how_to_write_iaso_doc</code></p> <p>To create the branch: - Open a terminal - Make sure you are on main. If not run <code>git checkout main</code> - Run <code>git checkout -b &lt;Branch name&gt;</code>. This will create the branch and switch to it</p>"},{"location":"pages/users/how_to/create_new_documentation_page/create_new_documentation_page.html#3-create-folder-and-markdown-files","title":"3. Create folder and markdown files","text":"<p>By convention, we create a folder with the same name as the markdown file.  For example, this document is in:</p> <pre><code>&gt; pages\n    &gt; users\n        &gt; how_to\n            &gt; create_new_documentation_page\n                - create_new_documentation_page.en.md --&gt; this page\n                - create_new_documentation_page.fr.md --&gt; its french counterpart\n</code></pre> <p>It's important to use the format <code>&lt;name&gt;.&lt;language&gt;.md</code>, as it will be used by mkDocs to display the right page for the right language</p>"},{"location":"pages/users/how_to/create_new_documentation_page/create_new_documentation_page.html#4-write-the-doc","title":"4. Write the doc","text":"<p>Format the text using markdown syntax</p>"},{"location":"pages/users/how_to/create_new_documentation_page/create_new_documentation_page.html#41-add-images","title":"4.1. Add images","text":"<ul> <li>Add a folder called <code>/attachments/</code> in the document's folder and move the images there</li> </ul> <pre><code>&gt; pages\n    &gt; users\n        &gt; how_to\n            &gt; create_new_documentation_page\n                &gt; attachments\n                - create_new_documentation_page.en.md\n                - create_new_documentation_page.fr.md\n</code></pre> <p>To add the image in the markdown file, either: - use markdown syntax to add the link <code>![my_image](./attachments/my_image.png)</code> - use an html <code>img</code> tag:</p> <pre><code>&lt;img src=\"./attachments/image49.png\" /&gt;\n</code></pre> <p>The markdown syntax is less cumbersome if the image is already at the right size. The <code>img</code> tag allows for manually setting the image width and heigh via the <code>style</code> attribute:</p> <pre><code>&lt;img src=\"./attachments/image49.png\" style=\"width:50px;height:50px\" /&gt;\n</code></pre> <p>Note: Add the <code>/attachments/</code> folder even if the document doesn't contain any images yet. It will make it easier for others to add them later.</p>"},{"location":"pages/users/how_to/create_new_documentation_page/create_new_documentation_page.html#5-push-the-changes-on-github","title":"5. Push the changes on Github","text":"<p>Once the document is ready, the changes need to be saved on the git branch, then pushed on Github, so they can be reviewed and merged. There are tools to make this part faster and easier to manage (Github desktop, or even just the git ineterface of VS Code), but if it needs to be done in the terminal (from the document's branch): - <code>git add .</code> - <code>git commit -m &lt;commit message&gt;</code> - <code>git push</code></p>"},{"location":"pages/users/how_to/create_new_documentation_page/create_new_documentation_page.html#6-open-the-pull-request","title":"6. Open the Pull Request","text":"<p>Pull requests are the process through which we review code. Since the documentation is hosted as part of the code, it's going through the same review process, though not necessarily by the same persons.</p> <p>To open a pull request: - Go to iaso's pull requests - Click New pull request - Select a branch - Describe the changes. The description template can be ignored for documentation changes, but please leave a description, as it helps tracking and understanding changes.</p>"},{"location":"pages/users/how_to/create_new_documentation_page/create_new_documentation_page.html#7-review-a-pull-request","title":"7. Review a pull request","text":"<p>Pull requests are peer-reviews that insure that all changes are cross-checked, so one should not merge their own pull requests.</p> <p>To review a pull request: - Go to iaso's pull requests - Click in the pull request - Click \"Add your review\" - Review the changes, comment where necessary - To finish the review, click \"Review changes\"     - If the changes can be deployed as they are, choose \"Approve\"     - If not, explain what needs to be corrected and chooses \"Request changes\" - If the PR has been approved, go the \"Conversation\" tab of the PR, scroll down and click \"Merge pull request\"</p> <p>The changes will be visible in production once the pull request has been merged</p>"},{"location":"pages/users/how_to/edit_documentation/edit_documentation.html","title":"How to edit an existing page in iaso's documentation","text":""},{"location":"pages/users/how_to/edit_documentation/edit_documentation.html#1-to-add-only-text","title":"1. To add only text","text":"<ul> <li>On the readthedocs page, click \"Edit on Github\"</li> <li>Make the changes</li> <li>Click \"Commit changes\"</li> <li>Add a description of the changes (eg: \"fix typo\")</li> <li>Choose \"Create new branch for this commit and start pull request\"</li> <li>Change the name of the branch (eg to include he Jira ticket number)</li> <li>Click \"Propose changes\"</li> </ul>"},{"location":"pages/users/how_to/edit_documentation/edit_documentation.html#2-to-add-text-and-images","title":"2. To add Text and images","text":"<p>For the text, see point 1 above. For the images, add the images to the <code>/attachments/</code> folder of that document, eg, for user_guide:</p> <pre><code>&gt; user_guide\n    &gt; attachments  // &lt;-- there\n    - user_guide.md\n</code></pre> <p>To add the image in the markdown file, either: - use markdown syntax to add the link <code>![my_image](./attachments/my_image.png)</code> - use an html <code>img</code> tag:</p> <pre><code>&lt;img src=\"./attachments/image49.png\" /&gt;\n</code></pre> <p>The markdown syntax is less cumbersome if the image is already at the right size. The <code>img</code> tag allows for manually setting the image width and heigh via the <code>style</code> attribute: ```html </p> <p>If the <code>/attachments/</code> folder doesn't exist, the change can't be made using Github's interface and should be made using git and an IDE/text editor</p>"},{"location":"pages/users/how_to/setup_an_empty_iaso_account/setup_an_empty_iaso_account.html","title":"1. Setup an empty iaso account","text":"<p>Find someone with appropriate access right (django admin required)</p> <p>https://iaso.bluesquare.org/api/setupaccount/</p> <p></p> <p>Use and store the user/password in a password manager</p>"},{"location":"pages/users/how_to/setup_an_empty_iaso_account/setup_an_empty_iaso_account.html#2-create-a-dedicated-dhis2-for-iaso","title":"2. Create a dedicated DHIS2 for iaso","text":"<p>We want to keep track of which app is changing which data/metadata of dhis2 so please don\u2019t use the main/default \u201cadmin\u201d user but a dedicated one.</p> <ul> <li> <p>Go in the dhis2 \u201cUsers / Utilisateurs\u201d module</p> </li> <li> <p>\u201cDuplicate the admin\u201d </p> </li> </ul> <p></p> <ul> <li>Generate a password with password manager (need at least one special char)</li> </ul> <p></p>"},{"location":"pages/users/how_to/setup_an_empty_iaso_account/setup_an_empty_iaso_account.html#3-login-in-iaso-with-the-user-created-at-step-1","title":"3. Login in iaso with the user created at step 1","text":"<p>Verify the account is empty or in the left menu</p> <p>Avoid doing the next steps with the django admin, as it can lead to industrial accident: the user may be linked to a totally different account/project you might end up with the pyramid of a project filled with orgunits of another country.</p> <p></p>"},{"location":"pages/users/how_to/setup_an_empty_iaso_account/setup_an_empty_iaso_account.html#4-add-a-new-project","title":"4. Add a new project","text":"<p>Use the naming used by clients if applicable.</p> <p></p> <p>Promote \u201cgood behavior\u201d by enabling authentication by default</p> <p></p>"},{"location":"pages/users/how_to/setup_an_empty_iaso_account/setup_an_empty_iaso_account.html#5-create-a-new-datasource","title":"5. Create a new datasource","text":"<p>Use the user created at step 2</p> <p>Make the source the default one </p> <p></p>"},{"location":"pages/users/how_to/setup_an_empty_iaso_account/setup_an_empty_iaso_account.html#6-create-a-new-first-version-of-the-data-source","title":"6. Create a new (first) Version of the data source","text":"<p>You can import this first version </p> <p></p>"},{"location":"pages/users/how_to/setup_an_empty_iaso_account/setup_an_empty_iaso_account.html#7-updating-the-pyramid","title":"7. Updating the pyramid","text":"<p>IMPORTANT note that if you \u201cadd new orgunits or add/change groups\u201d that\u2019s not previous step screen that you should use</p> <p>but the \u201cupdate\u201d button on the default version !</p> <p></p> <p>If you create a new version \u201cswap it to the default version\u201d this detection will be broken since incoming submission will be attached to different orgUnit iaso id.</p>"},{"location":"pages/users/how_to/setup_an_empty_iaso_account/setup_an_empty_iaso_account.html#8-whats-next","title":"8. What's next ?","text":"<ul> <li> <p>Use the Mobile app in the store and provide the appId/user/password</p> </li> <li> <p>Start configuring the iaso forms</p> </li> <li> <p>try to be consistent and future proof in the naming ! </p> </li> </ul> <p>this is good : </p> <p>```  PMA - Qualit\u00e9 01 - Indicateurs g\u00e9n\u00e9raux  PMA - Qualit\u00e9 02 - Plan financier  PMA - Qualit\u00e9 03 - Consultation Postnatale  ...  PMA - Qualit\u00e9 10 - Vaccination  PMA - Qualit\u00e9 11 - Accouchements  PMA - Quantit\u00e9   PCA - Qualit\u00e9 ...</p> <pre><code>\nthis is **BAD** : \n\n</code></pre> <p>PMA - Qualit\u00e9 1 - Indicateurs g\u00e9n\u00e9raux  PMA - qualit\u00e9 10 - Vaccination  PMA - Qualit\u00e9 11 - accouchements  PMA - qualit\u00e9 2 - plan financier  PMA - Qualit\u00e9 3 - consultation Postnatale...  ...  PMA - Quantit\u00e9   Qualit\u00e9 - PCA - ... ``` - computers are really bad at sorting in natural order so prefer 01 02 03 - be consistent in your upper/lower case usage - be consistent by prefixing the entity type (no need to put the country in it, we have limited space in the mobile app)</p>"},{"location":"pages/users/how_to/setup_dhis2_login_in_iaso/setup_dhis2_login_in_iaso.html","title":"Setup login with dhis2 for iaso","text":""},{"location":"pages/users/how_to/setup_dhis2_login_in_iaso/setup_dhis2_login_in_iaso.html#in-dhis2","title":"In DHIS2","text":""},{"location":"pages/users/how_to/setup_dhis2_login_in_iaso/setup_dhis2_login_in_iaso.html#go-in-the-oauth-settings","title":"Go in the oauth settings","text":"<p>in the menu : </p> <pre><code>System settings &gt; Oauth 2 clients\nParametres Systeme &gt; Oauth 2 clients\n</code></pre>"},{"location":"pages/users/how_to/setup_dhis2_login_in_iaso/setup_dhis2_login_in_iaso.html#create-oauth-client","title":"Create oauth client","text":"<p>Name :  <code>iaso</code> Select : authorization code Url : you need to pick a unique code : <code>https://iaso.bluesquare.org/api/dhis2/&lt;&lt;unique-code&gt;&gt;/login/</code></p> <p></p>"},{"location":"pages/users/how_to/setup_dhis2_login_in_iaso/setup_dhis2_login_in_iaso.html#in-iaso-django-admin","title":"In iaso django admin","text":""},{"location":"pages/users/how_to/setup_dhis2_login_in_iaso/setup_dhis2_login_in_iaso.html#create-an-external-credentials-record","title":"Create an external credentials record","text":"<p>In django admin : https://iaso.bluesquare.org/admin/iaso/externalcredentials/</p> <ul> <li>Name : oauth client id</li> <li>Login: the url of the dhis2</li> <li>Password: the oauth client secret</li> <li>Url : iaso</li> </ul> <p></p>"},{"location":"pages/users/how_to/setup_dhis2_login_in_iaso/setup_dhis2_login_in_iaso.html#enable-the-dhis2-link-in-the-iaso-menu","title":"Enable the dhis2 link in the iaso menu","text":"<p>to be able to easily go back to dhis2 add the feature flag \"SHOW_DHIS2_LINK\" on the Project </p> <p></p> <p>then the entry should appear</p> <p></p>"},{"location":"pages/users/how_to/setup_dhis2_login_in_iaso/setup_dhis2_login_in_iaso.html#in-iaso","title":"In iaso","text":""},{"location":"pages/users/how_to/setup_dhis2_login_in_iaso/setup_dhis2_login_in_iaso.html#link-the-iaso-user-with-a-dhis2-user","title":"Link the iaso user with a dhis2 user","text":"<p>in iaso general ui</p> <p></p>"},{"location":"pages/users/how_to/setup_dhis2_login_in_iaso/setup_dhis2_login_in_iaso.html#test","title":"Test","text":"<p>login in dhis2 with the linked in previous step </p> <p><code>&lt;&lt;dhis2&gt;&gt;/uaa/oauth/authorize?client_id=&lt;&lt;unique-code&gt;&gt;&amp;response_type=code</code></p> <p>then \"Authorize\": you should end up in iaso</p> <p>It's not working ?</p> <ul> <li>Did you put the same code in iaso/dhis2/url to login ?</li> <li>The login in iaso external contains the url of the dhis2 ? </li> <li>Are you logged in dhis2 with the user you linked the iaso user ? </li> </ul>"},{"location":"pages/users/reference/iaso_concepts/iaso_concepts.html","title":"Concepts","text":""},{"location":"pages/users/reference/iaso_concepts/iaso_concepts.html#questionnaires-or-xls-data-collection-forms","title":"Questionnaires or XLS data collection forms","text":"<p>What comes with data collection are questions, and to organize these questions, data collection forms. These are basically lists of the questions one would like to collect answers for, while specifying options (mandatory or not, skip a question depending on previous answer, etc.). IASO builds on XLS forms for its questionnaires, which are therefore pre-defined using an Excel file.</p> <p>In IASO, data collection forms are versioned meaning that every time a new version is created, the former version is kept and available in the system. </p>"},{"location":"pages/users/reference/iaso_concepts/iaso_concepts.html#organization-units","title":"Organization Units","text":"<p>IASO uses the notion of Organization Units (Org unit or OU) to manage geographic data.  The organisation unit types (OUT) represent levels in the hierarchy</p> <p>Example:</p> <ul> <li> <p>Country</p> </li> <li> <p>Region</p> </li> <li>District</li> <li>Area</li> <li>Facility/Village/Point of Interest</li> </ul> <p>The organization units are classified in the pyramid according to a parent and one or several children (except the top parent(s) and the lowest child/children).  Example below:</p> <ul> <li> <p>Democratic Republic of Congo (Org unit type \"Country\") is the parent org unit of</p> </li> <li> <p>Kinshasa (Org unit type \"City\"), which is the parent org unit of </p> </li> <li>Bluesquare office (Org unit type \"Office\")</li> </ul> <p>Data collection in IASO is structured according to the defined hierarchy, and any user needs to explicitly select an organization unit before proceeding to opening the questionnaire and answer questions. This way, one makes sure that the data collected is correctly associated with the relevant geography. </p>"},{"location":"pages/users/reference/iaso_concepts/iaso_concepts.html#projects","title":"Projects","text":"<p>In IASO, a Project is a mobile application instance, with its own App ID. Within one account, you can have one or several Project(s) with different feature option(s).  Users can be linked to one or several Project(s). </p> <p>Good to know:</p> <ul> <li> <p>One Project is linked one data source</p> </li> <li> <p>One Project  can be linked to one or several users</p> </li> <li>Some users can be limited to one or several Project(s)/App ID(s) - you can define this in the User management part</li> <li>Every Org Unit Type has to be linked to one or several Project(s)</li> <li>Every Form has to be linked to one or several Project(s)</li> </ul>"},{"location":"pages/users/reference/iaso_mobile/iaso_mobile.html","title":"Mobile Application","text":"<p>IASO mobile application is available on Google Play Store (Android phones only).</p> <p>It can work completely offline - once the end user has encoded the data needed, he/she can upload the data collected offline all at once when network is available.</p> <p>Updates made from the web (forms versions, health pyramid) will be reflected in the App only after the App data has been refreshed and this requires network connectivity.</p> <p>Key tip before testing / using the App - Make sure you have refreshed data beforehand</p>"},{"location":"pages/users/reference/iaso_mobile/iaso_mobile.html#run-the-mobile-application-for-the-first-time","title":"Run the mobile application for the first time","text":"<p>IASO Mobile application has to be configured on the web part before using (see the part \u201cProject\u201d).</p> <p>Then you can:</p> <ul> <li> <p>Download IASO App on Google Play</p> </li> <li> <p>Insert the server url : https://iaso.bluesquare.org</p> </li> <li>Then, enter the App ID </li> </ul> <p></p>"},{"location":"pages/users/reference/iaso_mobile/iaso_mobile.html#overview-of-buttons","title":"Overview of buttons","text":"<p>See below an overview of the main buttons that you can find on the main screen in data collection mode. </p> <p></p> <p>In the More Options part, you can take the below actions: - Refresh data: you need to have internet connectivity to do so. It will synchronize the mobile application with IASO web data. In order to avoid that it takes too long in low-connectivity settings, you can choose to refresh only sub-parts such as Forms, Organization Units, or other.  - Change the App ID: you can switch Project by entering another App ID. In order to make sure that there is no data from the former App ID left on the IASO mobile application, please access your parameters and erase storage and cache data from IASO beforehand.  - Change the URL of the server: this can be handy if you need to switch from Production to Staging server - Logout: your user can logout. This does not prevent data consultation of local data (data available on IASO on the user's device) - About: gives the version of the IASO mobile application. It can be good to have to debug.</p>"},{"location":"pages/users/reference/iaso_mobile/iaso_mobile.html#collect-data","title":"Collect data","text":"<p>Once you are connected to the IASO mobile application, you can then proceed with your data collection. Here below are the different screens that you would see for a simple data collection.</p> <p></p> <p>You will then have data collection form chosen opening. You can proceed with answering the different questions and press \"Next\" until the end of the Form.</p> <p>If you wish to interrupt data collection during input, you can press the back button on the tablet or smartphone.</p> <p>Once you click on the button, you have 2 options: - Save Changes: to save all data already filled and the form with unfinalized status. With this option you can, come back and continue enter data  - Ignore Changes: to delete data filled and the form</p> <p>Upload collected data</p> <p>If you collect data with your mobile device, they are stored in your device. You need to upload data to the server to make them visible at central level. Keep in mind that you need internet connection in order to be able to upload data.</p> <p>Click on the \"Send Finalized Forms\" icon on the mobile application home page on the top right corner.</p> <p></p> <p>Then, a specific page will open to let you know if the data has been correctly uploaded. Finalize the operation by clicking on \"Send to server\".</p> <p></p>"},{"location":"pages/users/reference/iaso_modules/iaso_modules.html","title":"Modules","text":"<p>IASO is organized according to Modules, which are groups of functionalities which can be added up depending on the use case to cover. Here are the Modules available in IASO:</p>"},{"location":"pages/users/reference/iaso_modules/iaso_modules.html#data-collection-functionalities","title":"Data collection functionalities","text":"<ul> <li>Manage data collection forms (XLS forms) and their related data submissions</li> <li>Manage geographic data (import/export of geo data from Excel, DHIS2 or Geopackages, manage the Organizations Units and their hierarchy)</li> <li>Monitor the data collection process with the completeness statistics table and map</li> <li>Manage users and their permissions and geographies, user roles and teams</li> <li>Create mobile application(s) IDs and manage related features options</li> </ul>"},{"location":"pages/users/reference/iaso_modules/iaso_modules.html#georegistry","title":"Georegistry","text":"<ul> <li>Import several data sources from Excel, DHIS2 or Geopackages, compare and merge them as needed</li> <li>Visualize on a dynamic map data collected at the different levels of the hierarchy (e.g. Country, Region, District, facility)</li> <li>Validate changes on Organization Units (Name, Type, GPS coordinates, opening/closing dates) submitted from the field via the mobile application</li> <li>Validate data submitted via data collection forms that are linked to specific Organization Units types, called \"Reference forms\"</li> <li>Based on the validated proposed changes per user, generate payment lots to send to Mobile Money provider</li> </ul>"},{"location":"pages/users/reference/iaso_modules/iaso_modules.html#dhis2-bi-directional-integration","title":"DHIS2 bi-directional integration","text":"<ul> <li>Manage the mappings with DHIS2 data elements for import/export of data</li> </ul>"},{"location":"pages/users/reference/iaso_modules/iaso_modules.html#planning","title":"Planning","text":"<ul> <li>Plan ahead your data collection activities by creating a planning with a set timeframe, geography, data collection forms and teams</li> <li>Assign data collection tasks to teams and users from the map-based interface available on the web</li> <li>Once tasks have been assigned, the mobile application users on the field will only see the forms that have been assigned to them</li> </ul>"},{"location":"pages/users/reference/iaso_modules/iaso_modules.html#entities","title":"Entities","text":"<ul> <li>Entities are items that can move from a geography to another, for instance a person, a pallet of goods, or other</li> <li>Entities can be created from the mobile application and then managed from the web application</li> <li>Find the entities duplicates by using the web application interface and make the decision to merge two similar entities or not</li> <li>Assign workflows to entity types, enabling specific data collection forms to open according to previsouly given answers</li> </ul>"},{"location":"pages/users/reference/iaso_web/user_guide.html","title":"Web Platform","text":"<p>IASO web platform is intended to administrators for them to define the details of the data collection they would like to proceed with. Some key assets of IASO are:</p> <ul> <li> <p>the versioning of all data - every change is tracked and former versions can be retrieved as needed</p> </li> <li> <p>geo-structured data collection - forms are linked to clear Geographical levels or \"Organization Units\"</p> </li> <li> <p>the traceability of changes - allowing decentralization of the activities and responsibilities Administrators can therefore use the web platform to plan, monitor and then evaluate the data collection efforts.</p> </li> </ul>"},{"location":"pages/users/reference/iaso_web/user_guide.html#login","title":"Login","text":"<p>To log into the web interface, go to https://iaso.bluesquare.org/login/ and sign in with your username and password.</p> <p></p> <p>You can also reset your password by clicking on the link \"Forgot password\". This will send an automatic email and allow you to create a new password. </p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#navigating-in-iaso","title":"Navigating in IASO","text":""},{"location":"pages/users/reference/iaso_web/user_guide.html#manage-data-collection-forms","title":"Manage data collection forms","text":""},{"location":"pages/users/reference/iaso_web/user_guide.html#forms-list","title":"Forms list","text":"<p>From the forms list, you can search through the available forms of the IASO account you are connected to using the filters:</p> <p></p> <p>The below buttons allow you to manage the data collections forms.</p> <p></p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#createupload-a-data-collection-form","title":"Create/Upload a data collection form","text":"<p>Access the Forms entry in the menu, then click on Form list.  Click on the button \"Create\". Once on the Form creation page, follow the below steps:</p> <ul> <li>Enter a name for your form in the field \"Name\". </li> <li>Assign one or several Project(s) to your form. </li> <li>Assign an Org unit type to your form. </li> <li>Assign a Period to your form. This is intended for regular data collection (e.g. daily/weekly/yearly). If you don't need this option, just select \"No Period\".</li> </ul> <p></p> <p>Tips:</p> <ul> <li>Check your XLS form before uploading it to IASO using this link: https://getodk.org/xlsform/</li> <li>Form ID should stay the same across versions (it cannot be different from a version to another). You will have an error if this is the case.</li> <li>Form version (which is not a mandatory field in the settings of the XLS forms) should stay consistent across versions. For instance, if it is a date such as 20240410, then you will not be able to upload a version names 20231025. IASO makes automatic checks to ensure that you are not uploading a former version.</li> </ul>"},{"location":"pages/users/reference/iaso_web/user_guide.html#form-submissions","title":"Form submissions","text":"<p>Once a form has been completed and sent to the server, it creates a \"form submission\". Every form submission is recorded into the platform and data submitted can be consulted from there. You can use the filters to consult the form submissions as needed:</p> <ul> <li>Open search (type some key words)</li> <li>Per form</li> <li>Per Org unit (select the relevant one in the dropdown pyramid)</li> <li>Per Org unit type (e.g. Country, District, Village)</li> <li>Per submission date (creation from/creation until)</li> <li>Per user (type a user name and it will show as dropdown)</li> </ul> <p>This view allows you to search forms through free text entry and several filters that can be combined. </p> <p></p> <p>Once you have applied at least one form filter, you can download submissions using the \"CSV\" or \"XLSX\" buttons.</p> <p>You can also create a new submission by clicking on \"Create\". This will open Enketo and ask you which Organization Unit it relates to.</p> <p></p> <p>You can also check the submissions on the map view, on which the filters apply. To make sure to have this map view enabled, make sure you have added the feature flag \"GPS for each form\" to the related Project.</p> <p></p> <p>The tab \"File\" allows you to visualize the files that have been submitted together with the forms, such as pictures. When clicking on a given file, you can then be redirected to the relevant form submission. </p> <p></p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#manage-submissions","title":"Manage submissions","text":"<p>On the Submissions page, you can see the list of submissions that have been done for the account. You can manage them using the below options.</p> <p></p> <p></p> <p>Visualise a submission</p> <p>You can view a specific submission/submitted form by clicking on the \"View\" button (see above).</p> <p>This allows you to see the data submitted and edit it on Enketo (open-source web application.</p> <p></p> <p>The \u201cInformation\u201d section provides a technical overview of the form.</p> <p>The \u201cLocation\u201d section shows the health pyramid's indication of where the data was collected.</p> <p>The \u201cExport Requests\u201d section shows when the data was exported to DHIS2, by whom, and any errors that occurred during export.</p> <p>The \u201cFiles\u201d section can contain images, videos, documents.</p> <p>The \u201cForm\u201d section shows all form questions and answers entered during data collection.</p> <p>Download a submission</p> <p>The \"XML\" icon allows you to download a submission in XML format.</p> <p></p> <p></p> <p>The gear icon on the bottom corner at the right hand side shows you a series of icons upon hover. These allow you to:</p> <ul> <li>Delete a submission</li> <li>Edit attached Org Unit or Period</li> <li>Export (e.g. to DHIS2)</li> <li>Push GPS coordinates from the submission to the Org Unit</li> <li>Edit this submission via Enketo</li> <li>Lock submission</li> </ul> <p>See below the dedicated sections for more information on each of these actions.</p> <p>Delete a submission</p> <p>Allows you to delete the form. If it has already been exported to DHIS2, this will not delete the data in DHIS2. A warning message will appear:</p> <p></p> <p>Edit attached Org Unit or Period</p> <p>When you click on \u201cEdit Period and/or Organisational Unit\u201d, a window opens allowing you to reassign the instance. You can change the time period or organization unit that has been assigned to the submitted form.</p> <p></p> <p>Export a submission</p> <p>The export function allows you to export the form to DHIS2. Beforehand, it needs to have been mapped using the DHIS2 mapping functionality. </p> <p>Edit the submission via Enketo</p> <p>To edit a form, click on the Enketo icon (see above).</p> <p>Edit the form by changing the answers to the questions that need to be changed. Then click on submit at the bottom of the form.</p> <p></p> <p></p> <p>Push GPS coordinates from the submission to the Org Unit</p> <p>This will use the GPS coordinate collected via the form to push to the Organization Unit GPS coordinates.</p> <p>Lock submission</p> <p>This functionalty allows you to protect the form submissions from further editing by users who have less permissions than you.</p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#form-statistics","title":"Form statistics","text":"<p>This view allows you to see statistics about the forms. When clicking on \u201dForm Statistics\" you will open a page with two graphs.</p> <p>The first one shows the total number of submissions over time and the second one shows the new submissions per month per form.</p> <p></p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#dhis2-mappings","title":"DHIS2 mappings","text":"<p>A great advantage of IASO is that you can export data to DHIS2. When doing so, prior mapping is necessary. After the form is uploaded, map the form to match the data item in DHIS2. </p> <p>Click on DHIS mappings to see the forms :</p> <p></p> <p>In the Form view you can see details of:</p> <ul> <li> <p>Actions</p> </li> <li> <p>Name of forms available for mapping</p> </li> <li> <p>Versions</p> </li> <li> <p>Type of the form :</p> <ul> <li> <p>Aggregate : fix</p> </li> <li> <p>Event : series of singular events</p> </li> <li> <p>Event Tracker : continuous</p> </li> </ul> </li> <li> <p>Number of questionnaire to be mapped</p> </li> <li> <p>Total number of questionnaires</p> </li> <li> <p>Mapping coverage</p> </li> <li> <p>Date of last modification</p> </li> </ul> <p>Click \"Create\" and a window will open allowing you to map each questionnaire of the xls forms to the correspondent DHIS2 data element</p> <p>The mapping process consists of selecting a question on the left and deciding whether it should be mapped to DHIS2 or not.</p> <p>Some questions may not need to be mapped like notes, metadata etc. in such a case click on never map.</p> <p>If the question is to be mapped, search for the correspondence DE in the box by using the name, code or ID and then confirm.</p> <p>Once confirmed, the question will turn to green and be counted.</p> <p></p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#completeness","title":"Completeness","text":"<p>This functionality is intended to use cases where Periods have been set to the data collection forms. In the view \u201ccompleteness\u201d you will see details of :</p> <ul> <li> <p>Buttons to select forms \u201cready\u201d to be exported, form with \u201cerrors\u201d     &gt; and forms that have been \u201cexported\u201d</p> </li> <li> <p>Periodicity filter : the periodicity filter allows you to organise     &gt; the data into months, quarters, semesters or years. The list will     &gt; display the forms available for the selected period, and will     &gt; indicate how many forms have been submitted for each</p> </li> <li> <p>Synchronise button to synchronise two forms</p> </li> </ul> <p>Click on each of these buttons to have forms ready to be exported, errors and exported. A periodicity filter is there to organise data in months, quarters, semester or yearly.</p> <p></p> <p>If you click on the number of submissions, you will be taken to the submissions view, where you can click on the view icon and see the submissions for that form.</p> <p>Click on the button to synchronise two forms</p> <p>Eg: to get aggregate data from community verification survey, all the client forms should be synchronised to a single form. </p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#completeness-statistics","title":"Completeness statistics","text":"<p>This table view shows you the completeness of the forms submissions in number (number of completed forms) and in percentages (Data completeness). A distinction is made between \u201cdirect forms\u201d (which relate to the select Organization unit level) and \u201clower level forms\u201d (which relates to forms down the hierarchy).</p> <p>Use the filters (Form name, Parent Organization Unit, Organization Unit type, User, Planning, Teams, Period) to only see statistics in a more specific way.</p> <p>The \"See children\" action button allows you to drilldown the geographical hierarchy to identify the level of completeness and spot where issues may have happened. </p> <p>The first two columns \"itself\" indicate the number of forms completed at the level of the Organization Unit highlighted. The next column \"descendants\" give information on the number of forms completed at the level in question, but also at all lower levels.</p> <p></p> <p>You can also view data completeness with a map view by clicking on the \"Map\" tab. Be aware that you need to select a Form in the filters beforehand to enable this view. You can adjust the thresholds to apply to the legend on completeness in the relevant form's advanced settings.</p> <p></p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#georegistry-organization-units-management","title":"Georegistry - Organization Units Management","text":"<p>See the Organization Unit definition for more insight on what Organization Units are. In a nutshell, you can manage your geographical data associated to your account using the Organization Unit part of IASO.</p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#organization-units-list","title":"Organization Units List","text":"<p>Click Organization Units in the menu and then on Organization Unit List to navigate the organization unit pyramid.</p> <p>You can view in list or map.</p> <p>You can select an Organization Unit Navigation and:</p> <ul> <li>Change the name, type, validation status, place in the pyramid, etc. of the OU</li> <li>Visualize the OU on a map</li> <li>See the history of its modifications</li> </ul> <p></p> <p></p> <p>The search results can be exported in CSV, XLSX or GPKG.</p> <p></p> <p>Results can be seen in a list or on a map</p> <p></p> <p>The status for when a village has just been added and needs to be reviewed for example.</p> <p>The external reference is used to export data to DHIS2.</p> <p>The map helps you to know where the structure is located.</p> <p>You can see the history of modifications by clicking on the little clock icon or the details of the filled forms by clicking on the eye icon.</p> <p></p> <p>Several searches can be made by adding tabs to the page with the + button. </p> <p>You can choose the colour of the results on the map for each search.</p> <p></p> <p></p> <p>Creation of an Organization Unit</p> <p>On the Organization Unit list page, click on \"Create\". You can then create an Organization Unit as needed. </p> <p></p> <p>You will need to enter the below information before saving:</p> <ul> <li>Name of the Organization Unit</li> <li>Type of the Organization Unit (that you would have previously defined in the Organization Unit Type part)</li> <li>Status: New, Validated, or Rejected. <ul> <li>New: the Organization unit has been created but has not been validated yet. If you activate the possibility to create Organization Units from the IASO mobile application, they will first appear as \"New\" on the web</li> <li>Validated: the Organization unit is validated</li> <li>Rejected: the Organization unit no longer exists or has been merged/split or replaced by another one. IASO does not allow to erase Organization Units in order to keep track of past changes.</li> </ul> </li> </ul> <p>Optional fields:</p> <ul> <li>Aliases: you can add as many aliases as necessary to track the different ways of writing the name of the Organization Unit (e.g. \"Ste Marie\", \"Sainte-Marie\", \"Sainte Marie\", etc.)</li> <li>Group: you can organize Organization Units in Groups in IASO. You can multi-select the group(s) that the organization unit you are creating is associated to</li> <li>Parent Org Unit: place your Organization Unit at its relevant place in the hierarchy</li> <li>Opening and/or Closing date(s): use these fields to indicate the opening or closing date(s) of the Organization Unit</li> </ul> <p>Edit an Organization Unit or consult details</p> <p>To access the detailed view of an Organization Unit, proceed as described below: </p> <p></p> <p>In this view, you have a set of tabs that allow you to edit the Organization Unit as needed:</p> <ul> <li>Infos: edit the main information relating to this Organization Unit</li> <li>Map: consult the geographical information available for this Organization Unit (boundaries or GPS coordinates). You can view geographical data across data sources (if there are several sources). You can also leave a comment</li> <li>Children: lists this Organization Unit's children. You can use filter to go through the list in a more detailed way </li> <li>Links: in the case of matching an Organization Unit across multiple data sources, the links among the data sources can be found here</li> <li>History: allows you to trace back all modifications that were done to the Organization Unit by user</li> <li>Forms: lists all data collection forms that are linked to the Organization Unit type of this Organization Unit</li> <li>Comments: you can leave a comment about this Organization Unit using this section</li> </ul> <p>Bulk edition of Organization Units</p> <p>You can also edit Organization Units in bulk.  In order to do this, from the Organization Unit list, tick the boxes of the Organization Units you would like to bulk edit, then hover on the action button. Click on the gear action button, and select the action you would like to perform. </p> <p></p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#organization-unit-groups","title":"Organization Unit Groups","text":"<p>Organisation units can be grouped in organisation unit groups, and these groups can be further organised into group sets. Together they can mimic an alternative organisational hierarchy which can be used when creating reports and other data output. In addition to representing alternative geographical locations not part of the main hierarchy, these groups are useful for assigning classification schemes to Organization Units. </p> <p></p> <p>Manage Organization Unit Groups</p> <p>In order to manage the Organization Unit Groups, access the menu entry Organization Units &gt; Groups. </p> <p></p> <p>This view allows you to search the Organisation Unit Groups through free text entry. </p> <p>You can create a new group  by clicking on the create button. </p> <p>Groups can be edited by clicking on the gear icon or deleted by clicking on the delete button.</p> <p>In the table, the column \"Org Units\" shows the number of Organization Units that are assigned to this group. When you click on the number, you will see the list of that Org Unit group.</p> <p>Assign Organization Units to Groups</p> <p>To assign Organization Units to Groups, go to the Organization Units List view from the menu and make a bulk edit of the selected organization Units. See above in section \"Bulk edition of Organization Units\" for more details on bulk edition of Organization Units.  </p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#organization-unit-types-management","title":"Organization Unit types management","text":"<p>Organization Unit types are specific to IASO (i.e. this is not handled in DHIS2). See the part about Organization Units for more details on what Organization Unit types are.</p> <p>From the Organization Unit menu entry, click on \"Organization Unit types\". This view lists the Organization Unit types existing in your IASO account. </p> <p>Create an Organization Unit type</p> <p>Click on \"Create\" and enter the below mandatory fields:</p> <ul> <li>Name of the Organization Unit type. Beware that this should be the \"category\" / \"level in the hierarchy\", NOT the specific name of an Organization Unit. E.g. \"Country, \"Province\", \"District\", and NOT \"DRC\", \"Kinshasa\", \"Gombe\"</li> <li>Short name: this will appear on other IASO views. It should be a short version of the full name </li> <li>Project(s): select one or multiple project(s) the Organization Unit type is linked to</li> </ul> <p>These other fields are not mandatory:</p> <ul> <li>Level: start with 0 for the highest point in the hierarchy, for instance \"Country\". E.g. Country - 0, Province - 1, District - 2, Village - 3</li> <li>Sub org unit types to display: select the below Org Unit type(s) that you would like to display on the Registry view if this main Org Unit type that you are editing is selected.</li> <li>Sub Org unit types to create: select the Org Unit type(s) that you would like to enable the creation for in the IASO mobile application. For instance, if you are editing the Org unit type \"District\", you can enable the creation of \"Village\" and/or \"Point of Interest\"</li> <li>Reference forms: select one or several data collection Form(s) that will be assigned as reference for this Org Unit type. Reference forms are Forms that are closely linked to the Org Unit type. A typical use case is for an Area to assign a reference Form for Population data. </li> </ul> <p></p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#data-sources-management","title":"Data Source(s) management","text":"<p>IASO allows to import and handle one or several geographic data source(s). </p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#data-sources-list","title":"Data Source(s) List","text":"<p>Find here the data sources with their names, versions and descriptions. It is possible to edit the data source, check up on the files\u2019 version history or compare data sources and export them to DHIS2.</p> <p></p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#matching","title":"Matching","text":"<p>This is rather a \"geospatial\" functionality : to have several geographical pyramid sources and try to make links (Example: where in a csv \u201cprovince x\u201d is called \"PROVINCE X\" and in another source it is called \"DPS X\").</p> <p>The algorithms run part is intended for data science work.</p> <p></p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#registry","title":"Registry","text":"<p>The Registry entry in Organization Unit is a visualization tool allowing users to drilldown in the geographical hierarchy and consult the geographical data as well as data collection associated to the different level(s). </p> <p></p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#review-change-proposals","title":"Review change proposals","text":"<p>With IASO, supervisors can compare and validate data submissions as they are sent to the server.  Note that this feature will only work provided that you have activated the \"Change requests\" feature flag on the IASO Project you would like to validate data collected for. See the Projects part for more information on mobile feature flags in IASO.</p> <p>On the Review change proposals page, users can use the filters to select the proposals they would like to focus on. See on the picture below the detailed filters.</p> <p></p> <p>Supervisors can then click on the gear icon at the end of the relevant line to be able to see the details of the change proposal submitted and compare with the former version on the left.</p> <p></p> <p>Supervisors can then select the changes they would like to approve by ticking the boxes of the changes selected on the right column, and then hit \"Approve selected changes\". If the changes proposed are not satisfactory, supervisors can reject all changes and provide a comment.</p> <p>For each change proposal sent, IASO mobile application users will be able to see if they have been approved or rejected, and if rejected, consult the comment. </p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#planning","title":"Planning","text":"<p>The Planning feature in IASO allows you to plan field work per team and user in defined zones/organization units and according to a specific timeline. Once data collection activities would have been assigned via the interface, field agents using the mobile application would only be able to see the activities assigned to them, and navigate towards the relevant GPS point(s). </p> <p>In order to be able to create a Planning, you will need to have created beforehand Organization units, Users, a Project, Teams of Users/Teams of Teams and data collection Forms for which you would like to use the Planning feature.</p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#planning-list","title":"Planning List","text":"<p>Click on Planning in the menu panel. Under Planning List you will see the list of schedules/plannings that have been created in IASO. You can search through the different Plannings using the different filters and take the below actions:</p> <ul> <li>Create Planning</li> <li>View Planning: this is where you will access the interface to assign data collection activities to Teams and Users according to geographies</li> <li>Edit Planning: edit the Name, Project, Parent Organization Unit and Team it applies to, Form(s), Description</li> <li>Duplicate Planning: allows users to copy an existing Planning and readapt it as needed</li> <li>Erase Planning</li> </ul> <p></p> <p>Create a Planning</p> <p>Click on \"Create\" and you will see the below window opening:</p> <p></p> <p>The below fields are mandatory:</p> <ul> <li>Name</li> <li>Project: defines in which mobile app environment the Planning info will be visible</li> <li>Team: it is the team responsible for the planning - this is usually a Team of Teams</li> <li>Form(s): select one or several Form(s) to apply to this Planning </li> <li>Org unit: select the base Organization Unit your Planning applies to. Keep in mind that you will drilldown from this base Organization Unit to assign your data collection activities to Teams/Users. </li> <li>start and end dates for your Planning</li> </ul> <p>You can add a description as an option. </p> <p>The \u201cPublishing status\u201d (in the lower left corner) feature makes it possible to ensure, once completed (and all assignments made), the newly created planning will be available in the IASO mobile app for the relevant project.</p> <p>Once you have completed the fields, click \"Save\" to finish.  </p> <p>Click on the eye icon button from the Planning list to start editing your new Planning via the Map interface.</p> <p>You can do the assignment either through the \u201cMap\u201d or the \u201cList\u201d tab. If processing through the map, first select the Team you would like to assign a geography to in the dropdown, as well as the relevant \u201cBase Org Unit type\u201d in the dropdown. You can then start assigning geographic areas or points directly to the selected Team members directly on the map.</p> <p></p> <p>Selected areas will be highlighted with the team\u2019s colour, that you can change as needed. </p> <p>In order to assign all children Org Unit of a given parent Org unit to the same Team/User, you can select the \"Parent picking mode\" before proceeding to your selection.</p> <p></p> <p>If you prefer using the List tab, the process is pretty similar. The main difference being that you work here with a list of names, according to the selected level. Org units are assigned by clicking in front of the item name, in the \u201cAssignment\u201d column.</p> <p></p> <p>You can sort Org units and Parents by clicking on the column name.</p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#admin","title":"Admin","text":"<p>The Admin part of IASO comprises several parts, which will appear or not depending on the user's permissions:</p> <ul> <li>Tasks</li> <li>Monitoring</li> <li>Projects</li> <li>Modules</li> <li>Users</li> <li>User roles</li> <li>Teams</li> </ul>"},{"location":"pages/users/reference/iaso_web/user_guide.html#tasks","title":"Tasks","text":"<p>This is the IASO batch updates log. An operation log contains information about when and where an operation ran, the operation status, the number of source and target records processed, and any log messages.</p> <p>Examples of tasks include:</p> <ul> <li>Organization unit bulk update</li> <li>DHIS2 data import</li> <li>Geopackage import</li> </ul> <p>The statuses are:</p> <ul> <li>Errored: the Task did not make it through. Users are advised to try again.</li> <li>Running: the Task is in process</li> <li>Queued: the Task has stopped and will restart if the conditions are met (for instance, if there is better connectivity)</li> <li>Killed: the Task was interrupted by the user after it had been started</li> <li>Success: the Task has been successfully run</li> </ul> <p>The Task list can be refreshed by pressing the button \"Refresh\" on the right top hand side. </p> <p></p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#monitoring","title":"Monitoring","text":"<p>This part allows supervisors to monitor devices that are linked with the IASO account.  From this page, you can consult:</p> <ul> <li>The IMEI or device identifier</li> <li>If this is a test device or not</li> <li>the name of the last owner</li> <li>the last time it has been synchronized</li> <li>the creation date (first time it has been synchronized)</li> <li>the modification date</li> </ul> <p>On the right hand side, you can see the number of devices that are connected under the IASO account you are connected to.</p> <p></p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#projects","title":"Projects","text":"<p>A Project in IASO relates to an instance of mobile application.  Each Project is identified by a Name and an App ID. See here for a more detailed definition of Projects in IASO.</p> <p>Create a Project</p> <p>From the menu, Admin &gt; Projects &gt; Click on \"Create\"</p> <p></p> <p>Then, add a Project name, and an App ID.  Be aware that the App ID will have to be entered by IASO mobile application users the first time they connect to the IASO app, so it should not be overly complicated to avoid typing errors. </p> <p>You can then select the Feature flags you would like to apply to your Project in the next tab and press \"Save\". </p> <p></p> <p>Feature flags definition</p> <p>See the table below for more details on the Project Feature flags:</p> Feature flag Description Authentication Users have to enter their login and password on the mobile application before proceeding to the data collection. Please note that this is possible in IASO to proceed to data collection without authentication for simplified processes (also called \u201canonymous mode\u201d) Mobile: show data collection screen Enable the feature to collect data from the IASO mobile application (data collection that is not linked to a planning or a change request workflow) GPS for each form Every time a data collection form is submitted, a GPS point is automatically taken and associated to the form submission Enforce users are within reach of the org unit before starting the form IASO mobile application users have to be close (50m) to the organization unit GPS point they are collecting data for in order for the form to open Mobile. Show planning screen When a planning has been done in IASO via the web interface, the assigned data collection points and tasks are reflected via this tab Mobile: limit download of org unit to what the user has access to When loading data into the mobile application, only the geographical zone that is assigned to the user is downloaded, so as to enable offline use. This allows a lighter (and then quicker and less data-consuming) download of data at the start of the IASO mobile application Mobile. Show Map of org unit Adds a tab in the mobile application to show the geographic information available for the selected Org Unit in the mobile application. For instance, if a GPS coordinate is available for a health facility, it would show on the map via this tab Request changes to org units Enable the feature to propose changes to org units and their related reference form(s) Mobile: Change requests Adds the tab allowing to propose changes to org units and their reference form(s) GPS for trajectory Enable the user to activate a function that track their position every 15 minutes over a period of time Mobile. Warn the user when forms have been updated When new form versions have been uploaded on the web, the IASO mobile application user is notified. Then the user can choose to apply them or not Mobile. Warn the user when forms have been updated and force them to update When new form versions have been uploaded on the web, the IASO mobile application user is notified and the update happens automatically Mobile. Warn the user when the org units have been updated When changes to the Org units (health pyramid) have been done on the web, the IASO mobile application user is notified. Then the user can choose to apply them or not Mobile. Warn the user when the org units have been updated and force them to update When changes to the Org units (health pyramid) have been done on the web, the IASO mobile application user is notified and the update happens automatically Auto upload of finalized forms The synchronization of forms that have been filled takes place automatically as soon as the user has connectivity Mobile. Finalized forms are read only IASO mobile application users cannot edit the forms once finalized in the mobile application"},{"location":"pages/users/reference/iaso_web/user_guide.html#users","title":"Users","text":"<p>Users can access IASO web and mobile application with login credentials. Each user is assigned permissions and can be limited by location.</p> <p>Permissions are relatively granular: - By screen/tab - Different read/write permissions for important domains - Restriction of access using the health pyramid - Batch creation/modification of users - Customizable user roles (Administrator, Data manager, etc.)</p> <p>Please note that the permissions assigned from the User management apply to IASO web only. IASO does not have a system of permissions for its mobile application, but rather a set of Feature Flags. </p> <p>Create a new IASO user</p> <p>From the menu Admin &gt; Users, click on \"Create\". </p> <ol> <li>Fill in user information</li> </ol> <p></p> <p>Note that you can also indicate the following information:</p> <ul> <li>DHIS2 id of the user: you can import a list of DHIS2 users to IASO and keep track of their DHIS2 id in IASO to link then across both systems</li> <li>Home page: you can set up a default landing page for that user when connecting to this IASO account</li> <li>Projects: select one or several Project(s) to which the newly created user will be linked. If there is no Project indicated here, the user will have access to all Projects of the IASO account by default.</li> <li> <p>Language: you can specify in which default language this user will use IASO web. IASO mobile application is based on the default language of the users's device.</p> </li> <li> <p>Assign user permissions</p> </li> </ul> <p>On the next tab \u201cPermissions\u201d, you can enable/disable permissions for that user as needed. Note that in the \u201c?\u201d are tooltips to explain what the permissions do. </p> <ol> <li>Restrict user to a specific Location</li> </ol> <p>On the last tab \"Location\", you can restrict the access of the user you are editing to a sub-part of the Organization Unit hierarchy (hence the user will only be able to see data relating to his/her Geography). If no Location is specified here, by default the user will see all data available across the entire hierarchy.</p> <p></p> <p>Create users in bulk</p> <p>You can create several users at once using a CSV file that you import to IASO.</p> <p>Use the button \u201cCreate from file\u201d and you can then import your list of users (or download the relevant template to do so beforehand). </p> <p>Manage IASO users</p> <p>This view allows you to manage users and their permissions. You can search for a user using the different filters.</p> <p></p> <p>You can edit IASO users in bulk using the bulk update feature. First, tick each user you would like to update using the check boxes on the right side of each user line. </p> <p></p> <p>Then select the action(s) you would like to perform for these users. They can be:</p> <ul> <li>Add or remove from user role(s)</li> <li>Add or remove from Project(s)</li> <li>Add or remove from Team(s)</li> <li>Update default language</li> <li>Add or Remove Location (hence limiting these users to the selected Geography)</li> </ul> <p>Click on \"Validate\" when done. </p> <p></p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#user-roles","title":"User roles","text":"<p>User roles allow to group users that are granted a set of permissions under the same role. In the User role, you are able to create User roles with their matching permissions, to which Users can be assigned to.</p> <p>Create a User role</p> <p>From the Admin &gt; User roles page, click on \"Create\".</p> <p></p> <p>You can then assign this user role to any user through the Permission tab in the User edit popup. Be aware that the User role permissions will apply to the user, but if the User has more permissions that had been previsouly assigned to him/her, he/she will not lose them but they will add up. </p> <p></p> <p>To assign multiple Users to this newly created user role in bulk, go back to the Users list and proceed to a bulk update (see Manage Users above).</p>"},{"location":"pages/users/reference/iaso_web/user_guide.html#teams","title":"Teams","text":"<p>The notion of Teams in IASO is used mainly for the Planning feature. It allows to organize Users in Team hierarchies and assign data collection activities to the relevant geographies as needed for the Planning purposes. </p> <p>There are two types of Teams:</p> <ul> <li>Teams of Users: gathers IASO Users under the same team </li> <li>Teams of Teams: gathers several Teams under a same Team. You can then create hierarchies of Teams</li> </ul> <p>Create a Team</p> <p>From the menu, access Admin &gt; Teams. Click on \u201cCreate\u201d</p> <p></p> <p>Fill out the below fields:</p> <ul> <li>Team name</li> <li>Manager: select from the Users in IASO</li> <li>Project: select the Project to be linked to this Team</li> <li>Type: select in the dropdown the type of Team<ul> <li>If you select \"Team of Users\" - then select the Users to be added to that Team</li> <li>If you select \"Team of Teams\" - then select the Teams to be added to that Team</li> </ul> </li> <li>Parent: select the Parent Team for this newly created team</li> </ul> <p>You can then use the gear or bin icon on the main page to edit or delete Team(s) as needed. </p>"},{"location":"pages/users/reference/interop/interop.html","title":"Interoperability roadmap 2023-2024","text":""},{"location":"pages/users/reference/interop/interop.html#introduction","title":"Introduction","text":"<p>Iaso, whose name was taken from the name of a Greek goddess for health, has initially been developed to support national health programmes in their data collection and organization of geographical information in remote and low connectivity areas. Since then, it has also been used in other fields, such as education and environmental projects.</p> <p>Iaso builds on three essential concepts users, forms (in XLSForm format) and org units (e.g. districts and facilities) with a focus on structuring data collection along geographic lines to allow for splitting responsibility geographically, as is commonly done in health programs. This allows to decentralize monitoring, validation and team management. It also allows to have out of the box completeness reporting for data collection.</p> <p>Iaso has been recognized as a Global Good for Health by Digital Square. As such, Bluesquare acknowledges the importance of making Iaso as interoperable as possible in order to facilitate data exchange within the global digital health ecosystem such as the Open Health Information Exchange (OpenHIE) community.</p>"},{"location":"pages/users/reference/interop/interop.html#open-standards-already-implemented","title":"Open standards already implemented","text":"<p>The below below standard technologies are already being used by Iaso today:</p> <ul> <li> <p>Data collection: XLSForm, CSV</p> </li> <li> <p>Geographical data: geopackage</p> </li> </ul> <p>Iaso data collection can be done through forms in the common XLSForm format used for example by ODK, and allows to import and export data to DHIS2 (thanks to a user-friendly mapping interface), which is not per se using open formats in general, but is a de facto standard in some health topics, DHIS2 being probably the most installed open source health information management system.</p> <p>Iaso allows imports and exports of geographical data through the geopackage format (http://www.geopackage.org/) which is the relatively new golden standard for Geographical Information Systems.</p>"},{"location":"pages/users/reference/interop/interop.html#interoperability-roadmap","title":"Interoperability roadmap","text":"<p>1. Short-term (by end of 2023)</p> <ul> <li>DHIS2 Tracker data import/export</li> </ul> <p>Recently, we implemented case management features in Iaso, which is mainly the possibility to collect and store data about individuals. One goal will be to further develop the integration between Iaso and DHIS2 Tracker, to allow the import and export of data linked to individuals.</p> <ul> <li>FHIR</li> </ul> <p>In the same context as above, Bluesquare would ensure that Iaso is compatible with the FHIR standard for health care data exchange. That said, Iaso is a generic data collection tool, and consequently we can\u2019t enforce that collected data always uses a predefined set of fields. Consequently, support of FHIR for case management would be made on a project basis, and where Bluesquare could help is by providing documentation of how to implement some parts of the FHIR standard.</p> <p>On the other hand, Iaso is a very complete facility list management system and here, there is a very good opportunity to adopt OHIE facility registry standards. This will be studied by the end of the year and implemented if we can identify a project needing the feature.</p> <p>2. Long-term (end of 2023 and beyond)</p> <ul> <li>Better sharing of documentation about Iaso</li> </ul> <p>Iaso\u2019s code and general information is published on the dedicated Github repository that you can find here: https://github.com/BLSQ/iaso/wiki</p> <p>Bluesquare has started to organize processes to ensure more easily accessible documentation about Iaso, that will benefit the open source health softwares community. An evolving user guide will be made available on https://readthedocs.org/, together with more technical documentation on new features. A high-level roadmap on next features will also be published and maintained.</p> <p>To facilitate interoperability, we are in the process of publishing the api specification in the OpenAPI standard (the format used by the Swagger tool).</p> <ul> <li>Microplanning</li> </ul> <p>Iaso is growing more and more to be a planning system, e.g. for vaccination campaigns. We need to investigate if there are existing standards (outside of calendar standards like caldav) , especially in the OHIE specification that could be reused to expose our plannings to external systems.</p> <ul> <li>Logistics</li> </ul> <p>There is a growing demand for Iaso to be able to handle logistics, in order to monitor stocks of certain health-related or other supplies, such as vaccines, mosquito nets in certain locations. If Iaso would further develop features in this field, Bluesquare will make sure to follow the openHIE \u201cLogistics Management Information System (LMIS)\u201d and \u201cProduct Catalogue\u201d components principles.</p>"},{"location":"fr/AWS-Deployment.html","title":"AWS Deployment","text":""},{"location":"fr/AWS-Deployment.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/index.html","title":"Bienvenue dans la documentation d'IASO","text":""},{"location":"fr/index.html#introduction-a-iaso","title":"Introduction \u00e0 IASO","text":"<p>IASO est une plateforme innovante, open-source, bilingue (EN/FR) de collecte de donn\u00e9es \u00e0 fonctionnalit\u00e9s g\u00e9ospatiales avanc\u00e9es pour planifier, surveiller et \u00e9valuer les programmes de sant\u00e9, environnementaux ou sociaux dans les pays \u00e0 revenu faible et interm\u00e9diaire (PRFI). IASO est reconnu comme un Bien Public Num\u00e9rique par l'Alliance des Biens Publics Num\u00e9riques et figure parmi les logiciels Global Goods de Digital Square, t\u00e9moignant de son utilit\u00e9 publique.</p> <p>IASO comprend :</p> <ul> <li>un tableau de bord web - destin\u00e9 aux superviseurs pour organiser la collecte de donn\u00e9es et la gestion des donn\u00e9es g\u00e9ographiques</li> <li>une application mobile qui fonctionne \u00e9galement hors ligne - destin\u00e9e aux utilisateurs sur le terrain pour remplir des formulaires et envoyer des donn\u00e9es lorsque le r\u00e9seau est disponible</li> <li>une interface de correspondance et de script pour analyser, comparer et fusionner plusieurs sources de donn\u00e9es g\u00e9ographiques</li> <li>une int\u00e9gration bidirectionnelle avec DHIS2, le syst\u00e8me d'information de gestion de la sant\u00e9 largement utilis\u00e9 dans les PRFI</li> </ul> <p>En termes de fonctionnalit\u00e9s, IASO peut \u00eatre r\u00e9sum\u00e9 autour de quatre composantes principales qui sont interconnect\u00e9es et renforcent leurs capacit\u00e9s mutuelles :</p> <ul> <li> <p>Gestion des donn\u00e9es g\u00e9ospatiales (G\u00e9oregistre)</p> <ul> <li>G\u00e9rer plusieurs listes d'unit\u00e9s d'organisation (par exemple, zones de sant\u00e9, districts, \u00e9tablissements de sant\u00e9 ou \u00e9coles) y compris leurs coordonn\u00e9es GPS et fronti\u00e8res</li> <li>Suivre les modifications apport\u00e9es aux unit\u00e9s d'organisation</li> <li>Comparer plusieurs sources de donn\u00e9es g\u00e9ographiques</li> <li>Proposer des modifications aux unit\u00e9s d'organisation depuis l'application mobile IASO et les valider sur le web</li> </ul> </li> <li> <p>Collecte de donn\u00e9es g\u00e9o-structur\u00e9es</p> <ul> <li>Cr\u00e9er des formulaires de collecte de donn\u00e9es en utilisant le populaire format XLS et les importer dans IASO</li> <li>Lier vos formulaires \u00e0 un ou plusieurs types d'unit\u00e9s organisationnelles (par exemple, National/R\u00e9gional/District/\u00c9tablissement de sant\u00e9) pour structurer g\u00e9ographiquement votre collecte de donn\u00e9es</li> <li>Suivre les changements avec la gestion des versions de vos formulaires</li> <li>Valider depuis le web toutes les soumissions de formulaires envoy\u00e9es par l'application mobile IASO</li> <li>Suivre l'exhaustivit\u00e9 de la collecte de donn\u00e9es par niveau d'unit\u00e9s d'organisation et identifier o\u00f9 se trouvent les probl\u00e8mes</li> </ul> </li> <li> <p>Microplanification</p> <ul> <li>G\u00e9rer des \u00e9quipes d'utilisateurs et des \u00e9quipes d'\u00e9quipes</li> <li>Attribuer des t\u00e2ches de collecte de donn\u00e9es aux \u00e9quipes et aux utilisateurs en utilisant une carte interactive</li> <li>Cr\u00e9er des plannings avec un p\u00e9rim\u00e8tre, une dur\u00e9e et un ou plusieurs formulaires de collecte de donn\u00e9es</li> </ul> </li> <li> <p>Entit\u00e9s - celles-ci peut consister en des individus (par exemple, les b\u00e9n\u00e9ficiaires de programmes de sant\u00e9) ou des objets physiques (par exemple, des lots de vaccins, des moustiquaires, etc.). Les workflows permettent de suivre les entit\u00e9s en ouvrant des formulaires sp\u00e9cifiques en fonction des r\u00e9ponses donn\u00e9es \u00e0 des formulaires pr\u00e9c\u00e9dents.</p> <ul> <li>Cr\u00e9er des types d'entit\u00e9s (b\u00e9n\u00e9ficiaires, stocks ou autres)</li> <li>Attribuer des workflows \u00e0 des types d'entit\u00e9s</li> <li>Enregistrer des entit\u00e9s via l'application mobile (hors ligne)</li> <li>Synchroniser les applications mobile et web</li> <li>Comparer et fusionner des entit\u00e9s si n\u00e9cessaire</li> <li>Enregistrer les donn\u00e9es des entit\u00e9s sur une carte NFC</li> </ul> </li> </ul> <p>La plateforme a \u00e9t\u00e9 mise en \u0153uvre au B\u00e9nin, au Burkina Faso, au Burundi, au Cameroun, en R\u00e9publique Centrafricaine, en R\u00e9publique D\u00e9mocratique du Congo, en Ha\u00efti, en C\u00f4te d'Ivoire, au Mali, au Niger, au Nig\u00e9ria et en Ouganda. Elle est le registre g\u00e9ographique officiel au Burkina Faso depuis 2023. IASO a \u00e9galement \u00e9t\u00e9 mise en \u0153uvre au niveau r\u00e9gional (r\u00e9gion AFRO) pour soutenir l'Initiative Mondiale pour l'Eradication de la Polio gr\u00e2ce \u00e0 ses capacit\u00e9s de registres g\u00e9ospatiaux et d'\u00e9tablissements de sant\u00e9.</p>"},{"location":"fr/index.html#technologies-utilisees","title":"Technologies utilis\u00e9es","text":"<p>IASO est compos\u00e9e d'une application Android white labeled utilisant Java/Kotlin, r\u00e9utilisant une grande partie des projets ODK, et d'une plateforme web programm\u00e9e en Python/GeoDjango sur PostGIS. Le frontend est principalement en React/Leaflet. L'API est impl\u00e9ment\u00e9e via Django Rest Framework, et toutes les donn\u00e9es sont stock\u00e9es dans PostgreSQL ou le r\u00e9pertoire media/. L'un des objectifs est la facilit\u00e9 d'int\u00e9gration avec d'autres plateformes. Nous avons d\u00e9j\u00e0 des imports et exports en formats CSV et GeoPackage, et nous visons une int\u00e9gration facile avec OSM.</p> <p>L'application mobile pour Android permet la soumission de formulaires et la cr\u00e9ation d'unit\u00e9s d'organisation. Les formulaires peuvent \u00e9galement \u00eatre remplis dans une interface web via le service compagnon Enketo.</p>"},{"location":"fr/pages/dev/how_to/add_new_permission/add_new_permission.html","title":"Add new permission","text":""},{"location":"fr/pages/dev/how_to/add_new_permission/add_new_permission.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/how_to/contribute/contribute.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/how_to/create_entities_in_web_ui/create_entities_in_web_ui.html","title":"Create entities in web ui","text":""},{"location":"fr/pages/dev/how_to/create_entities_in_web_ui/create_entities_in_web_ui.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/how_to/create_registry_in_web_ui/create_registry_in_web_ui.html","title":"Create registry in web ui","text":""},{"location":"fr/pages/dev/how_to/create_registry_in_web_ui/create_registry_in_web_ui.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/how_to/debug_backend/debug_backend.html","title":"Debug backend","text":""},{"location":"fr/pages/dev/how_to/debug_backend/debug_backend.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/how_to/deploy/deploy.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/how_to/exclude_featureflag_related_module/exclude_featureflag_related_module.html","title":"Exclude featureflag related module","text":""},{"location":"fr/pages/dev/how_to/exclude_featureflag_related_module/exclude_featureflag_related_module.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/how_to/manually_test_enketo/manually_test_enketo.html","title":"Manually test enketo","text":""},{"location":"fr/pages/dev/how_to/manually_test_enketo/manually_test_enketo.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/how_to/rebuild_front/rebuild_front.html","title":"Rebuild front","text":""},{"location":"fr/pages/dev/how_to/rebuild_front/rebuild_front.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/how_to/run_docs_locally/run_docs_locally.html","title":"Run docs locally","text":""},{"location":"fr/pages/dev/how_to/run_docs_locally/run_docs_locally.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/how_to/setup_dev_env/setup_dev_env.html","title":"Setup dev env","text":""},{"location":"fr/pages/dev/how_to/setup_dev_env/setup_dev_env.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/how_to/setup_dev_env/setuper.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/how_to/use_iaso_apis/use_iaso_apis.html","title":"Use iaso apis","text":""},{"location":"fr/pages/dev/how_to/use_iaso_apis/use_iaso_apis.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/how_to/write_visit_on_nfc/write_visit_on_nfc.html","title":"Write visit on nfc","text":""},{"location":"fr/pages/dev/how_to/write_visit_on_nfc/write_visit_on_nfc.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/API/org_unit_change_request_configuration.html","title":"Org unit change request configuration","text":""},{"location":"fr/pages/dev/reference/API/org_unit_change_request_configuration.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/API/org_unit_registry.html","title":"Org unit registry","text":""},{"location":"fr/pages/dev/reference/API/org_unit_registry.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/API/payments/payments.html","title":"Payments","text":""},{"location":"fr/pages/dev/reference/API/payments/payments.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/campaigns/subactivities.html","title":"Subactivities","text":""},{"location":"fr/pages/dev/reference/campaigns/subactivities.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/data_model_glossary/data_model_glossary.html","title":"Data model glossary","text":""},{"location":"fr/pages/dev/reference/data_model_glossary/data_model_glossary.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/doc_setup/doc_setup.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/docker/docker.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/entities_in_iaso/entities_in_iaso.html","title":"Entities in iaso","text":""},{"location":"fr/pages/dev/reference/entities_in_iaso/entities_in_iaso.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/env_variables/env_variables.html","title":"Env variables","text":""},{"location":"fr/pages/dev/reference/env_variables/env_variables.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/front-end_reference/front-end_reference.html","title":"Front end reference","text":""},{"location":"fr/pages/dev/reference/front-end_reference/front-end_reference.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/guidelines/back-end/back-end.html","title":"Back end","text":""},{"location":"fr/pages/dev/reference/guidelines/back-end/back-end.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/guidelines/front-end/front-end.html","title":"Front end","text":""},{"location":"fr/pages/dev/reference/guidelines/front-end/front-end.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/guidelines/git/git.html","title":"Git","text":""},{"location":"fr/pages/dev/reference/guidelines/git/git.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/public_registry/public_registry.html","title":"Public registry","text":""},{"location":"fr/pages/dev/reference/public_registry/public_registry.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html","title":"SQL Dashboard feature","text":""},{"location":"fr/pages/dev/reference/sql_dashboard/SQL_Dashboard_feature.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/dev/reference/vector_control/vector_control.html","title":"Vector control","text":""},{"location":"fr/pages/dev/reference/vector_control/vector_control.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/users/FAQ/faq.html","title":"Faq","text":""},{"location":"fr/pages/users/FAQ/faq.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/users/how_to/convert_docx_to_md/convert_docx_to_md.html","title":"Convert docx to md","text":""},{"location":"fr/pages/users/how_to/convert_docx_to_md/convert_docx_to_md.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/users/how_to/create_new_documentation_page/create_new_documentation_page.html","title":"Create new documentation page","text":""},{"location":"fr/pages/users/how_to/create_new_documentation_page/create_new_documentation_page.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/users/how_to/edit_documentation/edit_documentation.html","title":"Edit documentation","text":""},{"location":"fr/pages/users/how_to/edit_documentation/edit_documentation.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/users/how_to/setup_an_empty_iaso_account/setup_an_empty_iaso_account.html","title":"Setup an empty iaso account","text":""},{"location":"fr/pages/users/how_to/setup_an_empty_iaso_account/setup_an_empty_iaso_account.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/users/how_to/setup_dhis2_login_in_iaso/setup_dhis2_login_in_iaso.html","title":"Setup dhis2 login in iaso","text":""},{"location":"fr/pages/users/how_to/setup_dhis2_login_in_iaso/setup_dhis2_login_in_iaso.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/users/reference/iaso_concepts/iaso_concepts.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/users/reference/iaso_mobile/iaso_mobile.html","title":"Application mobile","text":""},{"location":"fr/pages/users/reference/iaso_mobile/iaso_mobile.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/users/reference/iaso_modules/iaso_modules.html","title":"Modules","text":""},{"location":"fr/pages/users/reference/iaso_modules/iaso_modules.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/users/reference/iaso_web/user_guide.html","title":"Plateforme web","text":""},{"location":"fr/pages/users/reference/iaso_web/user_guide.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""},{"location":"fr/pages/users/reference/interop/interop.html","title":"Interop\u00e9rabilit\u00e9: roadmap 2023-2024","text":""},{"location":"fr/pages/users/reference/interop/interop.html#traduction-francaise-bientot-disponible","title":"Traduction fran\u00e7aise bient\u00f4t disponible","text":""}]}