name: Automated CI testing
# This workflow run automatically for every commit on github it checks the syntax and launch the tests.
on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: mdillon/postgis:10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a health check
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Use node.js 10
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Install GDAL
        run: sudo apt install gdal-bin

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Environment info
        run: |
          node --version
          npm --version
          pip list

      - name: npm install and test
        run: |
          npm install
          npm test
        env:
          CI: true

      - name: Check formatting with black
        run: |
          black --check .

      - name: Django tests
        run: |
          python manage.py migrate
          python manage.py test
        env:
          CI: true
          IASO_ENVIRONMENT: development
          RDS_DB_NAME: github_actions
          SECRET_KEY: secret
          DEBUG: true
          DJANGO_SETTINGS_MODULE: hat.settings
          RDS_PASSWORD: postgres
          RDS_HOSTNAME: localhost
          RDS_PORT: 5432
          RDS_USERNAME: postgres
          CACHE: false
          DEV_SERVER: true
          PLUGIN_POLIO_ENABLED: true
          AWS_STORAGE_BUCKET_NAME: iaso-dev
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DEFAULT_FILE_STORAGE: storages.backends.s3boto3.S3Boto3Storage

      - name: slack notification
        uses: rtCamp/action-slack-notify@v2.1.3
        env:
          SLACK_USERNAME: github-actions/main.yml
          SLACK_ICON_EMOJI: ":robot_face:"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: iaso-dev
          SLACK_TITLE: Automated CI Testing failed
          SLACK_COLOR: #FF4500
          SLACK_FOOTER: "-"
          MSG_MINIMAL: ref,actions url
        if: failure()
