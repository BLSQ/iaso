services:
    iaso:
        stdin_open: true
        tty: true
        build:
            context: .
            dockerfile: docker/django/Dockerfile
        image: iaso
        ports:
            - '8081:8081'
        volumes: &hat_volumes
            - ./manage.py:/opt/app/manage.py
            - ./hat:/opt/app/hat
            - ./iaso:/opt/app/iaso
            - ./setuper:/opt/app/setuper
            - ./beanstalk_worker:/opt/app/beanstalk_worker
            - ./django_sql_dashboard_export:/opt/app/django_sql_dashboard_export
            - ./media:/opt/app/media
            - ./plugins:/opt/app/plugins
            - ./scripts:/opt/app/scripts
            - ./entrypoint.sh:/opt/app/entrypoint.sh
            - ./README.md:/opt/app/README.md
            - ./tsconfig.json:/opt/app/tsconfig.json
            - ./babel-register.js:/opt/app/babel-register.js
            - ./mypy.ini:/opt/app/mypy.ini
            - ./pyproject.toml:/opt/app/pyproject.toml
            # test data
            - ./testdata:/opt/app/testdata
            # jupyter notebooks
            - ./notebooks:/opt/notebooks
            # Optional Used to load dev bluesquare-components JS. See `Live Bluesquare components` in doc
            - ../bluesquare-components:/opt/bluesquare-components
        links: &hat_links
            - db
        environment: &hat_environment
            APP_TITLE:
            AWS_ACCESS_KEY_ID:
            AWS_SECRET_ACCESS_KEY:
            AWS_STORAGE_BUCKET_NAME:
            CLAMAV_ACTIVE:
            CLAMAV_FQDN:
            DB_READONLY_PASSWORD: postgres
            DB_READONLY_USERNAME: postgres
            DEBUG: 'true'
            DEBUG_SQL:
            DISABLE_PASSWORD_LOGINS:
            DNS_DOMAIN:
            EMAIL_BACKEND: 'django.core.mail.backends.console.EmailBackend'
            ENKETO_API_TOKEN: AZE78974654azeAZE
            ENKETO_DEV: 'true'
            ENKETO_URL: http://enketo:8005/
            FAVICON_PATH:
            GOOGLE_API_KEY_BASE64:
            LIVE_COMPONENTS:
            LOGO_PATH:
            LQAS_PIPELINE: #Optional: the version of the pipeline to run
            LQAS_PIPELINE_VERSION: # "prod", "staging" or "custom". Use "custom" for local testing
            MAINTENANCE_MODE:
            OH_PIPELINE_TARGET:
            OPENHEXA_TOKEN: #OpenHexa API url
            OPENHEXA_URL: #OpenHexa pipeline ID
            PLUGINS:
            PREPAREDNESS_TEMPLATE_FR_ID:
            PREPAREDNESS_TEMPLATE_ID:
            PYTHONUNBUFFERED: 'true'
            RDS_DB_NAME:
            RDS_HOSTNAME: db
            RDS_PASSWORD: postgres
            RDS_USERNAME: postgres
            SECRET_KEY: secret
            SENTRY_ENVIRONMENT:
            SENTRY_FRONT_ENABLED:
            SENTRY_URL:
            SERVER_URL:
            SHOW_NAME_WITH_LOGO:
            SUPERSET_ADMIN_PASSWORD:
            SUPERSET_ADMIN_USERNAME:
            SUPERSET_URL:
            TEST_PROD:
            THEME_PRIMARY_BACKGROUND_COLOR: #OpenHexa API token
            THEME_PRIMARY_COLOR:
            THEME_SECONDARY_COLOR:
            WFP_AUTH_ACCOUNT:
            WFP_AUTH_CLIENT_ID:
            WFP_EMAIL_RECIPIENTS_NEW_ACCOUNT:
        logging: &iaso_logging
            driver: 'json-file'
            options:
                max-size: '5k'
        command: start_dev

    db:
        # https://registry.hub.docker.com/r/postgis/postgis
        # Pinning specific minor versions of PostgreSQL and PostGIS is not easy.
        # https://github.com/postgis/docker-postgis/issues/396
        image: postgis/postgis:16-3.5
        logging: *iaso_logging
        ports:
            - '5433:5432'
        volumes:
            - ../pgdata-iaso-16:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: ${RDS_DB_NAME}
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres

    # the webpack dev server
    webpack:
        image: iaso-webpack
        platform: linux/amd64
        build:
            context: .
            dockerfile: docker/webpack/Dockerfile
        depends_on:
            - iaso
        ports:
            - '3000:3000'
        volumes: *hat_volumes
        environment: *hat_environment
        logging: *iaso_logging
        command: start_webpack
