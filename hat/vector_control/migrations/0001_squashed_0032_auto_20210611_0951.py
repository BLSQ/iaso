# Generated by Django 3.1.14 on 2022-01-10 12:21

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    replaces = [('vector_control', '0001_initial'), ('vector_control', '0002_auto_20181207_1112'), ('vector_control', '0003_site_is_reference'), ('vector_control', '0004_auto_20181211_1233'), ('vector_control', '0005_auto_20181211_1551'), ('vector_control', '0006_auto_20181212_1005'), ('vector_control', '0007_auto_20181218_0936'), ('vector_control', '0008_auto_20181218_1426'), ('vector_control', '0009_auto_20181218_1438'), ('vector_control', '0010_auto_20181218_1457'), ('vector_control', '0011_auto_20181220_1318'), ('vector_control', '0012_apiimport_json_body'), ('vector_control', '0013_gpsimport_count'), ('vector_control', '0014_auto_20190104_1112'), ('vector_control', '0015_auto_20190104_1231'), ('vector_control', '0016_auto_20190109_1622'), ('vector_control', '0017_catch_problem'), ('vector_control', '0018_auto_20190221_1811'), ('vector_control', '0019_auto_20190225_1007'), ('vector_control', '0020_vector_refactor'), ('vector_control', '0021_auto_20190227_1737'), ('vector_control', '0022_site_creator'), ('vector_control', '0023_trap_river'), ('vector_control', '0024_remove_trap_is_reference'), ('vector_control', '0025_auto_20190530_0943'), ('vector_control', '0026_auto_20190531_0744'), ('vector_control', '0027_auto_20190628_1129'), ('vector_control', '0028_auto_20190628_1342'), ('vector_control', '0029_apiimport_has_problem'), ('vector_control', '0030_extra_info_api_import'), ('vector_control', '0031_auto_20200721_1125'), ('vector_control', '0032_auto_20210611_0951')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GpsImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.TextField()),
                ('file_date_time', models.DateTimeField(null=True)),
                ('creator', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('count', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='APIImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('import_type', models.TextField(blank=True, choices=[('site', 'Site'), ('catch', 'Catch'), ('target', 'Target')], max_length=25, null=True)),
                ('json_body', django.contrib.postgres.fields.jsonb.JSONField(default='{}')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('accuracy', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('habitat', models.TextField(blank=True, choices=[('bush', 'Buisson'), ('fish_pond', 'Etang à poissons'), ('farm', 'Ferme'), ('forest', 'Forêt'), ('unknown', 'Inconnu'), ('lake', 'Lac'), ('river', 'Rivière'), ('road', 'Route'), ('stream', 'Ruisseau')], max_length=255, null=True)),
                ('description', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('total', models.IntegerField(default=0)),
                ('uuid', models.TextField(default=uuid.uuid4, unique=True)),
                ('source', models.TextField(choices=[('excel', 'Excel'), ('API', 'API')], default='excel', null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('is_reference', models.BooleanField(default=False)),
                ('location', django.contrib.gis.db.models.fields.PointField(dim=3, null=True, srid=4326)),
                ('ignore', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('api_import', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='vector_control.apiimport')),
            ],
        ),
        migrations.CreateModel(
            name='Catch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setup_date', models.DateTimeField(null=True)),
                ('collect_date', models.DateTimeField(null=True)),
                ('male_count', models.IntegerField(default=0, null=True)),
                ('female_count', models.IntegerField(default=0, null=True)),
                ('unknown_count', models.IntegerField(default=0, null=True)),
                ('remarks', models.TextField(default='')),
                ('uuid', models.TextField(default=uuid.uuid4, unique=True)),
                ('source', models.TextField(choices=[('excel', 'Excel'), ('API', 'API')], default='excel', null=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vector_control.site')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('end_location', django.contrib.gis.db.models.fields.PointField(dim=3, null=True, srid=4326)),
                ('end_accuracy', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('start_accuracy', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('start_location', django.contrib.gis.db.models.fields.PointField(dim=3, null=True, srid=4326)),
                ('api_import', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='vector_control.apiimport')),
                ('problem', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'catches',
            },
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('deployment', models.IntegerField(blank=True, null=True)),
                ('full_name', models.TextField(blank=True, null=True)),
                ('gps', models.CharField(blank=True, max_length=100, null=True)),
                ('date_time', models.DateTimeField(null=True)),
                ('river', models.TextField(blank=True, null=True)),
                ('gps_import', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vector_control.gpsimport')),
                ('location', django.contrib.gis.db.models.fields.PointField(dim=3, null=True, srid=4326)),
                ('ignore', models.BooleanField(default=False)),
                ('api_import', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vector_control.apiimport')),
                ('external_index', models.IntegerField(blank=True, null=True)),
                ('uuid', models.TextField(blank=True, null=True)),
                ('village', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.RunSQL(
            sql='delete from vector_control_catch',
        ),
        migrations.RunSQL(
            sql='delete from vector_control_site',
        ),
        migrations.RunSQL(
            sql='drop table if exists vector_catch',
        ),
        migrations.RunSQL(
            sql='drop table if exists vector_site',
        ),
        migrations.RunSQL(
            sql='drop table if exists vector_target',
        ),
        migrations.RunSQL(
            sql='drop table if exists vector_gpswaypoint',
        ),
        migrations.RunSQL(
            sql='drop table if exists vector_gpsimport',
        ),
        migrations.RemoveField(
            model_name='site',
            name='description',
        ),
        migrations.RemoveField(
            model_name='site',
            name='habitat',
        ),
        migrations.RemoveField(
            model_name='site',
            name='is_reference',
        ),
        migrations.RemoveField(
            model_name='site',
            name='source',
        ),
        migrations.RemoveField(
            model_name='site',
            name='total',
        ),
        migrations.RemoveField(
            model_name='site',
            name='user',
        ),
        migrations.AlterField(
            model_name='apiimport',
            name='import_type',
            field=models.TextField(blank=True, choices=[('trap', 'Trap'), ('site', 'Site'), ('catch', 'Catch'), ('target', 'Target')], max_length=25, null=True),
        ),
        migrations.RemoveField(
            model_name='site',
            name='api_import',
        ),
        migrations.AlterField(
            model_name='site',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='site',
            name='name',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='site',
            name='uuid',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Trap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('accuracy', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('habitat', models.TextField(blank=True, choices=[('bush', 'Buisson'), ('fish_pond', 'Etang à poissons'), ('farm', 'Ferme'), ('forest', 'Forêt'), ('unknown', 'Inconnu'), ('lake', 'Lac'), ('river', 'Rivière'), ('road', 'Route'), ('stream', 'Ruisseau')], max_length=255, null=True)),
                ('description', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total', models.IntegerField(default=0)),
                ('uuid', models.TextField(default=uuid.uuid4, unique=True)),
                ('source', models.TextField(choices=[('excel', 'Excel'), ('API', 'API')], default='excel', null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(dim=3, null=True, srid=4326)),
                ('ignore', models.BooleanField(default=False)),
                ('is_selected', models.BooleanField(default=True)),
                ('river', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='catch',
            name='trap',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='vector_control.trap'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='catch',
            name='problem',
            field=models.TextField(blank=True, choices=[('ants', 'Fourmis'), ('damaged', 'Endommagé'), ('fallen', 'Tombé'), ('forest', 'Forêt'), ('flood', 'Innondé'), ('missing', 'Manquant'), ('moved', 'Bougé')], max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='catch',
            name='problem',
            field=models.TextField(blank=True, choices=[('ants', 'Fourmis'), ('damaged', 'Endommagé'), ('fallen', 'Tombé'), ('flood', 'Innondé'), ('missing', 'Manquant'), ('moved', 'Bougé')], max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='apiimport',
            name='import_type',
            field=models.TextField(blank=True, choices=[('trap', 'Trap'), ('site', 'Site'), ('catch', 'Catch'), ('target', 'Target'), ('orgUnit', 'Org Unit')], max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='apiimport',
            name='import_type',
            field=models.TextField(blank=True, choices=[('trap', 'Trap'), ('site', 'Site'), ('catch', 'Catch'), ('target', 'Target'), ('orgUnit', 'Org Unit'), ('instance', 'Form instance')], max_length=25, null=True),
        ),
        migrations.AddField(
            model_name='apiimport',
            name='has_problem',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='apiimport',
            name='exception',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AddField(
            model_name='apiimport',
            name='headers',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.RemoveField(
            model_name='gpsimport',
            name='user',
        ),
        migrations.RemoveField(
            model_name='target',
            name='api_import',
        ),
        migrations.RemoveField(
            model_name='target',
            name='gps_import',
        ),
        migrations.AlterField(
            model_name='apiimport',
            name='import_type',
            field=models.TextField(blank=True, choices=[('orgUnit', 'Org Unit'), ('instance', 'Form instance')], max_length=25, null=True),
        ),
        migrations.DeleteModel(
            name='Catch',
        ),
        migrations.DeleteModel(
            name='GpsImport',
        ),
        migrations.DeleteModel(
            name='Site',
        ),
        migrations.DeleteModel(
            name='Target',
        ),
        migrations.DeleteModel(
            name='Trap',
        ),
        migrations.AlterField(
            model_name='apiimport',
            name='json_body',
            field=models.JSONField(),
        ),
    ]
